<?php


namespace Drupal\miniorange_saml;

use DOMElement;
use DOMNode;
use DOMXPath;
use DOMDocument;
use Drupal\Core\Render\Markup;
use Drupal\Component\Utility\Xss;
use Drupal\user\Entity\User;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\miniorange_saml\MiniorangeSAMLConstants;
class Utilities
{
    public static function customUserFields()
    {
        $hF = array('' => "\x53\145\154\x65\143\x74\40\x41\164\164\162\x69\142\x75\164\x65\40\126\x61\x6c\165\x65");
        $M9 = User::load(\Drupal::currentUser()->id());
        $aR = $M9->toArray();
        foreach ($aR as $yQ => $Ox) {
            if (!(strpos($yQ, "\146\x69\145\x6c\144\x5f") === 0)) {
                goto cr;
            }
            $hF[$yQ] = $yQ;
            cr:
            PW:
        }
        gy:
        return $hF;
    }
    static function isMultiple($Ez)
    {
        $e5 = User::load(\Drupal::currentUser()->id());
        $Id = $e5->get($Ez);
        $cB = $Id->getFieldDefinition()->getFieldStorageDefinition();
        return $cB->isMultiple();
    }
    public static function isCustomerRegistered(&$form, $form_state, $M1 = false)
    {
        global $base_url;
        $dI = $base_url . "\57\x61\144\x6d\151\x6e\57\143\157\x6e\x66\x69\x67\57\x70\x65\x6f\x70\x6c\x65\57\155\151\156\151\157\162\141\156\147\x65\137\x73\141\x6d\154\x2f\x63\165\163\x74\x6f\155\145\x72\137\163\x65\164\165\x70\x2f";
        if (\Drupal::config("\155\x69\156\151\157\x72\x61\x6e\147\145\x5f\163\x61\x6d\x6c\56\163\145\164\x74\151\156\147\163")->get("\155\151\x6e\x69\157\x72\x61\156\x67\145\137\163\141\155\154\x5f\143\x75\163\164\157\155\145\162\x5f\141\144\x6d\151\x6e\137\x65\x6d\141\x69\x6c") == NULL || \Drupal::config("\x6d\151\x6e\x69\157\162\x61\x6e\147\145\137\x73\141\155\154\56\x73\145\x74\x74\151\156\147\x73")->get("\x6d\151\x6e\151\157\x72\141\156\147\x65\137\163\141\155\x6c\x5f\143\x75\x73\x74\x6f\x6d\145\x72\137\151\144") == NULL || \Drupal::config("\x6d\151\156\151\157\162\141\x6e\147\145\x5f\x73\x61\155\154\56\163\x65\x74\164\151\156\x67\163")->get("\x6d\x69\156\x69\x6f\x72\x61\156\x67\145\x5f\x73\x61\x6d\154\137\143\165\x73\x74\157\x6d\x65\x72\x5f\x61\144\155\151\x6e\x5f\164\157\x6b\x65\156") == NULL || \Drupal::config("\155\x69\156\x69\x6f\162\x61\156\x67\x65\x5f\x73\x61\155\154\x2e\x73\145\x74\164\x69\156\147\163")->get("\155\x69\156\151\157\162\x61\156\147\x65\x5f\163\141\x6d\154\137\143\165\x73\x74\x6f\x6d\145\x72\x5f\x61\x70\151\137\x6b\145\x79") == NULL) {
            goto u7;
        }
        if (\Drupal::config("\155\x69\156\x69\x6f\162\141\x6e\x67\x65\137\x73\141\x6d\154\56\163\x65\x74\x74\x69\x6e\x67\x73")->get("\x6d\x69\x6e\151\157\x72\141\156\147\145\137\x73\141\x6d\154\137\154\x69\143\145\x6e\163\145\137\x6b\145\x79") == NULL) {
            goto u0;
        }
        return FALSE;
        goto SG;
        u0:
        $form["\155\141\x72\153\x75\160\x5f\x6d\163\x67"] = array("\x23\155\x61\x72\x6b\x75\160" => "\x3c\x64\x69\x76\x20\x63\154\x61\x73\x73\x3d\42\x6d\157\137\163\141\155\x6c\x5f\x72\x65\147\x69\x73\164\145\x72\137\155\145\x73\163\x61\x67\x65\42\76\131\157\165\x20\x6e\x65\x65\144\40\164\x6f\40\74\141\40\x68\x72\x65\x66\75\x22" . $dI . "\42\40\76\x76\145\x72\x69\146\x79\x20\171\157\x75\162\x20\x6c\151\x63\x65\156\163\x65\74\x2f\x61\x3e\40\153\145\171\x20\142\145\146\x6f\x72\x65\x20\x75\163\151\156\x67\40\x74\150\x69\x73\x20\x6d\157\x64\165\154\145\56\74\57\144\151\x76\x3e");
        return TRUE;
        SG:
        goto j3;
        u7:
        $form["\x6d\x61\162\153\165\x70\x5f\162\x65\147\x5f\155\x73\147"] = array("\43\x6d\x61\162\x6b\x75\160" => "\x3c\x64\151\x76\40\x63\x6c\x61\163\x73\x3d\x22\x6d\x6f\x5f\163\141\x6d\x6c\x5f\162\x65\147\151\163\164\145\162\x5f\155\145\163\163\141\147\x65\42\76\131\x6f\165\x20\x6e\x65\145\x64\40\164\157\x20\x3c\x61\x20\x68\x72\145\x66\x3d\42" . $dI . "\x22\x20\x3e\154\157\x67\x69\x6e\74\57\x61\76\x20\165\x73\x69\x6e\x67\x20\x6d\x69\x6e\x69\x4f\x72\x61\x6e\147\145\40\141\143\143\x6f\165\x6e\x74\x20\x62\145\x66\x6f\x72\x65\x20\165\163\x69\x6e\x67\x20\x74\x68\x69\x73\x20\155\x6f\x64\x75\154\x65\56\74\x2f\x64\x69\166\x3e");
        return TRUE;
        j3:
    }
    public static function spConfigGuide(array &$form, \Drupal\Core\Form\FormStateInterface $form_state)
    {
        $form["\x6d\x69\156\151\x6f\x72\x61\156\x67\x65\x5f\x69\144\x70\137\147\165\x69\144\145\137\154\x69\x6e\153\x31"] = array("\x23\155\x61\162\x6b\x75\160" => "\x3c\144\151\166\40\x63\x6c\x61\163\x73\75\x22\x6d\x6f\137\163\x61\155\154\137\164\x61\142\x6c\145\137\x6c\x61\171\x6f\165\164\40\x6d\x6f\137\163\141\x6d\154\137\143\157\156\x74\x61\151\x6e\145\162\137\62\x22\40\x69\x64\x3d\x22\155\157\x5f\147\165\151\144\145\137\x76\x74\x22\x3e\12\x20\40\40\x20\40\40\40\x20\40\x20\x20\x20\40\40\40\x20\40\40\x20\40\74\x64\x69\166\x20\x73\x74\x79\x6c\145\x3d\x22\146\157\156\x74\x2d\163\151\172\x65\x3a\x20\61\65\x70\170\x3b\42\x3e\124\157\40\163\x65\145\x20\144\145\x74\141\x69\x6c\145\144\40\x64\x6f\x63\x75\155\x65\x6e\164\x61\164\151\157\156\40\x6f\x66\x20\150\157\167\x20\164\x6f\40\143\157\156\146\x69\x67\x75\162\x65\x20\104\x72\165\160\x61\154\x20\x53\x41\115\114\x20\x53\120\x20\167\x69\164\150\x20\x61\156\171\x20\x49\144\145\156\x74\151\164\x79\x20\120\x72\157\166\151\x64\145\x72\x3c\x2f\144\151\x76\76\x3c\x2f\x62\162\76");
        $uc = Markup::create("\x3c\163\x74\162\157\156\x67\x3e\x3c\x61\x20\x68\162\x65\x66\75\42\150\164\164\x70\x73\72\x2f\57\160\x6c\x75\147\x69\156\163\56\155\151\156\151\x6f\x72\141\156\x67\145\x2e\143\x6f\155\57\144\x72\165\x70\x61\x6c\55\x73\x69\156\x67\154\x65\x2d\163\x69\147\156\55\163\x73\x6f\x2d\x75\x73\151\x6e\147\x2d\x61\x7a\165\162\x65\55\x61\144\x2d\x69\x64\x70\x2f\x22\x20\x63\154\x61\x73\163\75\42\x6d\x6f\137\x67\x75\x69\144\145\137\x74\145\x78\x74\55\x63\x6f\x6c\x6f\x72\x22\x20\164\x61\x72\x67\145\x74\75\x22\x5f\142\x6c\141\x6e\x6b\x22\76\101\172\x75\162\x65\40\x41\104\x3c\x2f\141\76\74\x2f\x73\164\162\157\156\147\76");
        $Gr = Markup::create("\x3c\x73\164\162\x6f\156\x67\76\74\x61\40\150\162\145\146\x3d\x22\150\x74\x74\x70\x73\x3a\57\57\160\154\x75\147\x69\156\163\x2e\x6d\x69\156\x69\x6f\x72\x61\x6e\x67\x65\56\143\157\155\57\x64\x72\165\x70\141\x6c\55\163\x69\156\147\x6c\x65\55\x73\151\147\156\55\x73\x73\x6f\55\165\x73\x69\156\147\55\141\144\146\x73\x2d\x69\144\160\x22\x20\143\x6c\x61\163\x73\75\x22\x6d\157\x5f\x67\165\x69\x64\145\137\164\145\170\x74\x2d\x63\x6f\x6c\x6f\162\42\40\x74\141\x72\x67\x65\x74\x3d\42\137\142\x6c\x61\156\x6b\42\76\101\x44\106\x53\74\57\x61\x3e\x3c\57\163\164\x72\x6f\x6e\147\x3e");
        $q7 = Markup::create("\74\163\x74\x72\157\x6e\147\76\74\x61\40\143\x6c\x61\x73\163\x3d\42\x6d\x6f\x5f\x67\165\151\144\x65\x5f\x74\x65\170\x74\55\143\157\x6c\x6f\x72\42\40\150\162\x65\146\x3d\42\x68\164\x74\x70\x73\x3a\x2f\57\x70\x6c\x75\147\151\156\x73\x2e\x6d\151\156\x69\x6f\162\141\x6e\x67\x65\x2e\x63\x6f\x6d\x2f\x64\162\x75\x70\x61\x6c\55\x73\151\x6e\x67\154\x65\55\x73\151\147\x6e\x2d\163\x73\157\55\x75\163\151\x6e\147\55\157\153\x74\141\x2d\x69\144\160\57\42\40\x74\141\x72\x67\145\x74\75\42\x5f\142\154\141\156\153\x22\x3e\x4f\x6b\164\141\x3c\57\141\76\74\x2f\163\x74\162\x6f\156\x67\76");
        $ob = Markup::create("\x3c\163\164\162\157\x6e\147\x3e\74\x61\40\150\x72\145\146\x3d\x22\x68\x74\164\160\x73\x3a\57\57\160\x6c\165\x67\151\x6e\163\x2e\155\x69\156\151\x6f\x72\x61\x6e\x67\x65\x2e\x63\x6f\x6d\x2f\144\x72\x75\160\141\154\x2d\163\151\x6e\147\x6c\x65\55\163\151\x67\156\x2d\163\163\x6f\x2d\165\x73\x69\156\147\x2d\x67\x6f\157\147\154\145\x2d\141\160\x70\x73\x2d\151\x64\160\x2f\42\40\143\154\141\163\163\x3d\42\155\157\x5f\147\x75\x69\144\145\137\x74\x65\170\164\x2d\143\157\154\x6f\162\42\40\x74\x61\x72\147\x65\x74\x3d\x22\137\142\154\x61\x6e\153\42\76\107\x6f\x6f\147\154\145\40\101\x70\160\x73\74\57\141\76\74\x2f\x73\x74\x72\x6f\x6e\147\x3e");
        $l1 = Markup::create("\x3c\x73\x74\162\157\156\147\x3e\74\141\x20\150\162\x65\x66\75\x22\150\164\164\x70\163\72\57\x2f\x70\154\x75\147\151\156\x73\56\155\151\156\x69\x6f\x72\141\156\147\145\56\143\157\x6d\x2f\144\162\x75\160\x61\154\55\x73\151\x6e\147\x6c\145\x2d\163\151\147\156\55\163\x73\x6f\55\165\x73\151\x6e\147\55\163\141\154\x65\163\146\x6f\162\143\145\x2d\x69\x64\x70\57\42\x20\143\154\141\x73\163\75\42\155\x6f\137\x67\165\x69\144\145\x5f\164\x65\170\164\55\x63\157\x6c\157\x72\x22\x20\164\141\x72\147\x65\x74\75\42\x5f\142\x6c\141\156\153\x22\76\x53\141\154\145\163\146\157\162\143\x65\x3c\57\141\76\74\57\x73\164\x72\x6f\x6e\x67\76");
        $Pz = Markup::create("\74\x73\164\162\x6f\156\x67\x3e\x3c\141\x20\x63\154\141\163\163\75\42\155\157\x5f\147\165\x69\144\x65\137\x74\145\170\x74\55\143\157\154\x6f\x72\42\x20\x68\x72\145\146\75\42\x68\x74\x74\x70\x73\x3a\x2f\x2f\x70\x6c\165\147\151\x6e\x73\56\155\151\156\151\157\162\x61\156\x67\145\x2e\143\x6f\155\x2f\x64\162\165\160\141\x6c\55\x73\151\x6e\x67\x6c\145\55\163\151\x67\156\x2d\163\x73\157\x2d\x75\x73\x69\x6e\x67\55\155\x69\x6e\151\x6f\x72\141\156\x67\x65\x2d\151\144\160\x2f\x22\40\x74\x61\x72\147\x65\x74\75\x22\x5f\x62\154\x61\x6e\153\42\76\x6d\x69\156\151\117\x72\141\x6e\147\x65\74\x2f\141\x3e\x3c\x2f\x73\164\x72\157\x6e\x67\76");
        $ZD = Markup::create("\x3c\163\164\x72\x6f\156\147\x3e\74\141\40\x63\x6c\141\163\x73\75\42\155\157\x5f\147\165\x69\x64\145\x5f\x74\x65\170\x74\55\x63\x6f\154\157\162\42\40\x68\162\145\146\75\42\150\164\164\x70\163\x3a\57\57\160\x6c\165\x67\151\156\x73\x2e\x6d\151\x6e\151\157\162\141\156\x67\x65\56\143\x6f\155\57\147\165\x69\x64\145\55\146\157\162\x2d\144\162\165\160\x61\x6c\55\x73\x69\x6e\x67\x6c\x65\x2d\163\151\147\156\55\157\156\55\x75\163\151\x6e\147\55\160\151\x6e\x67\157\156\x65\55\141\x73\55\151\x64\145\x6e\x74\x69\x74\171\55\160\x72\x6f\x76\x69\x64\145\162\42\40\164\x61\x72\x67\145\164\75\42\137\x62\x6c\x61\156\x6b\x22\76\120\x69\156\147\x4f\x6e\145\x3c\x2f\141\76\74\x2f\x73\164\x72\157\x6e\147\x3e");
        $gj = Markup::create("\x3c\x73\164\x72\x6f\x6e\147\x3e\74\x61\40\x68\x72\145\146\75\42\x68\164\164\160\x73\72\x2f\x2f\x70\x6c\x75\x67\151\156\163\56\155\151\x6e\151\157\x72\141\156\x67\145\56\x63\157\155\x2f\x64\x72\165\160\141\154\x2d\x73\x69\x6e\x67\x6c\145\x2d\163\151\147\x6e\x2d\x73\163\x6f\x2d\165\163\x69\x6e\x67\x2d\157\x6e\x65\x6c\157\147\x69\x6e\55\x69\x64\160\57\42\x20\143\x6c\141\x73\163\75\x22\x6d\x6f\137\147\x75\x69\144\145\x5f\164\x65\170\164\55\143\x6f\x6c\157\162\x22\40\x74\141\162\x67\x65\x74\x3d\x22\x5f\142\x6c\x61\156\153\42\76\117\x6e\145\154\157\x67\151\156\x3c\57\141\x3e\74\57\x73\x74\x72\157\x6e\x67\76");
        $t5 = Markup::create("\x3c\x73\x74\x72\157\x6e\x67\x3e\74\141\40\x68\162\145\146\x3d\42\x68\164\x74\160\x73\72\x2f\x2f\160\154\x75\x67\x69\x6e\163\x2e\155\x69\x6e\151\157\162\141\156\147\145\x2e\x63\157\155\x2f\x64\162\165\x70\141\154\x2d\163\151\x6e\147\154\x65\55\x73\x69\x67\x6e\x2d\163\x73\157\x2d\165\163\151\x6e\147\x2d\142\x69\x74\x69\165\x6d\x2d\x69\144\x70\42\x20\x63\154\x61\x73\163\75\x22\155\x6f\137\x67\x75\151\144\x65\137\164\x65\x78\164\x2d\143\157\154\x6f\x72\42\x20\x74\x61\x72\x67\145\164\75\42\x5f\142\154\x61\x6e\x6b\x22\x3e\102\151\x74\x69\x75\155\x3c\57\x61\76\x3c\x2f\163\164\x72\x6f\156\x67\76");
        $cj = Markup::create("\74\x73\x74\162\x6f\156\147\x3e\x3c\141\40\150\x72\x65\x66\x3d\x22\x68\164\164\160\163\72\57\x2f\160\x6c\165\x67\151\156\x73\x2e\155\151\x6e\151\x6f\162\x61\x6e\x67\x65\56\143\157\155\x2f\144\x72\x75\x70\x61\154\55\x73\x69\156\147\x6c\x65\x2d\163\151\147\x6e\x2d\x73\163\x6f\55\165\163\x69\156\x67\55\143\145\x6e\x74\162\151\x66\x79\x2d\151\144\160\x2f\x22\x20\143\154\x61\x73\x73\75\x22\x6d\157\x5f\x67\165\151\144\145\x5f\x74\x65\170\164\55\x63\157\154\157\162\x22\x20\x74\x61\x72\147\145\164\75\x22\137\142\x6c\141\156\x6b\x22\x3e\x43\x65\x6e\x74\x72\151\x66\x79\x3c\57\141\76\74\57\x73\164\162\x6f\156\x67\76");
        $OC = Markup::create("\x3c\x73\x74\162\x6f\x6e\x67\x3e\74\141\40\x68\x72\x65\x66\75\42\x68\x74\x74\x70\163\72\57\57\160\154\165\147\x69\x6e\x73\56\155\151\x6e\x69\x6f\x72\x61\x6e\147\145\x2e\143\x6f\x6d\57\147\x75\x69\144\x65\x2d\164\157\x2d\x63\157\x6e\146\x69\x67\165\x72\145\x2d\157\162\x61\143\154\x65\x2d\141\143\143\x65\x73\163\x2d\x6d\x61\156\x61\147\x65\x72\x2d\x61\x73\55\151\144\x70\x2d\141\x6e\x64\x2d\x64\162\x75\160\141\154\x2d\x61\163\x2d\x73\160\x22\40\143\154\x61\x73\x73\75\x22\x6d\x6f\137\147\x75\151\144\145\x5f\164\145\170\164\55\x63\x6f\154\157\x72\x22\x20\164\x61\162\x67\x65\x74\x3d\42\x5f\x62\154\141\x6e\153\x22\76\x4f\162\141\143\x6c\x65\74\x2f\x61\76\x3c\x2f\x73\164\x72\157\x6e\147\x3e");
        $Ca = Markup::create("\74\x73\164\x72\157\156\147\x3e\74\x61\x20\150\162\x65\x66\x3d\42\150\164\x74\x70\163\x3a\x2f\x2f\160\x6c\x75\147\151\x6e\x73\x2e\155\151\x6e\151\157\x72\141\156\x67\145\x2e\143\x6f\x6d\57\144\x72\165\160\x61\154\x2d\x73\x69\x6e\147\154\145\55\163\x69\147\x6e\x2d\157\x6e\55\163\x73\x6f\x2d\165\x73\x69\156\147\x2d\152\142\157\x73\x73\x2d\x6b\145\171\143\x6c\157\x61\x6b\55\141\163\x2d\x69\x64\x70\42\x20\143\154\x61\163\x73\x3d\x22\x6d\x6f\x5f\x67\165\151\144\x65\137\164\145\170\164\55\x63\157\x6c\x6f\x72\42\40\164\x61\x72\147\145\164\75\42\137\142\x6c\141\156\153\42\x3e\x4a\142\x6f\x73\x73\x20\x4b\145\x79\x63\x6c\x6f\141\153\x3c\57\141\76\74\x2f\163\x74\162\x6f\x6e\x67\x3e");
        $gT = Markup::create("\74\163\x74\x72\157\x6e\147\x3e\74\141\x20\x68\x72\145\x66\75\42\150\x74\164\160\163\x3a\57\57\x70\x6c\x75\147\151\x6e\x73\x2e\155\x69\x6e\x69\x6f\162\x61\156\147\x65\56\x63\157\x6d\57\x67\x75\151\144\145\x2d\x66\157\162\55\160\151\x6e\x67\146\x65\x64\145\x72\x61\164\145\x2d\141\x73\55\151\x64\x70\55\167\x69\x74\x68\x2d\144\x72\x75\x70\141\x6c\42\40\143\154\141\163\x73\x3d\42\155\157\137\x67\165\x69\x64\x65\137\x74\145\x78\x74\x2d\143\157\x6c\x6f\x72\42\x20\164\x61\x72\x67\145\x74\x3d\x22\x5f\142\x6c\x61\156\153\42\x3e\120\x69\x6e\147\40\x46\x65\x64\145\162\141\x74\145\74\57\141\76\74\57\x73\x74\162\x6f\156\147\x3e");
        $qG = Markup::create("\x3c\163\x74\162\x6f\x6e\x67\76\74\141\40\x68\162\x65\x66\x3d\42\x68\x74\x74\x70\163\72\57\57\x70\x6c\x75\147\151\x6e\163\56\155\151\x6e\x69\157\162\x61\x6e\147\x65\56\143\x6f\155\x2f\147\165\x69\144\145\x2d\x66\157\162\55\x6f\x70\145\x6e\x61\x6d\55\x61\163\x2d\x69\144\x70\x2d\167\x69\x74\x68\55\144\x72\x75\x70\141\x6c\42\40\x63\154\141\x73\x73\x3d\42\x6d\157\137\147\x75\x69\144\x65\x5f\164\145\170\x74\x2d\143\x6f\x6c\x6f\x72\x22\40\164\141\162\x67\x65\164\75\42\x5f\x62\154\141\156\153\x22\x3e\x4f\x70\145\x6e\x41\x4d\x3c\57\x61\x3e\74\x2f\x73\x74\x72\x6f\x6e\x67\76");
        $Vu = Markup::create("\74\x73\164\x72\157\x6e\147\x3e\74\141\40\150\162\145\146\x3d\x22\150\x74\164\160\x73\x3a\57\57\160\x6c\x75\x67\x69\x6e\x73\x2e\155\x69\156\151\x6f\162\141\x6e\147\x65\x2e\x63\157\x6d\57\x64\162\165\x70\141\x6c\55\x73\x69\x6e\x67\x6c\x65\55\x73\x69\x67\156\x2d\157\156\55\163\163\x6f\x2d\165\x73\x69\x6e\x67\x2d\141\165\164\150\141\x6e\x76\x69\154\x2d\141\x73\x2d\151\x64\x70\42\x20\143\154\141\x73\x73\x3d\42\x6d\157\137\x67\165\x69\x64\145\x5f\x74\145\170\164\55\x63\x6f\x6c\157\162\x22\x20\164\x61\x72\x67\x65\164\75\x22\x5f\142\154\x61\156\153\42\76\101\x75\164\x68\101\156\x76\151\154\x3c\x2f\141\x3e\x3c\x2f\163\164\162\157\156\x67\x3e");
        $VK = Markup::create("\x3c\163\164\162\157\x6e\x67\x3e\74\x61\40\150\162\145\146\75\x22\150\x74\x74\160\163\72\57\57\160\154\165\x67\151\156\x73\56\x6d\x69\x6e\x69\x6f\x72\x61\156\147\145\x2e\143\157\155\57\x67\165\x69\x64\x65\x2d\x66\x6f\162\55\141\x75\164\x68\x30\55\141\163\55\151\x64\160\x2d\167\x69\164\x68\55\x64\162\x75\160\141\x6c\x22\40\143\x6c\141\163\163\x3d\42\x6d\x6f\x5f\147\x75\x69\x64\145\137\164\x65\170\x74\x2d\143\157\x6c\157\162\x22\40\164\141\x72\x67\145\164\x3d\42\137\142\x6c\x61\x6e\153\42\x3e\141\x75\164\x68\60\74\57\x61\76\74\x2f\163\x74\162\x6f\156\147\x3e");
        $Rt = Markup::create("\74\x73\164\x72\x6f\x6e\x67\x3e\x3c\141\40\150\x72\145\x66\x3d\42\x68\164\x74\x70\x73\x3a\x2f\57\x70\x6c\165\x67\151\x6e\x73\56\155\x69\156\x69\x6f\162\141\x6e\x67\145\x2e\x63\x6f\x6d\57\147\165\x69\144\x65\55\x66\x6f\162\x2d\x64\162\165\x70\141\x6c\x2d\x73\151\156\147\x6c\145\x2d\163\151\x67\x6e\x2d\x6f\156\55\163\163\157\x2d\165\x73\x69\156\147\x2d\x72\163\141\x2d\163\145\x63\x75\x72\x69\x64\55\x61\x73\55\151\144\160\42\x20\x63\154\141\x73\x73\x3d\x22\x6d\x6f\137\x67\x75\151\x64\145\x5f\x74\x65\x78\164\x2d\143\x6f\x6c\x6f\x72\42\x20\164\x61\162\147\x65\164\75\42\137\142\x6c\141\156\x6b\x22\76\122\123\101\40\123\x65\x63\165\162\x49\104\74\x2f\x61\76\74\x2f\x73\164\x72\157\x6e\x67\76");
        $KF = Markup::create("\74\x73\x74\162\x6f\x6e\147\x3e\x3c\x61\40\150\x72\145\x66\75\x22\x68\x74\x74\x70\163\x3a\x2f\57\x70\154\165\147\x69\156\x73\56\155\x69\x6e\151\x6f\162\x61\156\147\145\56\x63\157\155\57\x63\157\x6e\146\x69\x67\165\x72\x65\x2d\x64\x72\165\x70\141\154\55\x73\141\155\154\55\x73\x69\x6e\147\154\x65\x2d\163\x69\147\156\x2d\x6f\156\42\x20\143\154\141\163\x73\75\42\x6d\x6f\x5f\x67\165\x69\144\x65\x5f\x74\145\170\x74\x2d\x63\x6f\154\x6f\x72\x22\x20\x74\x61\162\x67\x65\x74\x3d\42\x5f\x62\154\x61\x6e\x6b\x22\x3e\117\164\150\x65\162\40\x49\x44\120\x3c\x2f\141\76\74\57\163\x74\162\x6f\156\147\76");
        $ix = array(array($uc, $Gr), array($q7, $ob), array($l1, $gj), array($OC, $Ca), array($cj, $ZD), array($gT, $qG), array($Vu, $VK), array($Pz, $Rt));
        $I9 = array(array("\144\141\164\141" => t("\x49\144\145\x6e\164\x69\x74\x79\x20\x50\x72\157\166\x69\144\145\x72\40\123\145\x74\x75\160\x20\107\165\151\x64\145\x73"), "\x63\x6f\x6c\x73\x70\141\x6e" => 2, "\x73\164\171\x6c\145" => "\164\145\x78\164\x2d\141\x6c\x69\147\156\72\40\x63\x65\x6e\164\145\x72"));
        $form["\155\157\x64\x75\154\145\x73"] = array("\x23\164\171\160\x65" => "\x74\x61\x62\154\x65", "\x23\x68\x65\x61\144\x65\x72" => $I9, "\x23\162\157\x77\163" => $ix, "\43\141\164\x74\162\x69\x62\165\164\145\163" => ["\143\x6c\x61\163\163" => ["\155\x6f\x5f\147\x75\x69\x64\x65\137\164\141\x62\x6c\x65"]]);
        $form["\x6d\x6f\144\165\x6c\x65\x73"][8][0] = ["\43\x6d\x61\162\x6b\x75\160" => $KF, "\43\167\162\x61\x70\160\145\162\x5f\x61\164\x74\x72\x69\x62\x75\x74\x65\x73" => ["\x63\x6f\154\163\160\141\x6e" => 2]];
        self::faq($form, $form_state);
        $form["\155\x69\x6e\151\x6f\x72\141\156\x67\x65\137\x73\x70\x5f\x67\x75\151\x64\145\137\154\151\x6e\x6b\x5f\145\x6e\x64"] = array("\43\155\x61\162\153\x75\x70" => "\x3c\57\144\151\x76\x3e");
    }
    public static function faq(&$form, &$form_state)
    {
        $form["\x6d\x69\x6e\151\x6f\162\x61\x6e\147\x65\137\146\141\x71"] = array("\43\x6d\141\x72\x6b\165\160" => "\x3c\x64\151\x76\40\x63\x6c\141\x73\163\x3d\42\155\157\x5f\163\x61\155\154\137\x74\145\170\x74\137\x63\145\x6e\x74\x65\162\x22\x3e\x3c\142\76\x3c\57\142\x3e\12\40\x20\40\x20\40\40\40\x20\40\x20\40\40\x20\40\x20\40\x20\40\x20\x20\x20\x20\40\40\x20\x20\74\x61\40\x63\x6c\141\x73\163\x3d\42\142\x75\164\164\157\x6e\x20\x62\165\x74\164\x6f\156\x2d\55\160\162\151\x6d\x61\x72\171\x20\142\165\164\x74\157\156\55\x2d\163\155\x61\154\x6c\42\40\150\162\145\146\x3d\42\150\x74\x74\x70\x73\x3a\57\x2f\x66\141\161\56\155\151\156\151\x6f\162\141\156\x67\x65\x2e\x63\x6f\x6d\57\x6b\x62\x2f\x64\x72\x75\x70\141\154\57\163\141\155\x6c\x2d\144\162\x75\x70\141\154\57\42\40\164\141\162\147\x65\164\x3d\42\x5f\142\154\141\156\x6b\42\x3e\106\x41\x51\x73\x3c\x2f\x61\76\xa\40\x20\x20\40\40\x20\x20\40\x20\40\x20\x20\40\40\x20\40\40\40\x20\40\x20\40\x20\40\40\40\x3c\x62\x3e\74\57\142\x3e\74\141\x20\143\154\x61\163\163\75\42\142\x75\164\x74\157\156\x20\142\165\x74\164\157\x6e\x2d\x2d\x70\x72\151\x6d\141\162\x79\40\142\x75\164\164\157\x6e\55\x2d\163\x6d\141\154\x6c\42\40\x68\162\x65\x66\75\x22\x68\164\x74\x70\163\72\57\57\146\157\x72\165\155\56\x6d\151\156\x69\157\162\141\156\147\145\x2e\143\157\155\x2f\42\x20\x74\141\x72\x67\145\x74\x3d\42\137\142\154\x61\156\153\x22\76\101\x73\153\40\161\x75\145\163\x74\x69\157\x6e\x73\x20\157\156\x20\x66\157\162\165\x6d\74\x2f\141\x3e\x3c\57\x64\x69\166\x3e");
    }
    public static function send_support_query($vd, $YV, $BJ, $UC)
    {
        $sM = new MiniorangeSamlSupport($vd, $YV, $BJ, $UC);
        $h1 = $sM->sendSupportQuery();
        if ($h1) {
            goto Za;
        }
        return false;
        goto QR;
        Za:
        return true;
        QR:
    }
    public static function getClassNameForImport_Export()
    {
        $BS = array("\x49\x64\145\156\164\151\164\171\137\x50\x72\157\166\151\x64\145\162" => "\x6d\157\x5f\157\160\164\x69\x6f\x6e\163\137\145\x6e\165\155\x5f\x69\144\145\x6e\x74\151\x74\171\137\x70\162\x6f\166\151\144\x65\162", "\x53\x65\162\x76\151\x63\145\x5f\x50\x72\157\166\151\144\x65\x72" => "\155\157\x5f\157\x70\x74\x69\157\156\x73\x5f\x65\156\x75\155\137\163\x65\x72\x76\151\x63\145\137\160\x72\157\x76\151\x64\x65\162", "\x53\151\147\156\151\x6e\x5f\x53\x65\x74\x74\x69\x6e\147\163" => "\x6d\x6f\x5f\157\160\x74\x69\x6f\x6e\163\x5f\145\x6e\165\x6d\137\x73\x69\x67\156\151\x6e\x5f\x73\145\164\164\x69\x6e\147\163", "\115\141\160\160\151\156\147" => "\155\x6f\x5f\157\160\164\x69\157\156\163\x5f\x65\x6e\x75\x6d\x5f\155\x61\x70\x70\x69\x6e\x67", "\103\x75\x73\164\157\x6d\137\103\x65\x72\164\x69\146\x69\143\x61\x74\145" => "\x6d\x6f\137\x6f\x70\164\151\157\x6e\137\x65\x6e\x75\155\x5f\143\x75\x73\164\x6f\x6d\137\143\x65\162\164\x69\x66\151\x63\141\164\x65");
        return $BS;
    }
    public static function getVariableArrayForImport_Export($Z5)
    {
        if ($Z5 == "\x6d\x6f\137\x6f\x70\x74\x69\x6f\156\x73\137\x65\156\165\155\137\x69\x64\x65\156\x74\x69\x74\171\x5f\x70\x72\x6f\x76\151\x64\x65\x72") {
            goto fq;
        }
        if ($Z5 == "\155\x6f\x5f\157\x70\x74\x69\157\x6e\x73\137\x65\156\165\x6d\x5f\163\x65\162\166\151\x63\x65\x5f\x70\x72\157\x76\x69\x64\145\162") {
            goto Ob;
        }
        if ($Z5 == "\155\157\137\157\160\x74\x69\x6f\156\x73\137\x65\156\165\155\x5f\x73\x69\147\156\151\156\x5f\163\x65\x74\x74\151\156\x67\163") {
            goto Pl;
        }
        if ($Z5 == "\155\157\137\x6f\160\x74\x69\157\156\x73\137\x65\156\x75\155\137\155\141\160\x70\151\x6e\x67") {
            goto T7;
        }
        if (!($Z5 == "\x6d\157\137\x6f\x70\x74\151\x6f\156\x5f\x65\x6e\x75\155\137\x63\165\163\x74\157\x6d\137\x63\x65\x72\164\x69\146\151\x63\x61\x74\145")) {
            goto bk;
        }
        $mo = array("\103\x75\163\x74\157\155\x5f\x70\162\x69\x76\141\164\145\x5f\143\145\162\164\151\146\x69\x63\x61\164\x65" => "\x6d\151\x6e\x69\157\162\141\x6e\x67\x65\137\x73\x61\x6d\x6c\x5f\160\162\151\x76\141\164\145\x5f\143\x65\162\164\x69\146\x69\x63\141\x74\x65", "\x43\x75\163\164\x6f\x6d\137\160\x75\x62\x6c\151\143\137\x63\x65\162\x74\x69\x66\151\x63\x61\x74\145" => "\155\x69\156\x69\157\x72\141\156\147\145\x5f\163\141\155\x6c\x5f\160\165\142\154\137\143\x65\162\164\x69\x66\151\x63\141\x74\145");
        bk:
        goto kB;
        T7:
        $mo = array("\103\x72\x65\x61\164\x65\137\162\x65\x67\x69\163\x74\x65\x72\x5f\x61\x63\x63\157\x75\156\x74\x5f\142\x79" => "\155\151\156\151\157\162\x61\x6e\x67\145\x5f\163\141\155\x6c\137\154\157\x67\x69\156\137\142\x79", "\125\x73\145\x72\156\x61\155\145\137\x61\164\164\x72\151\142\165\164\145" => "\155\x69\x6e\151\x6f\162\x61\156\147\145\x5f\163\141\155\x6c\137\x75\163\x65\162\x6e\141\x6d\145\x5f\141\x74\164\x72\x69\x62\x75\x74\x65", "\105\x6d\141\151\154\x5f\x61\x61\x74\162\151\142\165\164\145" => "\155\151\x6e\x69\x6f\x72\x61\156\x67\145\137\x73\x61\155\154\137\145\x6d\x61\x69\154\137\141\164\x74\x72\151\142\165\x74\145", "\x52\157\154\145" => "\x6d\x69\x6e\x69\x6f\x72\x61\x6e\147\145\x5f\x73\x61\155\x6c\x5f\x72\157\154\x65\x5f\x61\x74\x74\162\137\x6e\x61\155\145", "\x45\156\141\x62\154\x65\x5f\122\x6f\x6c\145\x5f\155\141\x61\160\x69\156\x67" => "\155\x69\x6e\151\157\x72\x61\x6e\147\x65\137\163\x61\155\154\x5f\145\x6e\141\142\154\145\x5f\x72\157\x6c\145\155\x61\160\x70\151\156\147", "\104\x6f\156\x74\137\x75\160\x64\141\x74\x65\137\165\x73\145\x72\x5f\162\x6f\154\145\x73" => "\155\x69\x6e\151\x6f\162\141\x6e\x67\145\137\163\x61\x6d\154\137\x64\x69\x73\141\x62\154\145\x5f\162\x6f\154\145\137\x75\x70\x64\x61\164\145", "\104\145\x66\141\165\x6c\x74\137\147\162\157\165\160\x5f\x66\157\x72\x5f\x6e\145\167\x5f\165\x73\145\x72\163" => "\x6d\x69\156\151\157\x72\x61\156\147\x65\x5f\x73\141\x6d\x6c\x5f\144\145\146\x61\165\x6c\x74\137\x72\157\154\x65", "\141\x74\x74\x72\137\155\x61\160" => "\x6d\151\x6e\x69\x6f\162\141\156\147\x65\137\163\141\x6d\x6c\x5f\143\165\x73\164\x6f\155\137\x61\x74\164\162\x73\137\x6d\141\x70\x5f\141\x72\162", "\x72\x6f\x6c\145\137\x6d\x61\160" => "\155\151\x6e\151\157\x72\141\x6e\147\145\x5f\x73\x61\x6d\x6c\137\x72\157\154\145\137\x6d\x61\x70\160\x69\x6e\147\137\141\x72\162");
        kB:
        goto EU;
        Pl:
        $mo = array("\101\165\164\x6f\x5f\x63\x74\145\x61\164\x69\157\x6e\137\165\x73\145\162" => "\x6d\151\156\151\x6f\x72\x61\156\147\145\137\x73\141\155\154\x5f\144\x69\163\141\x62\x6c\145\137\141\x75\164\157\143\162\145\x61\x74\x65\137\x75\x73\x65\x72\x73", "\x50\162\x6f\164\145\x63\x74\137\167\x68\x6f\x6c\x65\137\x73\151\x74\x65" => "\155\x69\x6e\151\157\162\141\x6e\147\x65\x5f\x73\x61\155\x6c\x5f\x66\157\x72\143\x65\137\141\165\x74\x68", "\x41\x75\164\x6f\x5f\x72\x65\144\x69\162\145\143\164" => "\155\x69\x6e\151\157\x72\141\x6e\x67\x65\x5f\163\x61\155\x6c\x5f\141\x75\x74\x6f\137\162\x65\x64\x69\x72\145\x63\x74\137\x74\x6f\x5f\151\x64\160", "\x42\x61\x63\x6b\144\x6f\x6f\162\x5f\114\x6f\147\x69\x6e" => "\x6d\151\x6e\x69\x6f\162\141\156\147\x65\x5f\x73\x61\155\154\137\x65\x6e\x61\x62\x6c\x65\x5f\x62\141\143\153\x64\x6f\157\x72", "\104\145\146\x61\x75\154\164\137\162\x65\144\151\x72\145\143\x74\137\125\122\x4c" => "\x6d\x69\156\151\x6f\x72\141\156\x67\145\137\x73\141\155\x6c\137\x64\145\146\141\165\154\x74\137\162\x65\154\141\171\x73\x74\x61\x74\145");
        EU:
        goto vg;
        Ob:
        $mo = array("\x49\144\x65\156\164\151\164\x79\137\156\x61\155\145" => "\155\x69\156\x69\157\162\x61\x6e\147\x65\x5f\163\x61\155\154\x5f\x69\x64\160\x5f\156\141\x6d\145", "\111\163\163\165\x65\x72" => "\155\151\x6e\x69\157\x72\x61\x6e\147\145\x5f\x73\141\155\x6c\137\x69\x64\x70\137\x69\163\x73\x75\x65\162", "\x4e\141\155\145\137\x49\104\x5f\x66\x6f\162\155\x61\164" => "\155\x69\156\x69\157\x72\141\x6e\x67\145\x5f\163\x61\x6d\154\137\156\x61\x6d\x65\x69\144\137\x66\157\x72\x6d\141\164", "\150\x74\x74\x70\x5f\x62\x69\x6e\144\x69\x6e\x67" => "\x6d\x69\156\151\157\x72\x61\x6e\147\145\x5f\x73\x61\x6d\154\137\x68\164\x74\x70\x5f\142\x69\x6e\144\151\156\x67", "\x4c\157\x67\x69\156\137\x55\x52\x4c" => "\x6d\x69\156\151\157\162\141\156\147\145\x5f\163\x61\x6d\154\x5f\x69\x64\x70\137\x6c\157\147\151\156\137\x75\162\154", "\114\157\x67\157\x75\164\137\x55\122\x4c" => "\x6d\x69\x6e\151\157\162\x61\x6e\147\x65\x5f\x73\x61\155\154\137\151\x64\x70\137\154\157\147\157\x75\x74\137\165\x72\x6c", "\130\x35\x30\71\x5f\143\x65\162\164\151\146\151\x63\141\x74\x65" => "\155\151\156\x69\157\162\x61\156\147\145\x5f\x73\141\155\x6c\137\x69\x64\160\x5f\x63\x65\162\x74\151\x66\x69\143\x61\x74\145", "\123\x69\x67\x6e\x5f\x72\145\x71\165\145\163\164" => "\155\x69\156\x69\x6f\162\x61\x6e\x67\145\x5f\x73\x61\x6d\154\x5f\x72\x65\161\x75\145\163\164\x5f\163\151\x67\156\145\x64", "\105\x6e\x61\142\154\x65\x5f\x6c\x6f\147\x69\156\137\167\151\164\150\137\123\x41\x4d\x4c" => "\155\x69\156\151\x6f\x72\x61\156\x67\145\x5f\x73\x61\155\154\x5f\145\x6e\x61\142\x6c\145\137\154\157\x67\151\156");
        vg:
        goto z9;
        fq:
        $mo = array("\123\x50\x5f\x42\141\x73\145\137\x55\x72\154" => "\x6d\151\156\x69\157\x72\141\x6e\147\x65\x5f\x73\141\155\x6c\137\142\141\163\x65", "\123\120\137\x45\156\x74\151\164\x79\137\x49\104" => "\x6d\x69\156\x69\157\162\x61\156\147\145\x5f\163\x61\155\154\x5f\145\156\x74\x69\164\171\x5f\151\x64");
        z9:
        return $mo;
    }
    public static function isCurlInstalled()
    {
        if (in_array("\143\165\162\x6c", get_loaded_extensions())) {
            goto n1;
        }
        return 0;
        goto QI;
        n1:
        return 1;
        QI:
    }
    public static function generateID()
    {
        return "\x5f" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($Ls)
    {
        $DN = '';
        $vk = 0;
        Gc:
        if (!($vk < strlen($Ls))) {
            goto hj;
        }
        $DN .= sprintf("\x25\60\x32\170", ord($Ls[$vk]));
        zI:
        $vk++;
        goto Gc;
        hj:
        return $DN;
    }
    public static function generateRandomBytes($di, $ln = TRUE)
    {
        return openssl_random_pseudo_bytes($di);
    }
    public static function insertSignature(XMLSecurityKey $yQ, array $Tx, DOMElement $wp = NULL, DOMNode $tM = NULL)
    {
        $SB = new XMLSecurityDSig();
        $SB->setCanonicalMethod(XMLSecurityDSig::EXC_C14N);
        switch ($yQ->type) {
            case XMLSecurityKey::RSA_SHA256:
                $O_ = XMLSecurityDSig::SHA256;
                goto F0;
            case XMLSecurityKey::RSA_SHA384:
                $O_ = XMLSecurityDSig::SHA384;
                goto F0;
            case XMLSecurityKey::RSA_SHA512:
                $O_ = XMLSecurityDSig::SHA512;
                goto F0;
            default:
                $O_ = XMLSecurityDSig::SHA1;
        }
        eo:
        F0:
        $SB->addReferenceList(array($wp), $O_, array("\150\x74\x74\160\x3a\57\57\167\x77\167\x2e\x77\x33\56\157\162\147\x2f\x32\60\60\x30\57\60\71\x2f\x78\155\x6c\144\163\x69\147\x23\x65\x6e\166\x65\154\x6f\x70\145\x64\x2d\x73\x69\147\156\141\164\165\x72\145", XMLSecurityDSig::EXC_C14N), array("\x69\144\137\156\x61\x6d\145" => "\111\104", "\x6f\x76\145\x72\167\x72\151\x74\x65" => FALSE));
        $SB->sign($yQ);
        foreach ($Tx as $fW) {
            $SB->add509Cert($fW, TRUE);
            Z4:
        }
        G3:
        $SB->insertSignature($wp, $tM);
    }
    public static function postSAMLRequest($sc, $Hg, $Wn, $nT = false)
    {
        $Zv = \Drupal::config("\155\151\156\x69\157\162\141\156\x67\x65\137\163\x61\x6d\x6c\56\163\145\164\164\151\x6e\147\163")->get("\x6d\x69\156\151\157\x72\141\x6e\x67\x65\137\x73\141\155\x6c\137\163\x65\156\144\x5f\x73\154\x6f\x5f\151\x6e\x5f\151\146\162\x61\155\x65");
        $cu = $Zv ? "\x74\x61\162\147\145\x74\75\47\163\154\157\137\x70\157\163\x74\x5f\x69\146\x72\141\x6d\145\47" : '';
        $ER = "\74\151\146\162\x61\x6d\x65\40\156\x61\x6d\145\x3d\x27\163\154\157\137\x70\157\x73\164\x5f\x69\x66\162\141\155\145\47\x20\x73\x72\x63\x3d\x27" . xss::filter($sc) . "\47\40\x73\164\x79\x6c\145\75\47\160\157\x73\151\164\x69\x6f\x6e\72\40\141\x62\x73\157\154\x75\164\x65\73\40\150\x65\151\x67\x68\x74\x3a\x20\60\x3b\40\x77\x69\x64\164\150\72\40\x30\73\40\x62\157\162\144\145\x72\72\40\60\73\47\40\76\x3c\x2f\151\146\x72\x61\155\145\76";
        $cO = $nT == FALSE ? "\x53\x41\x4d\114\122\145\161\165\145\163\x74" : "\123\101\115\114\x52\x65\163\160\x6f\156\x73\x65";
        echo "\74\150\164\155\154\76\74\150\145\141\x64\x3e\xa\40\40\x20\40\x20\40\40\40\40\40\x20\x20\x20\40\x20\40\40\x20\x20\40\74\x73\x63\x72\151\160\164\40\x74\x79\160\145\75\x22\x74\x65\x78\164\57\152\x61\x76\x61\163\x63\x72\x69\x70\164\42\76\x24\50\146\165\156\143\164\151\x6f\156\50\x29\173\144\x6f\x63\x75\x6d\145\x6e\x74\56\146\157\162\x6d\163\x5b\47\163\141\x6d\154\55\162\x65\x71\165\145\x73\164\x2d\x66\x6f\162\x6d\x27\135\x2e\x73\x75\142\x6d\151\x74\x28\51\x3b\175\x29\73\x3c\57\x73\143\x72\x69\x70\164\76\12\40\x20\40\40\40\40\x20\x20\40\40\x20\40\40\40\x20\40\40\74\x2f\x68\x65\141\144\76\xa\40\40\x20\40\40\x20\x20\40\x20\x20\40\40\40\40\40\x20\40\x3c\x62\x6f\x64\x79\76\120\x6c\x65\141\x73\145\x20\x77\x61\151\x74\56\x2e\x2e\x3c\146\157\162\155\40\x61\143\164\x69\x6f\x6e\x3d\42" . xss::filter($sc) . "\x22\40" . $cu . "\x20\x6d\x65\164\150\157\x64\x3d\x22\x70\x6f\x73\164\x22\x20\151\144\x3d\x22\x73\x61\x6d\x6c\x2d\162\x65\x71\165\145\x73\x74\55\x66\157\x72\x6d\42\76\xa\x20\40\x20\x20\x20\x20\x20\x20\40\x20\40\x20\x20\x20\x20\40\40\40\40\x20\74\151\156\x70\165\x74\40\x74\171\160\x65\x3d\x22\x68\x69\x64\144\x65\156\42\40\x6e\x61\x6d\145\x3d\x22" . xss::filter($cO) . "\x22\40\x76\141\x6c\165\145\75\42" . xss::filter($Hg) . "\42\x20\57\76\12\40\40\x20\x20\x20\x20\40\x20\x20\40\x20\x20\40\40\40\40\x20\40\x20\40\x3c\x69\156\x70\165\x74\40\164\x79\160\x65\75\42\150\x69\x64\x64\145\x6e\42\40\x6e\141\155\x65\x3d\x22\122\x65\154\141\x79\x53\x74\141\164\x65\42\x20\166\x61\x6c\x75\145\75\42" . xss::filter(htmlentities($Wn)) . "\42\x20\57\76\74\57\146\157\x72\x6d\x3e\12\x20\x20\40\40\x20\x20\40\x20\x20\40\40\x20\x20\40\40\x20\x20\40\40\x20" . $ER . "\12\x9\x9\x9\11\x9\74\163\x63\x72\151\x70\x74\x3e\x64\x6f\x63\165\x6d\145\156\164\x2e\x67\x65\x74\x45\154\145\x6d\145\156\164\x42\x79\x49\x64\x28\x27\x73\x61\155\x6c\55\162\x65\x71\x75\x65\x73\164\x2d\146\157\162\155\x27\x29\x2e\x73\165\x62\x6d\151\x74\50\51\73\74\57\163\x63\162\x69\160\164\x3e\12\40\40\x20\x20\x20\x20\x20\x20\x20\x20\40\40\40\40\40\40\x20\74\x2f\142\x6f\144\x79\x3e\12\40\40\40\40\x20\40\40\x20\x20\x20\x20\x20\x20\40\74\57\150\164\x6d\x6c\76";
    }
    public static function createAuthnRequest($Z3, $Ot, $wi, $IQ, $xr, $we = "\x66\141\x6c\163\x65")
    {
        $GO = "\74\x3f\x78\x6d\x6c\x20\x76\x65\162\163\151\157\x6e\x3d\x22\x31\56\x30\x22\x20\145\156\x63\x6f\x64\151\156\147\x3d\42\x55\x54\106\x2d\70\x22\77\76" . "\74\x73\141\155\154\x70\72\101\165\164\x68\x6e\x52\145\161\x75\145\163\164\40\170\x6d\154\156\x73\72\163\x61\155\x6c\160\75\x22\x75\162\x6e\72\157\141\x73\x69\163\72\x6e\x61\155\x65\x73\x3a\x74\x63\x3a\123\x41\115\x4c\x3a\62\x2e\60\72\x70\x72\157\x74\x6f\143\157\x6c\42\x20\x49\x44\75\x22" . self::generateID() . "\42\40\126\x65\162\163\151\x6f\x6e\x3d\x22\x32\56\60\x22\x20\x49\163\x73\165\x65\x49\156\x73\x74\x61\156\x74\75\42" . self::generateTimestamp() . "\x22";
        if (!($we == "\164\162\x75\x65")) {
            goto bD;
        }
        $GO .= "\40\106\x6f\162\x63\145\101\165\x74\150\x6e\75\x22\164\x72\165\145\x22";
        bD:
        $GO .= "\40\x50\x72\x6f\x74\x6f\143\157\x6c\x42\151\156\144\151\x6e\147\75\x22\165\x72\156\x3a\157\141\x73\151\163\x3a\x6e\141\155\145\x73\72\x74\x63\x3a\x53\101\115\114\72\x32\56\x30\72\142\x69\x6e\x64\x69\156\147\163\x3a\x48\x54\124\120\x2d\x50\x4f\123\124\42\x20\x41\x73\x73\x65\162\x74\151\157\x6e\x43\157\156\163\165\x6d\x65\x72\123\145\x72\166\151\x63\x65\125\x52\114\75\x22" . $Z3 . "\42\x20\x44\145\x73\164\x69\156\141\164\151\157\x6e\x3d\x22" . $IQ . "\x22\76\x3c\x73\x61\155\x6c\72\111\163\163\x75\x65\162\40\x78\x6d\154\156\x73\72\x73\141\155\154\75\x22\x75\162\x6e\x3a\x6f\141\163\x69\163\72\x6e\141\x6d\145\x73\72\x74\x63\x3a\x53\x41\x4d\114\72\62\56\60\x3a\x61\x73\x73\145\x72\x74\x69\x6f\156\x22\76" . $Ot . "\74\57\163\141\155\x6c\72\x49\163\163\165\145\x72\x3e\12\x9\11\11\11\11\x9\x3c\x73\141\x6d\154\x70\x3a\116\141\x6d\x65\111\104\x50\x6f\154\x69\x63\171\40\101\x6c\x6c\157\167\103\162\145\141\164\145\75\42\x74\x72\165\145\x22\40\106\157\162\155\141\164\75\x22" . $wi . "\42\57\x3e\74\x2f\163\141\x6d\x6c\160\72\101\165\164\150\156\x52\x65\161\165\x65\163\x74\76";
        if (!(empty($xr) || $xr == "\x48\x54\x54\x50\x2d\x52\x65\144\151\162\x65\x63\x74")) {
            goto mp;
        }
        $YS = gzdeflate($GO);
        $x7 = base64_encode($YS);
        $L_ = urlencode($x7);
        $GO = $L_;
        mp:
        return $GO;
    }
    public static function signXML($mk, $JA, $fB, $dQ, $K7 = '')
    {
        $RO = array("\164\171\160\145" => "\x70\162\x69\166\141\164\x65");
        $yQ = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $RO);
        if ($dQ == "\122\123\x41\x5f\x53\x48\101\63\70\x34") {
            goto dH;
        }
        if ($dQ == "\122\123\x41\x5f\123\x48\101\x35\61\62") {
            goto dD;
        }
        if ($dQ == "\x52\123\101\x5f\123\x48\101\61") {
            goto WS;
        }
        goto mv;
        dH:
        $yQ = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $RO);
        goto mv;
        dD:
        $yQ = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $RO);
        goto mv;
        WS:
        $yQ = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $RO);
        mv:
        $yQ->loadKey($fB, FALSE);
        $ph = new DOMDocument();
        $ph->loadXML($mk);
        $cJ = $ph->firstChild;
        if (!empty($K7)) {
            goto AT;
        }
        self::insertSignature($yQ, array($JA), $cJ);
        goto X6;
        AT:
        $Vm = $ph->getElementsByTagName($K7)->item(0);
        self::insertSignature($yQ, array($JA), $cJ, $Vm);
        X6:
        $ak = $cJ->ownerDocument->saveXML($cJ);
        $ld = base64_encode($ak);
        return $ld;
    }
    public static function createLogoutRequest($Sj, $Ot, $IQ, $o2, $mT = '')
    {
        $GO = "\74\77\x78\155\x6c\x20\x76\145\x72\163\x69\x6f\x6e\x3d\x22\61\x2e\x30\42\40\145\156\x63\x6f\144\x69\156\x67\75\42\125\124\x46\55\70\42\77\x3e" . "\x3c\x73\x61\155\x6c\x70\x3a\114\157\x67\x6f\x75\x74\122\x65\x71\x75\145\163\x74\x20\170\x6d\154\x6e\163\72\x73\x61\155\154\160\x3d\42\x75\162\x6e\x3a\x6f\141\163\x69\163\x3a\x6e\x61\x6d\145\163\x3a\164\143\x3a\x53\101\x4d\x4c\x3a\x32\56\x30\x3a\160\x72\x6f\x74\x6f\143\157\x6c\x22\x20\170\x6d\x6c\x6e\163\x3a\x73\141\155\x6c\x3d\42\x75\x72\156\72\157\x61\163\151\x73\72\156\x61\155\145\x73\x3a\x74\143\72\x53\x41\115\114\x3a\62\56\x30\x3a\x61\x73\x73\x65\x72\x74\x69\x6f\156\42\x20\x49\x44\75\42" . self::generateID() . "\42\40\x49\163\163\165\145\x49\156\163\x74\x61\156\x74\x3d\42" . self::generateTimestamp() . "\x22\x20\126\x65\x72\163\x69\157\156\75\x22\62\56\x30\x22\40\104\x65\163\x74\151\156\x61\x74\x69\157\x6e\75\42" . $IQ . "\42\x3e\12\11\11\11\11\11\x9\74\163\141\x6d\x6c\72\x49\163\163\x75\145\x72\40\170\155\x6c\156\163\x3a\163\x61\155\154\x3d\42\165\x72\x6e\72\x6f\141\163\x69\163\72\x6e\x61\x6d\x65\163\x3a\164\x63\72\123\101\115\x4c\x3a\x32\56\60\72\x61\163\x73\x65\x72\x74\x69\157\156\42\76" . $Ot . "\x3c\57\163\x61\155\x6c\x3a\x49\x73\163\165\145\162\x3e\12\x9\11\11\11\11\x9\74\x73\141\155\x6c\72\x4e\x61\155\145\x49\x44\x20\170\x6d\154\x6e\x73\x3a\x73\x61\x6d\x6c\x3d\42\165\162\156\x3a\x6f\141\163\x69\x73\x3a\x6e\x61\x6d\145\163\x3a\x74\x63\x3a\x53\101\115\114\x3a\62\56\60\72\141\x73\x73\145\162\164\x69\157\x6e\x22\76" . $Sj . "\74\57\x73\x61\155\x6c\x3a\x4e\x61\155\x65\111\104\x3e";
        if (empty($mT)) {
            goto Zp;
        }
        $GO .= "\x3c\x73\x61\x6d\154\160\x3a\x53\x65\163\x73\x69\157\x6e\x49\156\144\145\170\76" . $mT . "\74\57\163\x61\x6d\154\160\72\x53\145\163\x73\151\157\x6e\111\156\x64\x65\x78\x3e";
        Zp:
        $GO .= "\x3c\x2f\163\x61\155\154\160\x3a\114\x6f\147\x6f\x75\164\x52\x65\161\165\x65\163\x74\x3e";
        if (!(empty($o2) || $o2 == "\x48\x54\x54\x50\x2d\x52\x65\144\151\162\145\x63\x74")) {
            goto n4;
        }
        $YS = gzdeflate($GO);
        $x7 = base64_encode($YS);
        $L_ = urlencode($x7);
        $GO = $L_;
        n4:
        return $GO;
    }
    public static function generateTimestamp($Mz = NULL)
    {
        if (!($Mz === NULL)) {
            goto yV;
        }
        $Mz = time();
        yV:
        return gmdate("\x59\55\155\x2d\x64\134\x54\110\72\x69\x3a\163\x5c\132", $Mz);
    }
    public static function xpQuery(DOMNode $Ci, $BJ)
    {
        static $hN = NULL;
        if ($Ci instanceof DOMDocument) {
            goto X5;
        }
        $NW = $Ci->ownerDocument;
        goto iZ;
        X5:
        $NW = $Ci;
        iZ:
        if (!($hN === NULL || !$hN->document->isSameNode($NW))) {
            goto bZ;
        }
        $hN = new DOMXPath($NW);
        $hN->registerNamespace("\163\157\141\x70\55\145\156\x76", "\x68\x74\x74\x70\x3a\x2f\57\163\x63\150\145\x6d\141\x73\x2e\170\155\x6c\163\157\x61\160\56\157\162\147\57\x73\157\x61\160\57\145\x6e\166\145\x6c\157\160\x65\57");
        $hN->registerNamespace("\163\141\155\154\137\x70\162\x6f\x74\157\143\x6f\x6c", "\x75\x72\156\x3a\157\x61\163\x69\163\72\156\141\155\145\163\72\x74\x63\72\x53\x41\115\x4c\72\x32\56\60\x3a\x70\x72\x6f\164\x6f\143\157\154");
        $hN->registerNamespace("\163\141\155\154\137\141\163\x73\x65\162\164\x69\157\156", "\165\x72\x6e\72\157\141\x73\151\x73\x3a\156\x61\x6d\x65\x73\72\164\x63\72\123\x41\115\114\72\62\56\x30\x3a\141\163\163\x65\162\164\151\x6f\156");
        $hN->registerNamespace("\x73\141\x6d\x6c\137\155\x65\164\x61\144\141\x74\141", "\165\162\156\x3a\x6f\141\x73\151\x73\72\156\141\155\145\x73\72\164\x63\x3a\123\101\x4d\x4c\x3a\62\x2e\x30\72\x6d\x65\164\x61\144\x61\164\141");
        $hN->registerNamespace("\144\x73", "\150\x74\164\x70\72\57\57\x77\167\x77\x2e\x77\63\x2e\157\162\x67\57\62\x30\x30\60\x2f\60\x39\x2f\170\x6d\154\144\163\151\147\x23");
        $hN->registerNamespace("\170\145\156\143", "\150\x74\164\160\72\57\x2f\167\167\167\56\x77\x33\x2e\157\162\147\x2f\x32\60\x30\x31\57\x30\64\57\170\155\154\x65\156\143\x23");
        bZ:
        $yv = $hN->query($BJ, $Ci);
        $DN = array();
        $vk = 0;
        Qc:
        if (!($vk < $yv->length)) {
            goto ms;
        }
        $DN[$vk] = $yv->item($vk);
        CJ:
        $vk++;
        goto Qc;
        ms:
        return $DN;
    }
    public static function parseNameId(DOMElement $mk)
    {
        $DN = array("\x56\141\154\165\x65" => trim($mk->textContent));
        foreach (array("\x4e\x61\x6d\x65\x51\x75\141\154\x69\146\151\x65\x72", "\x53\x50\116\141\x6d\145\x51\x75\x61\x6c\x69\146\151\x65\x72", "\106\x6f\x72\155\x61\x74") as $PR) {
            if (!$mk->hasAttribute($PR)) {
                goto tG;
            }
            $DN[$PR] = $mk->getAttribute($PR);
            tG:
            hq:
        }
        qa:
        return $DN;
    }
    public static function xsDateTimeToTimestamp($lJ)
    {
        $Mj = array();
        $PX = "\57\x5e\50\134\x64\134\x64\x5c\144\134\144\x29\x2d\50\134\x64\x5c\144\x29\x2d\50\x5c\x64\x5c\x64\x29\124\x28\134\144\x5c\144\x29\x3a\50\x5c\x64\134\x64\51\72\50\134\x64\134\144\51\50\x3f\72\x5c\x2e\x5c\x64\53\x29\x3f\132\44\x2f\x44";
        if (!(preg_match($PX, $lJ, $Mj) == 0)) {
            goto C4;
        }
        echo sprintf("\156\x76\141\x6c\151\x64\x20\x53\x41\115\x4c\x32\40\x74\x69\x6d\145\163\164\x61\155\160\40\160\141\x73\163\145\144\40\164\x6f\40\x78\163\x44\141\x74\145\124\151\x6d\145\124\x6f\124\x69\x6d\145\163\x74\x61\155\160\x3a\x20" . xss::filter($lJ));
        exit;
        C4:
        $jO = intval($Mj[1]);
        $Bd = intval($Mj[2]);
        $jl = intval($Mj[3]);
        $lN = intval($Mj[4]);
        $UR = intval($Mj[5]);
        $u8 = intval($Mj[6]);
        $Km = gmmktime($lN, $UR, $u8, $Bd, $jl, $jO);
        return $Km;
    }
    public static function extractStrings(DOMElement $rM, $oT, $YJ)
    {
        $DN = array();
        $Ci = $rM->firstChild;
        cq:
        if (!($Ci !== NULL)) {
            goto JX;
        }
        if (!($Ci->namespaceURI !== $oT || $Ci->localName !== $YJ)) {
            goto uN;
        }
        goto F8;
        uN:
        $DN[] = trim($Ci->textContent);
        F8:
        $Ci = $Ci->nextSibling;
        goto cq;
        JX:
        return $DN;
    }
    public static function validateElement(DOMElement $wp)
    {
        $SB = new XMLSecurityDSig();
        $SB->idKeys[] = "\x49\104";
        $IO = self::xpQuery($wp, "\x2e\x2f\x64\163\x3a\x53\x69\x67\x6e\x61\x74\x75\x72\145");
        if (count($IO) === 0) {
            goto l9;
        }
        if (count($IO) > 1) {
            goto y1;
        }
        goto q3;
        l9:
        return FALSE;
        goto q3;
        y1:
        echo sprintf("\130\x4d\x4c\123\145\x63\72\40\x6d\157\162\x65\40\x74\150\141\156\x20\157\156\x65\x20\x73\x69\147\x6e\141\164\x75\x72\x65\40\x65\154\145\x6d\x65\156\164\x20\151\156\x20\x72\157\x6f\164\56");
        exit;
        q3:
        $IO = $IO[0];
        $SB->sigNode = $IO;
        $SB->canonicalizeSignedInfo();
        if ($SB->validateReference()) {
            goto lT;
        }
        echo sprintf("\x58\115\114\x73\x65\143\72\40\x64\151\x67\145\x73\x74\x20\166\x61\154\x69\x64\141\164\151\x6f\156\x20\146\x61\151\154\145\144");
        exit;
        lT:
        $w3 = FALSE;
        foreach ($SB->getValidatedNodes() as $Sw) {
            if ($Sw->isSameNode($wp)) {
                goto lq;
            }
            if ($wp->parentNode instanceof DOMElement && $Sw->isSameNode($wp->ownerDocument)) {
                goto ZX;
            }
            goto x8;
            lq:
            $w3 = TRUE;
            goto PY;
            goto x8;
            ZX:
            $w3 = TRUE;
            goto PY;
            x8:
            E_:
        }
        PY:
        if ($w3) {
            goto en;
        }
        echo sprintf("\130\115\x4c\x53\145\143\72\x20\124\x68\145\40\162\157\x6f\x74\40\x65\154\145\x6d\x65\156\x74\40\151\x73\40\x6e\x6f\x74\x20\x73\151\x67\156\x65\144\56");
        exit;
        en:
        $Tx = array();
        foreach (self::xpQuery($IO, "\x2e\x2f\144\163\72\x4b\x65\x79\111\x6e\146\x6f\57\x64\163\72\x58\x35\60\x39\104\141\164\x61\57\x64\163\x3a\x58\x35\x30\71\103\145\x72\x74\x69\x66\x69\x63\141\164\x65") as $Jn) {
            $T8 = trim($Jn->textContent);
            $T8 = str_replace(array("\15", "\12", "\11", "\x20"), '', $T8);
            $Tx[] = $T8;
            U3:
        }
        JR:
        $DN = array("\x53\151\147\156\x61\x74\x75\162\145" => $SB, "\103\145\x72\164\151\x66\151\143\141\x74\145\163" => $Tx);
        return $DN;
    }
    public static function validateSignature(array $RI, XMLSecurityKey $yQ)
    {
        $SB = $RI["\123\x69\x67\x6e\141\164\165\162\x65"];
        $I8 = self::xpQuery($SB->sigNode, "\x2e\x2f\x64\x73\72\x53\x69\x67\x6e\x65\x64\x49\156\146\x6f\x2f\144\x73\72\123\x69\147\x6e\x61\164\x75\x72\145\115\145\x74\150\x6f\x64");
        if (!empty($I8)) {
            goto KI;
        }
        echo sprintf("\x4d\151\163\163\x69\x6e\x67\40\123\x69\147\156\x61\x74\165\162\x65\x4d\x65\x74\x68\x6f\144\x20\x65\x6c\145\x6d\x65\156\164");
        exit;
        KI:
        $I8 = $I8[0];
        if ($I8->hasAttribute("\101\x6c\x67\x6f\162\151\x74\x68\x6d")) {
            goto bh;
        }
        echo sprintf("\115\151\163\163\x69\156\x67\x20\101\x6c\x67\x6f\162\x69\164\x68\155\55\x61\164\x74\162\x69\142\165\x74\145\40\x6f\156\x20\x53\151\x67\156\x61\164\x75\x72\x65\x4d\x65\x74\x68\x6f\144\40\145\x6c\x65\x6d\x65\156\x74\56");
        exit;
        bh:
        $GC = $I8->getAttribute("\x41\x6c\147\157\x72\x69\164\x68\x6d");
        if (!($yQ->type === XMLSecurityKey::RSA_SHA1 && $GC !== $yQ->type)) {
            goto s1;
        }
        $yQ = self::castKey($yQ, $GC);
        s1:
        if ($SB->verify($yQ)) {
            goto Ya;
        }
        echo sprintf("\125\156\x61\x62\x6c\145\40\x74\157\40\x76\x61\x6c\151\x64\x61\164\145\40\123\147\x6e\141\164\165\162\145");
        exit;
        Ya:
    }
    public static function castKey(XMLSecurityKey $yQ, $af, $O_ = "\x70\x75\x62\x6c\151\x63")
    {
        if (!($yQ->type === $af)) {
            goto eO;
        }
        return $yQ;
        eO:
        $Yj = openssl_pkey_get_details($yQ->key);
        if (!($Yj === FALSE)) {
            goto TA;
        }
        echo sprintf("\125\156\x61\142\x6c\145\40\x74\157\40\x67\x65\x74\x20\153\x65\x79\x20\144\145\x74\x61\x69\154\163\x20\146\162\x6f\x6d\40\x58\115\114\x53\145\143\165\x72\151\x74\x79\113\145\171\x2e");
        exit;
        TA:
        if (isset($Yj["\x6b\x65\x79"])) {
            goto rG;
        }
        echo sprintf("\115\x69\163\x73\x69\156\147\x20\153\145\171\x20\x69\156\40\160\x75\142\x6c\151\143\x20\x6b\145\171\40\x64\145\x74\141\x69\x6c\x73\x2e");
        exit;
        rG:
        $JO = new XMLSecurityKey($af, array("\x74\171\x70\x65" => $O_));
        $JO->loadKey($Yj["\153\145\x79"]);
        return $JO;
    }
    public static function processResponse($Z3, $nB, $Vb, SAML2_Response $Yq)
    {
        $qh = $Vb["\103\145\162\x74\x69\146\x69\143\141\x74\145\x73"][0];
        $U8 = $Yq->getDestination();
        if (!($U8 !== NULL && $U8 !== $Z3)) {
            goto S4;
        }
        echo sprintf("\104\145\163\x74\151\x6e\141\x74\151\x6f\x6e\x20\151\x6e\40\162\145\x73\160\157\156\x73\145\x20\144\157\x65\x73\156\x27\x74\x20\x6d\141\164\143\x68\x20\164\150\x65\40\101\103\x53\40\x55\122\x4c\56\x20\x44\145\163\164\151\156\x61\x74\x69\x6f\156\40\x69\x73\x20\42" . xss::filter($U8) . "\x22\x2c\40\143\x75\x72\162\145\x6e\164\40\x55\x52\x4c\40\151\163\x20\x22" . xss::filter($Z3) . "\42\x2e");
        exit;
        S4:
        $qJ = self::checkSign($nB, $Vb, $qh);
        return $qJ;
    }
    public static function checkSign($nB, $Vb, $qh)
    {
        $Tx = $Vb["\103\145\x72\164\151\146\x69\x63\141\x74\145\x73"];
        if (count($Tx) === 0) {
            goto q2;
        }
        $HP = self::findCertificate($nB, $Tx, $qh);
        $n9 = NULL;
        goto lD;
        q2:
        $N_ = \Drupal::configFactory()->getEditable("\155\x69\x6e\x69\x6f\162\x61\156\x67\145\137\x73\141\x6d\154\x2e\x73\145\164\x74\151\x6e\x67\163")->get("\x6d\151\x6e\x69\157\162\x61\x6e\147\145\137\x73\x61\x6d\154\137\x69\144\160\137\143\x65\x72\164\151\146\151\x63\141\x74\145");
        $N_ = unserialize($N_);
        $HP = $N_[0];
        lD:
        $yQ = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\x74\171\x70\145" => "\x70\165\142\154\x69\143"));
        $yQ->loadKey($HP);
        try {
            self::validateSignature($Vb, $yQ);
            return TRUE;
        } catch (Exception $c4) {
            $n9 = $c4;
        }
        if ($n9 !== NULL) {
            goto Yp;
        }
        return FALSE;
        goto ni;
        Yp:
        throw $n9;
        ni:
    }
    private static function findCertificate($v7, $Tx, $qh)
    {
        foreach ($Tx as $N_) {
            $Az = strtolower(sha1(base64_decode($N_)));
            if (!in_array($Az, $v7, TRUE)) {
                goto B7;
            }
            $zm = "\55\x2d\55\55\55\102\x45\x47\111\x4e\x20\x43\105\x52\124\111\x46\x49\x43\x41\124\105\x2d\55\x2d\55\55\xa" . chunk_split($N_, 64) . "\x2d\x2d\55\55\55\105\116\x44\40\103\105\122\x54\x49\106\x49\x43\x41\x54\x45\55\55\55\55\x2d\12";
            return $zm;
            B7:
            HP:
        }
        Vz:
        $qh = self::sanitize_certificate($qh);
        if (array_key_exists("\x52\145\154\x61\171\x53\x74\x61\x74\x65", $_REQUEST) && $_REQUEST["\x52\x65\x6c\141\171\123\164\141\164\145"] == "\x74\x65\163\164\126\x61\x6c\x69\144\141\x74\145") {
            goto KQ;
        }
        echo "\40\x3c\x64\x69\166\40\x73\164\171\x6c\x65\x3d\x22\x63\x6f\154\x6f\162\72\x20\43\141\71\x34\64\x34\x32\x3b\x66\157\156\x74\x2d\x73\151\172\145\x3a\61\x34\160\164\73\40\x6d\141\162\x67\x69\x6e\55\142\157\x74\164\157\155\72\62\x30\x70\170\73\x22\76\x3c\160\x3e\x3c\142\x3e\105\162\x72\157\162\72\x20\x3c\x2f\142\76\127\x65\40\143\x6f\x75\154\144\x20\x6e\x6f\x74\x20\x73\x69\147\x6e\x20\x79\x6f\x75\40\151\x6e\56\40\120\x6c\x65\x61\x73\x65\40\143\x6f\156\164\x61\x63\x74\40\x79\x6f\165\x72\40\101\144\155\151\156\x69\x73\x74\162\x61\x74\x6f\162\56\74\57\x70\76\x3c\57\144\x69\166\76";
        goto lG;
        KQ:
        echo "\x3c\x64\x69\x76\x20\163\164\x79\154\145\x3d\x22\146\x6f\156\164\55\x66\x61\155\151\x6c\171\72\x43\x61\x6c\151\142\x72\x69\73\160\x61\144\x64\x69\x6e\147\72\x30\x20\x33\45\73\42\76";
        echo "\x3c\144\151\x76\x20\x73\x74\x79\x6c\145\x3d\42\143\x6f\154\x6f\162\72\x20\x23\x61\x39\64\64\64\62\73\142\141\143\153\x67\x72\x6f\x75\156\144\55\x63\157\154\x6f\162\x3a\40\43\x66\62\144\145\x64\145\73\160\141\144\x64\x69\156\x67\x3a\40\61\65\160\170\x3b\x6d\x61\162\x67\151\x6e\55\142\157\164\x74\157\x6d\x3a\40\62\60\x70\170\73\x74\145\x78\x74\55\141\154\x69\147\156\72\x63\145\156\164\x65\x72\73\x62\x6f\x72\144\x65\162\x3a\61\x70\170\40\163\157\x6c\x69\x64\40\x23\x45\x36\102\63\102\62\73\x66\157\156\164\x2d\163\151\x7a\145\x3a\61\70\160\164\73\x22\x3e\x20\x45\x52\122\x4f\x52\x3c\x2f\144\x69\166\76\12\11\x9\11\x9\74\x64\x69\166\x20\x73\x74\171\154\145\75\x22\143\157\154\x6f\x72\72\40\43\141\x39\x34\64\64\62\x3b\146\157\156\164\x2d\x73\x69\x7a\145\72\61\x34\160\164\x3b\x20\x6d\141\x72\147\151\156\55\x62\157\x74\x74\157\x6d\x3a\x32\x30\160\x78\73\42\76\x3c\160\76\74\163\164\x72\x6f\156\147\76\x45\162\162\x6f\162\72\x20\x3c\57\163\x74\x72\157\156\147\x3e\x55\156\x61\142\x6c\x65\40\x74\x6f\x20\x66\x69\156\144\x20\141\x20\143\145\162\x74\x69\x66\151\x63\141\164\145\40\155\x61\x74\143\150\151\156\147\40\164\150\x65\40\143\x6f\x6e\x66\151\x67\x75\x72\145\144\40\x66\x69\x6e\x67\145\162\x70\x72\x69\x6e\164\x2e\74\57\160\x3e\12\11\11\11\11\74\x70\76\x3c\163\x74\162\157\156\147\x3e\120\157\x73\163\x69\142\x6c\145\x20\103\x61\x75\x73\x65\72\x20\74\57\163\164\x72\x6f\156\x67\x3e\x43\157\x6e\164\x65\x6e\164\x20\157\x66\40\x27\x58\x2e\x35\60\x39\40\x43\x65\162\x74\151\x66\151\x63\141\164\145\x27\40\x66\x69\x65\x6c\x64\x20\151\x6e\40\x53\x65\162\166\151\143\x65\40\x50\x72\x6f\x76\x69\x64\145\x72\x20\x53\x65\164\164\x69\156\x67\163\40\151\163\40\x69\x6e\143\x6f\x72\x72\145\x63\x74\x3c\x2f\x70\x3e\12\x9\11\x9\x9\x3c\x70\x3e\74\142\x3e\105\170\x70\145\143\164\x65\x64\40\166\141\154\x75\145\72\x3c\x2f\x62\76" . xss::filter($qh) . "\x3c\57\x70\x3e";
        echo str_repeat("\x26\x6e\142\x73\160\73", 15);
        echo "\x3c\x2f\144\x69\x76\x3e\xa\11\11\x9\11\74\x64\151\x76\x20\163\164\171\154\145\75\x22\155\141\162\x67\x69\x6e\72\63\45\x3b\144\x69\163\x70\x6c\141\x79\72\x62\x6c\157\x63\x6b\x3b\x74\145\170\164\55\141\x6c\151\x67\x6e\72\x63\x65\156\x74\x65\162\x3b\42\x3e\xa\11\x9\x9\11\74\x66\x6f\x72\x6d\x20\x61\143\x74\151\157\156\x3d\42\x69\x6e\144\145\170\x2e\160\150\x70\42\x3e\xa\x9\x9\x9\11\74\x64\x69\166\x20\163\x74\171\x6c\x65\75\42\155\141\x72\x67\x69\x6e\72\x33\x25\73\144\151\x73\160\154\141\x79\x3a\x62\x6c\157\143\153\x3b\164\145\x78\164\55\x61\154\x69\147\x6e\x3a\143\145\156\164\145\162\73\42\x3e\x3c\x69\156\x70\165\164\x20\x73\x74\171\154\x65\75\42\160\141\x64\144\151\156\147\72\61\x25\73\x77\151\x64\x74\x68\72\61\x30\60\160\x78\73\x62\x61\x63\x6b\x67\162\x6f\165\156\144\72\40\x23\x30\x30\x39\x31\103\x44\x20\x6e\157\156\145\x20\x72\145\160\145\141\164\40\x73\x63\x72\157\154\154\40\60\45\40\x30\45\x3b\143\x75\x72\163\x6f\x72\72\x20\x70\157\x69\156\164\145\x72\73\x66\157\x6e\164\x2d\163\x69\172\145\72\61\x35\x70\170\73\142\157\x72\x64\x65\x72\55\x77\151\x64\x74\150\x3a\x20\x31\x70\170\73\x62\157\x72\x64\145\x72\55\163\x74\x79\154\145\x3a\x20\163\x6f\154\151\x64\73\x62\x6f\x72\x64\145\x72\x2d\x72\141\x64\x69\x75\x73\x3a\x20\63\160\x78\73\x77\x68\151\x74\145\x2d\x73\160\x61\x63\x65\72\40\156\157\167\x72\x61\160\73\142\x6f\170\55\163\151\x7a\x69\x6e\147\72\40\142\x6f\162\144\x65\x72\x2d\142\157\x78\73\x62\157\x72\144\x65\x72\55\x63\x6f\154\x6f\x72\72\40\x23\60\x30\67\63\x41\101\73\x62\x6f\170\x2d\163\150\x61\x64\x6f\167\x3a\x20\60\160\x78\x20\x31\x70\170\x20\x30\160\x78\x20\x72\147\142\141\x28\61\62\60\54\x20\x32\x30\60\54\40\x32\x33\x30\x2c\40\x30\x2e\x36\x29\x20\x69\x6e\x73\x65\164\73\143\157\x6c\157\x72\x3a\x20\43\106\x46\x46\73\x22\164\171\x70\145\75\42\x62\165\164\x74\x6f\156\x22\40\166\x61\x6c\165\145\75\x22\x44\x6f\156\x65\x22\x20\x6f\156\x43\154\151\143\153\x3d\42\x73\145\154\x66\x2e\x63\x6c\157\163\x65\x28\51\x3b\42\x3e\x3c\x2f\144\x69\166\76";
        lG:
        exit;
    }
    public static function validateIssuerAndAudience($Wb)
    {
        $Ot = current($Wb->getAssertions())->getIssuer();
        $bL = current(current($Wb->getAssertions())->getValidAudiences());
        if (strcmp(self::getIdpIssuer(), $Ot) === 0) {
            goto Ol;
        }
        if (array_key_exists("\x52\145\154\141\x79\x53\x74\141\164\145", $_REQUEST) && $_REQUEST["\x52\145\x6c\x61\x79\123\x74\x61\x74\x65"] == "\164\x65\163\x74\126\x61\154\151\x64\141\164\x65") {
            goto AL;
        }
        echo "\74\144\151\166\40\x73\164\171\x6c\x65\75\x22\x63\x6f\x6c\157\x72\72\40\43\x61\x39\x34\64\x34\62\x3b\x66\x6f\156\164\x2d\163\x69\172\x65\72\61\64\160\164\x3b\x20\x6d\141\x72\147\151\x6e\55\142\157\x74\164\x6f\155\72\62\60\x70\x78\x3b\42\x3e\x3c\160\76\74\142\x3e\x45\x72\162\x6f\x72\72\x20\74\x2f\142\x3e\127\x65\x20\x63\157\x75\154\x64\40\x6e\x6f\164\40\163\151\x67\x6e\40\171\157\x75\x20\151\156\x2e\x20\120\154\145\x61\x73\x65\40\143\x6f\x6e\164\141\x63\x74\x20\171\157\x75\x72\40\x41\x64\155\x69\x6e\151\163\x74\x72\141\164\157\x72\56\74\57\160\x3e\x3c\x2f\144\x69\166\x3e";
        goto Rx;
        AL:
        echo "\74\144\151\x76\x20\163\x74\x79\154\145\75\42\x66\157\156\164\55\146\x61\x6d\151\x6c\x79\x3a\x43\141\154\x69\x62\x72\x69\73\160\x61\144\144\x69\x6e\147\x3a\x30\40\x33\x25\73\x22\x3e";
        echo "\x3c\144\x69\x76\x20\x73\x74\x79\x6c\145\75\x22\143\157\x6c\157\x72\72\40\43\141\x39\x34\x34\x34\x32\73\x62\141\143\x6b\147\x72\x6f\165\156\144\x2d\143\x6f\x6c\157\x72\x3a\x20\43\x66\62\x64\x65\x64\145\x3b\160\141\x64\144\151\x6e\x67\x3a\x20\x31\65\x70\x78\73\155\x61\162\x67\151\156\55\x62\x6f\x74\x74\x6f\x6d\x3a\40\62\x30\160\x78\73\164\x65\x78\x74\x2d\x61\154\x69\x67\x6e\x3a\143\x65\156\164\145\x72\x3b\142\x6f\x72\x64\145\x72\72\61\x70\170\x20\x73\x6f\x6c\x69\144\40\x23\105\x36\102\63\x42\62\73\x66\x6f\x6e\164\55\163\151\172\145\x3a\61\x38\160\x74\x3b\x22\76\x20\105\x52\122\117\122\74\x2f\144\x69\x76\x3e\12\x9\11\x9\x9\x9\x3c\144\x69\166\x20\x73\164\x79\x6c\x65\75\x22\x63\x6f\154\x6f\162\72\40\43\x61\71\x34\x34\x34\x32\73\146\x6f\x6e\164\x2d\x73\x69\172\x65\72\x31\x34\x70\164\x3b\x20\155\141\162\x67\x69\x6e\55\142\x6f\164\x74\157\x6d\x3a\x32\60\x70\170\x3b\x22\x3e\74\x70\x3e\x3c\163\164\162\157\x6e\147\x3e\x45\162\x72\157\162\x3a\x20\74\x2f\x73\x74\162\x6f\156\147\76\x49\x73\x73\x75\145\x72\x20\143\x61\x6e\156\x6f\164\x20\142\145\x20\166\145\162\151\146\x69\x65\x64\x2e\x3c\x2f\x70\x3e\xa\11\x9\x9\11\x9\x3c\160\76\120\154\x65\x61\163\x65\x20\x63\x6f\156\x74\141\x63\164\x20\x79\x6f\x75\162\40\x61\144\x6d\151\156\151\163\x74\162\x61\164\x6f\x72\x20\141\156\144\x20\162\145\x70\157\x72\x74\x20\x74\x68\x65\x20\146\x6f\154\x6c\157\x77\x69\156\147\40\145\x72\x72\x6f\162\x3a\74\x2f\160\x3e\xa\11\x9\11\11\x9\74\160\x3e\74\163\x74\162\157\x6e\x67\x3e\x50\157\163\x73\151\x62\x6c\145\x20\x43\141\x75\x73\x65\72\40\x3c\57\163\164\162\x6f\x6e\147\76\124\150\x65\40\x76\x61\x6c\165\145\x20\x69\156\x20\x27\111\144\120\x20\105\156\x74\151\x74\x79\40\111\104\x20\157\162\40\111\163\163\x75\x65\162\47\x20\146\x69\x65\154\144\40\x69\x6e\x20\123\145\162\x76\x69\143\x65\40\x50\162\x6f\166\151\x64\145\x72\40\123\x65\x74\x74\x69\156\147\x73\x20\151\163\40\x69\x6e\x63\x6f\162\162\x65\143\164\x3c\57\160\x3e\xa\x9\11\11\x9\x9\74\x70\76\x3c\163\164\x72\x6f\156\x67\x3e\105\x78\160\x65\x63\164\145\144\x20\x45\156\164\x69\164\171\40\111\x44\72\40\74\57\x73\x74\162\157\x6e\147\x3e" . xss::filter($Ot) . "\x3c\x70\x3e\xa\11\x9\11\11\x9\x3c\x70\x3e\74\x73\x74\x72\157\156\x67\x3e\x45\x6e\x74\x69\164\171\40\x49\x44\40\106\157\x75\x6e\x64\x3a\40\74\x2f\163\164\162\x6f\156\147\x3e" . xss::filter(Utilities::getIdpIssuer()) . "\x3c\57\x70\76\12\11\x9\x9\x9\x9\74\x2f\144\x69\166\x3e\xa\11\11\x9\11\11\x3c\144\x69\166\40\163\164\x79\x6c\x65\75\42\x6d\x61\x72\147\x69\x6e\x3a\x33\x25\73\144\x69\163\x70\x6c\x61\171\x3a\142\154\157\143\x6b\x3b\x74\x65\x78\164\x2d\x61\x6c\x69\x67\156\x3a\x63\145\156\164\x65\162\73\x22\76\12\11\11\x9\x9\x9\x3c\x64\151\166\x20\x73\164\171\154\145\75\x22\x6d\x61\x72\147\151\x6e\x3a\63\x25\73\144\x69\x73\x70\154\x61\171\72\x62\x6c\157\143\x6b\73\x74\145\170\164\55\141\154\x69\147\x6e\72\x63\x65\156\164\145\x72\73\x22\76\x3c\151\156\x70\x75\164\40\x73\164\x79\154\145\75\42\x70\141\144\144\151\156\x67\x3a\x31\x25\x3b\x77\151\144\x74\150\x3a\x31\60\60\x70\x78\73\142\x61\143\x6b\147\x72\157\x75\156\144\72\40\x23\60\60\x39\x31\103\x44\x20\156\x6f\156\x65\40\162\x65\160\145\x61\x74\x20\x73\x63\162\157\154\154\x20\x30\45\40\x30\x25\x3b\143\165\162\x73\157\162\72\40\160\x6f\x69\x6e\x74\145\162\73\146\157\x6e\164\x2d\x73\151\172\x65\72\61\65\160\x78\x3b\142\157\x72\x64\145\162\55\167\151\144\x74\150\72\x20\x31\x70\x78\x3b\142\x6f\x72\144\145\162\55\x73\x74\x79\154\145\x3a\x20\163\157\154\151\x64\x3b\142\x6f\162\x64\x65\x72\55\162\141\x64\x69\165\x73\x3a\x20\63\160\170\73\167\x68\x69\164\145\55\163\x70\141\x63\145\72\x20\x6e\157\x77\x72\141\x70\73\142\157\x78\55\163\151\x7a\151\x6e\147\x3a\x20\142\x6f\162\144\145\162\x2d\x62\157\170\x3b\142\157\162\144\145\162\x2d\143\x6f\154\157\x72\72\40\43\x30\x30\x37\63\101\101\x3b\x62\x6f\x78\55\x73\150\141\144\157\x77\72\40\x30\160\x78\40\x31\160\170\x20\x30\160\x78\x20\162\147\142\x61\x28\61\x32\x30\x2c\40\x32\60\60\x2c\x20\x32\63\60\x2c\40\60\56\x36\x29\40\x69\x6e\163\145\x74\x3b\x63\x6f\x6c\157\162\x3a\x20\x23\106\106\x46\73\42\x74\x79\160\145\75\42\x62\x75\x74\164\157\x6e\42\40\166\141\x6c\165\145\x3d\42\x44\x6f\156\x65\42\40\x6f\156\x43\x6c\151\x63\153\x3d\x22\x73\145\154\146\x2e\x63\154\157\x73\x65\50\51\x3b\42\x3e\x3c\x2f\144\151\166\76";
        Rx:
        exit;
        goto uQ;
        Ol:
        if (strcmp($bL, self::getIssuer()) === 0) {
            goto Lw;
        }
        if (array_key_exists("\x52\x65\154\141\171\123\164\x61\164\145", $_REQUEST) && $_REQUEST["\x52\x65\x6c\x61\x79\123\164\141\164\x65"] == "\x74\x65\x73\164\x56\141\x6c\151\x64\x61\164\x65") {
            goto h3;
        }
        echo "\74\x64\151\x76\40\163\164\x79\x6c\145\75\x22\143\157\x6c\x6f\162\x3a\x20\43\x61\71\x34\x34\x34\62\73\146\157\156\164\55\x73\151\172\145\72\x31\x34\160\164\73\x20\x6d\141\x72\147\151\156\x2d\142\x6f\164\164\157\x6d\72\x32\x30\x70\x78\x3b\x22\x3e\74\x70\76\x3c\142\x3e\x45\x72\x72\x6f\x72\x3a\40\74\x2f\142\76\127\x65\x20\x63\157\x75\x6c\x64\x20\156\x6f\x74\x20\x73\x69\x67\x6e\x20\171\157\x75\x20\151\156\x2e\40\120\x6c\x65\x61\x73\x65\x20\x63\x6f\156\x74\141\143\x74\40\171\157\x75\162\40\101\144\155\x69\x6e\x69\163\x74\x72\x61\x74\157\162\56\x3c\x2f\160\x3e\x3c\x2f\x64\151\166\76";
        goto dg;
        h3:
        echo "\74\x64\x69\166\x20\163\164\x79\154\145\x3d\42\146\157\156\x74\x2d\146\x61\x6d\x69\154\x79\72\x43\x61\x6c\x69\x62\x72\x69\73\160\x61\144\x64\151\x6e\x67\72\x30\x20\x33\45\x3b\x22\x3e";
        echo "\x3c\x64\151\x76\x20\163\164\171\154\x65\75\42\x63\x6f\154\157\162\x3a\40\43\x61\71\64\64\x34\62\x3b\x62\x61\143\x6b\147\x72\x6f\x75\x6e\144\55\x63\x6f\x6c\157\x72\x3a\x20\43\x66\62\x64\x65\144\x65\73\x70\141\144\144\x69\156\x67\x3a\x20\61\65\160\x78\x3b\155\141\162\147\x69\156\55\x62\157\x74\164\157\155\x3a\x20\62\60\160\170\x3b\x74\x65\x78\x74\55\141\x6c\151\147\156\x3a\143\145\x6e\164\145\162\x3b\x62\x6f\x72\x64\145\x72\72\61\160\x78\x20\163\x6f\154\x69\x64\40\x23\105\66\102\63\102\62\73\146\157\x6e\164\55\163\x69\x7a\145\x3a\61\70\160\x74\x3b\42\x3e\40\105\x52\x52\117\x52\x3c\x2f\x64\x69\x76\76\12\x20\40\x20\x20\40\40\40\40\40\40\40\x20\x20\x20\40\x20\x20\40\x20\x20\74\x64\x69\x76\x20\x73\164\171\154\x65\75\x22\143\157\154\x6f\162\x3a\40\x23\x61\71\x34\64\x34\62\x3b\x66\x6f\156\x74\x2d\x73\151\172\145\x3a\x31\64\160\164\73\40\155\141\x72\x67\x69\156\55\142\x6f\164\x74\x6f\155\72\62\60\160\170\73\x22\x3e\x3c\x70\76\74\x73\164\x72\157\x6e\147\76\x45\x72\162\157\162\x3a\x20\74\x2f\x73\164\x72\x6f\x6e\147\x3e\x49\156\166\x61\154\x69\144\40\101\165\x64\151\145\156\x63\145\x20\x55\x52\x49\56\74\57\x70\76\12\x20\40\x20\x20\x20\x20\x20\x20\40\x20\40\40\40\x20\x20\40\x20\40\40\40\74\160\76\x50\154\145\x61\x73\x65\x20\x63\x6f\156\x74\141\143\x74\40\171\157\x75\x72\x20\141\144\155\x69\x6e\x69\x73\164\162\141\164\157\162\40\141\x6e\144\x20\162\x65\x70\x6f\162\164\x20\x74\x68\x65\40\146\157\154\154\157\x77\151\x6e\147\x20\x65\162\162\x6f\x72\x3a\74\57\160\x3e\12\x20\40\x20\x20\40\40\40\x20\40\x20\40\40\40\40\x20\x20\40\40\x20\x20\74\160\x3e\74\163\x74\x72\x6f\x6e\147\76\x50\157\x73\x73\x69\142\154\145\x20\103\x61\165\163\145\x3a\x20\x3c\57\163\164\162\157\x6e\147\76\x54\150\x65\40\x76\141\154\165\x65\40\x6f\146\40\47\x41\165\x64\x69\x65\156\x63\x65\40\125\122\111\47\40\x66\x69\145\154\x64\40\157\156\40\111\144\145\x6e\164\x69\164\171\40\120\162\157\166\151\x64\145\162\47\x73\40\163\151\144\x65\x20\151\163\40\x69\156\x63\157\x72\162\x65\143\164\x3c\57\160\76\xa\x20\40\40\40\x20\40\x20\x20\x20\40\x20\x20\x20\40\x20\40\40\40\x20\40\x3c\x70\x3e\x45\170\160\145\x63\x74\x65\x64\40\157\x6e\145\40\157\x66\40\x74\x68\145\x20\101\x75\x64\151\x65\x6e\143\145\x73\40\164\157\40\142\145\72\40" . xss::filter(self::getIssuer()) . "\x3c\160\76\xa\40\40\40\40\x20\40\40\40\x20\x20\x20\40\x20\x20\x20\x20\40\x20\x20\x20\74\57\144\151\166\76\12\x20\x20\x20\x20\40\x20\40\40\40\40\x20\40\40\x20\40\40\x20\x20\x20\x20\x3c\144\151\166\40\163\x74\171\154\x65\x3d\42\155\141\162\147\151\x6e\72\x33\45\73\x64\151\x73\x70\x6c\141\x79\x3a\x62\154\157\143\x6b\x3b\x74\x65\170\164\x2d\141\x6c\151\x67\156\x3a\x63\x65\156\164\x65\162\73\x22\76\12\x20\x20\40\40\40\40\40\40\x20\40\x20\x20\40\40\x20\40\x20\x20\40\40\x3c\144\x69\166\40\163\164\171\x6c\145\75\x22\x6d\141\162\x67\151\156\x3a\63\45\x3b\144\151\x73\x70\x6c\141\x79\72\x62\154\x6f\x63\153\x3b\164\145\170\x74\55\141\154\151\147\156\x3a\x63\x65\156\164\145\x72\73\x22\x3e\x3c\x69\x6e\160\165\x74\40\x73\164\x79\x6c\145\x3d\42\160\x61\x64\144\151\156\147\72\x31\45\x3b\x77\x69\x64\x74\x68\72\61\x30\x30\160\170\73\x62\141\143\x6b\x67\x72\x6f\165\156\x64\72\40\x23\x30\60\x39\x31\103\104\40\156\157\x6e\x65\x20\162\x65\160\145\x61\164\x20\163\x63\162\157\x6c\154\40\x30\x25\40\60\45\73\143\x75\x72\x73\x6f\162\72\40\x70\157\151\x6e\164\x65\x72\73\x66\x6f\x6e\x74\55\x73\x69\172\x65\72\61\65\160\170\73\142\x6f\x72\144\x65\162\x2d\167\x69\x64\164\x68\72\x20\61\160\170\x3b\142\x6f\x72\144\145\162\x2d\x73\164\171\x6c\x65\72\40\x73\x6f\154\151\x64\x3b\x62\x6f\x72\x64\x65\x72\55\162\x61\144\151\x75\x73\x3a\40\63\x70\x78\x3b\x77\x68\x69\x74\145\55\163\x70\x61\x63\x65\x3a\x20\x6e\x6f\x77\162\141\160\73\x62\x6f\x78\55\x73\x69\x7a\151\x6e\x67\x3a\40\x62\x6f\162\144\x65\162\x2d\142\157\170\x3b\142\x6f\x72\144\x65\x72\x2d\143\157\154\x6f\162\x3a\40\x23\60\x30\x37\63\101\x41\73\x62\x6f\170\55\163\x68\x61\x64\x6f\167\72\40\x30\x70\170\x20\61\x70\x78\40\60\x70\x78\40\162\147\x62\x61\x28\61\x32\x30\54\x20\62\x30\x30\x2c\40\62\x33\x30\x2c\40\60\56\66\x29\x20\151\156\163\x65\164\x3b\x63\x6f\x6c\157\162\72\40\x23\106\x46\x46\x3b\42\164\x79\x70\145\x3d\42\142\x75\164\164\157\156\42\x20\x76\141\x6c\165\x65\75\42\x44\157\156\x65\x22\x20\x6f\156\103\154\x69\x63\x6b\x3d\x22\x73\x65\154\x66\56\143\x6c\157\163\145\50\x29\x3b\42\x3e\74\57\x64\151\x76\76";
        dg:
        exit;
        goto Xc;
        Lw:
        return TRUE;
        Xc:
        uQ:
    }
    private static function doDecryptElement(DOMElement $I0, XMLSecurityKey $Ll, array &$ce)
    {
        $en = new XMLSecEnc();
        $en->setNode($I0);
        $en->type = $I0->getAttribute("\124\171\x70\x65");
        $sw = $en->locateKey($I0);
        if ($sw) {
            goto uK;
        }
        echo sprintf("\x43\x6f\165\154\x64\x20\156\x6f\x74\40\x6c\157\x63\x61\164\x65\x20\153\145\x79\40\x61\x6c\147\x6f\162\x69\164\150\x6d\x20\x69\x6e\40\x65\156\x63\x72\x79\x70\164\x65\x64\40\144\x61\164\x61\x2e");
        exit;
        uK:
        $vp = $en->locateKeyInfo($sw);
        if ($vp) {
            goto B3;
        }
        echo sprintf("\103\x6f\x75\x6c\x64\x20\156\157\x74\x20\154\157\x63\x61\164\145\x20\x3c\x64\163\151\x67\72\113\x65\171\111\x6e\146\157\x3e\40\x66\x6f\x72\40\x74\x68\145\40\x65\156\x63\x72\x79\160\x74\145\144\x20\153\145\171\x2e");
        exit;
        B3:
        $hQ = $Ll->getAlgorithm();
        if ($vp->isEncrypted) {
            goto Eu;
        }
        $Ic = $sw->getAlgorithm();
        if (!($hQ !== $Ic)) {
            goto jz;
        }
        echo sprintf("\101\x6c\147\157\x72\151\164\150\x6d\40\155\151\x73\155\141\164\143\x68\40\142\x65\164\x77\145\145\156\40\151\x6e\160\165\164\40\153\145\x79\x20\x61\156\x64\40\x6b\145\171\40\x69\156\40\x6d\x65\163\163\141\x67\x65\56\x20" . "\113\x65\171\40\x77\141\163\72\40" . xss::filter(var_export($hQ, TRUE)) . "\x3b\40\x6d\145\163\163\x61\x67\145\40\167\141\163\x3a\40" . xss::filter(var_export($Ic, TRUE)));
        exit;
        jz:
        $sw = $Ll;
        goto WP;
        Eu:
        $nU = $vp->getAlgorithm();
        if (!in_array($nU, $ce, TRUE)) {
            goto MV;
        }
        echo sprintf("\101\x6c\x67\157\x72\x69\x74\x68\x6d\x20\x64\151\163\141\x62\154\145\x64\72\40" . xss::filter(var_export($nU, TRUE)));
        exit;
        MV:
        if (!($nU === XMLSecurityKey::RSA_OAEP_MGF1P && $hQ === XMLSecurityKey::RSA_1_5)) {
            goto Qo;
        }
        $hQ = XMLSecurityKey::RSA_OAEP_MGF1P;
        Qo:
        if (!($hQ !== $nU)) {
            goto Nw;
        }
        echo sprintf("\x41\154\147\x6f\162\x69\164\x68\155\40\155\151\163\x6d\x61\x74\143\150\40\x62\x65\164\167\145\x65\156\40\x69\156\160\x75\164\40\153\x65\171\40\x61\156\x64\x20\153\145\x79\40\x75\x73\145\144\40\164\x6f\40\x65\156\143\x72\x79\160\x74\x20" . "\40\164\150\x65\x20\163\171\155\155\145\164\x72\x69\x63\40\153\x65\x79\40\x66\157\162\x20\164\x68\145\40\x6d\x65\163\163\x61\147\x65\x2e\40\x4b\145\x79\40\167\141\163\x3a\x20" . xss::filter(var_export($hQ, TRUE)) . "\x3b\40\155\145\x73\x73\141\x67\145\40\167\141\163\x3a\40" . xss::filter(var_export($nU, TRUE)));
        exit;
        Nw:
        $nC = $vp->encryptedCtx;
        $vp->key = $Ll->key;
        $U2 = $sw->getSymmetricKeySize();
        if (!($U2 === NULL)) {
            goto Wg;
        }
        echo sprintf("\125\x6e\153\156\157\167\156\40\x6b\145\x79\x20\163\151\x7a\145\x20\x66\157\162\40\x65\x6e\x63\x72\x79\160\x74\x69\157\x6e\40\x61\x6c\x67\157\162\151\164\x68\155\x3a\40" . xss::filter(var_export($sw->type, TRUE)));
        exit;
        Wg:
        try {
            $yQ = $nC->decryptKey($vp);
            if (!(strlen($yQ) != $U2)) {
                goto WG;
            }
            echo sprintf("\x55\156\x65\x78\x70\145\x63\164\145\x64\x20\153\145\x79\x20\163\x69\172\x65\40\50" . xss::filter(strlen($yQ) * 8) . "\x62\151\164\163\x29\40\x66\x6f\162\x20\x65\156\x63\x72\171\160\164\151\x6f\x6e\x20\x61\x6c\x67\x6f\162\151\164\150\x6d\x3a\x20" . xss::filter(var_export($sw->type, TRUE)));
            exit;
            WG:
        } catch (Exception $c4) {
            $F6 = $nC->getCipherValue();
            $Cj = openssl_pkey_get_details($vp->key);
            $Cj = sha1(serialize($Cj), TRUE);
            $yQ = sha1($F6 . $Cj, TRUE);
            if (strlen($yQ) > $U2) {
                goto Gb;
            }
            if (strlen($yQ) < $U2) {
                goto pB;
            }
            goto Bt;
            Gb:
            $yQ = substr($yQ, 0, $U2);
            goto Bt;
            pB:
            $yQ = str_pad($yQ, $U2);
            Bt:
        }
        $sw->loadkey($yQ);
        WP:
        $af = $sw->getAlgorithm();
        if (!in_array($af, $ce, TRUE)) {
            goto mN;
        }
        echo sprintf("\101\154\x67\x6f\162\x69\164\x68\155\40\x64\x69\x73\x61\x62\154\145\x64\x3a\40" . xss::filter(var_export($af, TRUE)));
        exit;
        mN:
        $qE = $en->decryptNode($sw, FALSE);
        $mk = "\74\162\x6f\x6f\x74\x20\x78\x6d\154\x6e\x73\72\163\x61\x6d\x6c\x3d\x22\165\x72\156\72\x6f\x61\163\x69\x73\72\x6e\141\155\145\163\72\164\143\x3a\123\101\115\114\72\x32\56\x30\x3a\x61\163\x73\x65\162\x74\x69\157\x6e\x22\x20" . "\x78\x6d\x6c\156\x73\72\x78\x73\151\75\42\150\x74\164\x70\72\x2f\x2f\167\x77\167\x2e\x77\x33\56\x6f\162\x67\57\62\60\60\x31\57\130\x4d\x4c\x53\x63\x68\x65\x6d\x61\55\x69\x6e\163\x74\x61\x6e\x63\x65\x22\76" . $qE . "\74\x2f\162\157\x6f\164\x3e";
        $eP = new DOMDocument();
        if (@$eP->loadXML($mk)) {
            goto L3;
        }
        echo sprintf("\x46\141\x69\x6c\145\144\40\x74\157\40\x70\x61\x72\x73\x65\40\x64\x65\143\162\x79\x70\164\145\x64\x20\130\x4d\x4c\x2e\40\115\141\x79\142\145\40\164\150\x65\40\x77\x72\x6f\x6e\147\40\163\x68\x61\162\145\x64\x6b\145\x79\x20\167\x61\163\x20\165\x73\145\x64\x3f");
        throw new Exception("\106\141\x69\x6c\145\144\40\164\157\40\x70\x61\162\163\x65\40\x64\145\x63\162\x79\x70\164\145\144\x20\130\x4d\x4c\56\x20\x4d\x61\x79\142\145\x20\x74\150\x65\40\167\162\157\x6e\x67\40\163\x68\x61\x72\145\x64\153\x65\171\x20\167\141\163\40\x75\163\x65\x64\77");
        L3:
        $JW = $eP->firstChild->firstChild;
        if (!($JW === NULL)) {
            goto kQ;
        }
        echo sprintf("\x4d\151\x73\x73\x69\156\x67\x20\145\x6e\x63\162\x79\160\164\x65\x64\40\x65\154\x65\x6d\x65\156\164\56");
        throw new Exception("\x4d\x69\163\163\151\156\147\x20\145\x6e\x63\162\171\x70\164\x65\144\40\x65\154\x65\155\145\156\164\x2e");
        kQ:
        if ($JW instanceof DOMElement) {
            goto tt;
        }
        echo sprintf("\x44\x65\x63\x72\171\160\x74\145\x64\x20\145\x6c\x65\155\x65\x6e\164\40\167\x61\163\40\x6e\157\164\x20\141\143\x74\x75\141\154\x6c\x79\x20\141\x20\x44\117\x4d\x45\154\x65\155\x65\x6e\164\56");
        tt:
        return $JW;
    }
    public static function decryptElement(DOMElement $I0, XMLSecurityKey $Ll, array $ce = array(), XMLSecurityKey $IX = NULL)
    {
        try {
            return self::doDecryptElement($I0, $Ll, $ce);
        } catch (Exception $c4) {
            if (is_null($IX)) {
                goto wo;
            }
            try {
                return self::doDecryptElement($I0, $IX, $ce);
            } catch (Exception $rr) {
            }
            wo:
            echo sprintf("\x46\x61\x69\x6c\145\x64\x20\x74\x6f\40\x64\x65\x63\162\171\160\164\40\x58\x4d\x4c\x20\145\x6c\x65\x6d\145\x6e\164\x2e");
            exit;
        }
    }
    public static function showErrorMessage($AM, $nl, $YK, $Ny = FALSE)
    {
        global $base_url;
        $b3 = $Ny === TRUE ? "\157\156\103\x6c\x69\x63\x6b\75\42\163\145\154\x66\56\x63\154\157\x73\x65\50\51\x3b\x22" : "\150\162\x65\x66\75\x22" . $base_url . "\x2f\165\163\145\162\x2f\x6c\157\x67\x69\156\42";
        echo "\x3c\144\151\x76\40\x73\164\171\154\x65\75\42\146\157\x6e\164\x2d\146\x61\x6d\151\154\171\72\103\x61\x6c\x69\142\162\151\73\x70\x61\144\144\151\x6e\x67\72\60\40\x33\x25\x3b\x22\x3e";
        echo "\x3c\x64\x69\x76\40\163\x74\171\x6c\x65\x3d\42\x63\x6f\x6c\157\x72\72\40\43\141\71\x34\64\x34\x32\x3b\142\141\x63\153\147\x72\157\165\x6e\144\55\x63\157\x6c\157\162\x3a\x20\43\x66\x32\144\x65\144\145\73\x70\x61\x64\144\x69\156\147\x3a\x20\x31\x35\x70\x78\73\155\x61\162\x67\151\156\x2d\142\x6f\164\164\x6f\x6d\x3a\x20\62\x30\x70\170\73\164\x65\170\164\x2d\141\x6c\151\x67\156\72\143\145\156\164\x65\162\x3b\x62\x6f\x72\x64\145\x72\72\61\160\x78\x20\163\x6f\154\x69\144\40\x23\x45\66\102\63\102\62\x3b\x66\157\x6e\164\55\163\151\172\x65\x3a\x31\x38\160\164\73\x22\x3e\40\x45\122\x52\117\x52\x3c\x2f\x64\151\x76\76\xa\40\40\40\x20\40\x20\x20\x20\40\40\40\x20\40\x20\x20\x20\40\40\40\x20\x20\x20\40\x20\40\x20\x20\40\x20\40\40\40\x3c\x64\x69\x76\x20\x73\x74\171\x6c\x65\x3d\x22\143\157\154\157\x72\x3a\x20\43\x61\71\64\64\64\x32\x3b\x66\x6f\x6e\164\x2d\x73\x69\x7a\145\72\61\64\160\x74\73\x20\155\x61\162\147\x69\x6e\55\142\x6f\x74\164\x6f\155\72\x32\x30\x70\170\73\42\x3e\74\x70\x3e\x3c\163\x74\162\157\156\x67\x3e\105\x72\162\157\162\x3a\40\x3c\x2f\x73\x74\x72\x6f\x6e\147\76" . xss::filter($AM) . "\74\57\x70\x3e\xa\x20\x20\x20\x20\x20\40\40\x20\40\x20\40\40\x20\40\x20\x20\x20\x20\x20\x20\40\40\40\40\40\40\x20\40\x20\x20\40\x20\x20\x20\40\x20\74\x70\76" . xss::filter($nl) . "\x3c\x2f\x70\76\xa\x20\x20\x20\40\x20\40\40\x20\40\x20\x20\40\x20\x20\x20\x20\x20\40\x20\x20\40\x20\x20\x20\x20\40\x20\40\40\x20\x20\40\x20\x20\40\40\x3c\160\x3e\x3c\x73\164\162\x6f\156\147\76\120\157\x73\x73\151\x62\154\x65\40\x43\141\165\x73\x65\x3a\40\74\x2f\x73\164\162\157\156\147\76" . xss::filter($YK) . "\x3c\57\x70\76\xa\x20\x20\40\x20\x20\x20\x20\x20\40\x20\40\40\40\x20\x20\40\40\x20\x20\x20\40\x20\x20\x20\x20\40\x20\40\40\x20\x20\40\74\57\x64\151\x76\x3e\12\x20\x20\40\40\40\x20\40\40\40\40\40\40\40\40\x20\40\x20\40\x20\x20\40\x20\x20\40\x20\40\40\40\40\40\40\x20\74\144\151\166\40\163\x74\171\154\145\x3d\x22\155\x61\x72\147\151\x6e\72\x33\45\x3b\144\151\163\x70\x6c\x61\171\x3a\142\154\x6f\x63\x6b\73\164\145\x78\164\x2d\141\154\x69\x67\x6e\x3a\x63\x65\x6e\x74\x65\162\73\x22\x3e\74\x2f\144\151\166\76\12\x20\x20\x20\40\40\x20\40\x20\40\40\40\40\40\40\40\x20\x20\x20\x20\40\40\x20\40\40\x20\x20\40\40\x20\40\40\x20\x3c\x64\x69\166\40\163\164\171\154\x65\x3d\42\155\x61\x72\147\x69\x6e\72\63\x25\x3b\144\151\x73\x70\154\x61\171\72\x62\154\x6f\x63\153\73\164\145\170\x74\55\x61\x6c\x69\147\x6e\x3a\143\145\156\164\x65\162\73\42\76\12\40\x20\x20\x20\40\x20\40\x20\x20\x20\x20\x20\40\x20\x20\x20\40\x20\40\x20\40\x20\x20\x20\40\x20\40\40\40\x20\x20\40\40\x20\x20\x20\x3c\x61\40\x73\x74\171\154\145\x3d\42\160\141\144\x64\151\156\147\x3a\x31\x25\x3b\x77\151\x64\164\x68\72\x31\60\60\160\x78\73\142\x61\x63\153\x67\162\157\x75\156\x64\x3a\40\x23\x30\60\x39\x31\x43\x44\x20\x6e\x6f\156\x65\40\x72\x65\x70\x65\x61\x74\x20\x73\x63\162\x6f\154\154\x20\x30\x25\x20\60\x25\73\143\165\162\x73\x6f\162\72\x20\x70\157\151\x6e\164\x65\162\x3b\146\157\x6e\164\x2d\163\x69\x7a\145\72\x31\65\160\x78\x3b\x62\x6f\162\144\145\162\55\167\x69\x64\x74\x68\72\x20\x31\160\170\73\x62\157\x72\x64\145\162\x2d\163\x74\x79\x6c\x65\72\x20\x73\157\x6c\x69\x64\x3b\x62\x6f\162\x64\x65\162\55\162\x61\x64\151\x75\163\x3a\40\x33\x70\x78\x3b\167\x68\151\x74\x65\x2d\163\160\141\143\145\x3a\40\x6e\157\x77\x72\141\160\x3b\x62\157\x78\55\x73\x69\172\151\x6e\147\x3a\x20\142\157\162\x64\145\162\55\142\157\x78\x3b\x62\x6f\162\144\145\x72\55\143\x6f\154\x6f\x72\x3a\40\43\60\60\67\63\x41\101\x3b\142\x6f\170\x2d\x73\150\x61\x64\157\167\x3a\40\x30\x70\x78\40\x31\160\170\40\60\x70\170\40\162\x67\142\x61\50\61\x32\x30\x2c\40\x32\x30\60\x2c\x20\62\x33\60\x2c\40\60\x2e\66\51\40\x69\156\163\145\164\x3b\x63\157\x6c\157\x72\x3a\40\x23\x46\106\106\x3b\40\164\x65\x78\164\x2d\144\145\143\157\x72\x61\164\x69\x6f\156\x3a\40\x6e\x6f\156\145\73\42\164\171\160\145\75\x22\142\165\x74\164\x6f\156\x22\x20\x20" . $b3 . "\40\76\x44\x6f\x6e\x65\x3c\x2f\x61\x3e\xa\x20\x20\x20\x20\x20\40\x20\x20\40\x20\40\40\40\40\40\40\40\x20\40\x20\40\40\40\40\40\x20\40\40\x20\x20\40\40\74\57\144\151\166\76";
        exit;
    }
    public static function getEncryptionAlgorithm($gm)
    {
        switch ($gm) {
            case "\x68\x74\x74\160\72\57\57\x77\167\x77\56\167\x33\x2e\x6f\x72\x67\57\62\60\x30\61\x2f\60\x34\57\x78\x6d\154\145\156\x63\x23\x74\162\x69\160\x6c\145\144\x65\163\x2d\x63\x62\143":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto N_;
            case "\150\164\164\x70\72\57\x2f\167\x77\x77\x2e\167\63\x2e\x6f\162\147\x2f\x32\x30\x30\61\57\x30\x34\x2f\x78\x6d\154\145\x6e\x63\x23\141\145\x73\x31\62\70\x2d\x63\142\143":
                return XMLSecurityKey::AES128_CBC;
            case "\150\x74\164\160\x3a\x2f\x2f\x77\x77\167\56\x77\x33\x2e\157\162\147\57\62\x30\x30\61\57\x30\64\x2f\x78\x6d\154\x65\x6e\x63\x23\141\145\x73\61\x39\x32\x2d\143\x62\x63":
                return XMLSecurityKey::AES192_CBC;
                goto N_;
            case "\x68\164\x74\x70\72\57\57\167\167\167\x2e\167\x33\56\157\162\x67\57\62\x30\60\61\x2f\60\x34\57\170\x6d\154\x65\156\143\43\x61\x65\163\x32\x35\66\x2d\143\142\143":
                return XMLSecurityKey::AES256_CBC;
                goto N_;
            case "\x68\164\164\160\72\x2f\x2f\167\167\x77\x2e\167\63\56\x6f\x72\147\x2f\x32\60\x30\x31\x2f\x30\x34\x2f\x78\155\154\145\156\x63\43\x72\x73\x61\55\x31\x5f\65":
                return XMLSecurityKey::RSA_1_5;
                goto N_;
            case "\150\x74\x74\160\x3a\x2f\57\x77\x77\x77\56\x77\x33\x2e\157\x72\147\x2f\x32\60\60\x31\57\x30\x34\x2f\x78\x6d\154\x65\x6e\143\x23\x72\163\141\55\x6f\141\145\160\55\155\147\146\x31\160":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto N_;
            case "\x68\x74\x74\160\x3a\x2f\x2f\167\x77\167\56\x77\x33\x2e\157\162\147\57\x32\x30\60\60\57\x30\x39\x2f\170\155\154\x64\x73\x69\147\43\144\163\x61\55\x73\x68\x61\61":
                return XMLSecurityKey::DSA_SHA1;
                goto N_;
            case "\150\164\x74\x70\x3a\x2f\57\167\167\x77\56\167\63\56\157\x72\x67\57\62\60\60\60\57\60\x39\x2f\x78\x6d\x6c\144\x73\151\x67\43\162\x73\x61\55\x73\150\141\61":
                return XMLSecurityKey::RSA_SHA1;
                goto N_;
            case "\150\164\x74\x70\72\57\57\x77\167\x77\56\x77\x33\56\157\162\147\x2f\62\60\60\61\57\x30\x34\x2f\x78\155\x6c\x64\163\x69\x67\x2d\155\x6f\x72\145\x23\162\x73\x61\55\163\150\x61\x32\x35\x36":
                return XMLSecurityKey::RSA_SHA256;
                goto N_;
            case "\150\x74\164\x70\x3a\x2f\57\x77\167\167\56\167\63\56\157\162\x67\x2f\x32\x30\x30\x31\x2f\x30\x34\57\x78\155\x6c\144\163\x69\147\55\x6d\x6f\162\145\43\162\163\141\55\163\150\x61\63\70\64":
                return XMLSecurityKey::RSA_SHA384;
                goto N_;
            case "\x68\164\164\x70\72\57\x2f\167\167\167\56\x77\63\x2e\x6f\x72\x67\57\x32\x30\x30\x31\57\x30\x34\x2f\170\x6d\154\x64\x73\151\147\55\155\x6f\162\145\43\x72\x73\x61\x2d\163\150\141\x35\61\62":
                return XMLSecurityKey::RSA_SHA512;
                goto N_;
            default:
                echo sprintf("\x49\x6e\166\141\x6c\151\144\x20\105\x6e\x63\x72\x79\160\164\x69\157\x6e\40\115\x65\x74\x68\x6f\x64\72\x20" . xss::filter($gm));
                exit;
                goto N_;
        }
        sh:
        N_:
    }
    public static function sanitize_certificate($fW)
    {
        $fW = preg_replace("\57\133\15\xa\135\53\x2f", '', $fW);
        $fW = str_replace("\x2d", '', $fW);
        $fW = str_replace("\102\x45\x47\x49\x4e\x20\103\x45\122\124\111\106\x49\103\101\124\x45", '', $fW);
        $fW = str_replace("\x45\116\104\40\x43\x45\x52\x54\x49\106\x49\x43\101\124\x45", '', $fW);
        $fW = str_replace("\102\105\x47\111\116\x20\x50\125\x42\114\111\x43\40\113\105\131", '', $fW);
        $fW = str_replace("\105\116\x44\x20\x50\x55\x42\x4c\111\x43\x20\x4b\105\131", '', $fW);
        $fW = str_replace("\x20", '', $fW);
        $fW = chunk_split($fW, 64, "\15\12");
        $fW = "\x2d\x2d\x2d\x2d\x2d\102\x45\x47\111\x4e\x20\103\105\122\124\x49\x46\x49\103\x41\x54\105\55\55\55\55\x2d\xd\xa" . $fW . "\55\x2d\x2d\x2d\x2d\105\x4e\104\x20\x43\x45\122\x54\111\106\x49\103\x41\x54\x45\55\55\x2d\55\55";
        return $fW;
    }
    public static function sanitize_private_key($G3)
    {
        $G3 = preg_replace("\x2f\133\xd\xa\x5d\x2b\57", '', $G3);
        $G3 = str_replace("\55", '', $G3);
        $G3 = str_replace("\102\x45\107\111\x4e\40\x50\x52\x49\126\x41\x54\105\40\113\105\131", '', $G3);
        $G3 = str_replace("\x45\116\x44\40\120\x52\x49\x56\101\x54\x45\x20\113\105\131", '', $G3);
        $G3 = str_replace("\40", '', $G3);
        $G3 = chunk_split($G3, 64, "\15\12");
        $G3 = "\x2d\55\55\x2d\x2d\x42\105\107\111\x4e\x20\120\122\x49\126\101\x54\x45\40\x4b\105\x59\55\x2d\55\x2d\55\xd\12" . $G3 . "\55\55\55\x2d\x2d\x45\116\104\x20\x50\122\x49\126\x41\124\x45\x20\113\105\x59\x2d\55\55\x2d\55";
        return $G3;
    }
    public static function upload_metadata($Tk, $dr = false)
    {
        if (!empty(\Drupal::config("\x6d\x69\x6e\151\x6f\162\x61\x6e\x67\x65\137\x73\x61\155\154\x2e\163\145\x74\x74\151\x6e\x67\x73")->get("\x6d\151\156\x69\157\162\x61\156\x67\145\137\163\141\x6d\x6c\137\151\144\x70\x5f\x6e\141\x6d\x65"))) {
            goto wc;
        }
        \Drupal::configFactory()->getEditable("\155\151\x6e\151\157\x72\141\156\x67\x65\137\x73\141\x6d\x6c\56\x73\x65\x74\164\x69\x6e\147\x73")->set("\x6d\x69\x6e\151\157\162\141\x6e\147\145\x5f\x73\x61\x6d\154\137\x69\144\160\137\x6e\141\x6d\145", "\x49\144\145\x6e\164\151\x74\x79\x20\120\x72\x6f\x76\x69\144\x65\x72")->save();
        wc:
        $ph = new \DOMDocument();
        @$ph->loadXML($Tk);
        restore_error_handler();
        $gS = $ph->firstChild;
        if (!empty($gS)) {
            goto uf;
        }
        \Drupal::messenger()->addMessage(t("\x50\x6c\145\141\x73\x65\40\x70\x72\x6f\x76\x69\x64\145\40\x61\40\166\141\154\151\x64\40\155\145\x74\141\144\141\x74\141\x20\x66\x69\x6c\145\56"), "\x65\162\162\157\x72");
        return;
        goto D0;
        uf:
        $i8 = new MetadataReader($ph);
        $PM = $i8->getIdentityProviders();
        if (!empty($PM)) {
            goto wO;
        }
        \Drupal::messenger()->addMessage(t("\x50\154\145\141\x73\x65\x20\x70\x72\x6f\166\x69\x64\x65\40\x61\40\x76\141\x6c\x69\x64\40\x6d\145\164\141\144\141\164\141\x20\x66\x69\154\x65\x2e"), "\x65\162\162\x6f\162");
        return;
        wO:
        foreach ($PM as $yQ => $AR) {
            $Gs = $AR->getLoginURL("\x48\x54\124\120\x2d\x52\x65\144\x69\x72\145\x63\164");
            $rK = $AR->getLogoutURL("\x48\x54\124\x50\55\122\x65\144\x69\x72\145\143\x74");
            if (!empty($Gs)) {
                goto xf;
            }
            $Gs = $AR->getLoginURL("\x48\x54\x54\x50\55\x50\117\x53\124");
            $Gs = $AR->getLoginURL("\x48\124\x54\x50\x2d\x50\117\x53\124");
            xf:
            if (!empty($rK)) {
                goto tV;
            }
            $rK = $AR->getLogoutURL("\x48\124\x54\x50\x2d\120\117\x53\x54");
            tV:
            $DK = $AR->getEntityID();
            $Kc = $AR->getSigningCertificate();
            $Ob = serialize($Kc);
            if (!($dr == true)) {
                goto Et;
            }
            \Drupal::configFactory()->getEditable("\155\x69\x6e\x69\x6f\x72\141\156\147\x65\x5f\x73\141\x6d\154\x2e\163\145\164\164\x69\156\147\x73")->set("\x6d\x69\x6e\151\157\162\141\x6e\147\145\x5f\x73\141\155\x6c\137\151\x64\x70\x5f\154\x6f\147\x6f\x75\x74\137\165\162\x6c", $rK)->save();
            \Drupal::configFactory()->getEditable("\x6d\x69\x6e\151\x6f\x72\x61\156\147\145\137\163\141\155\x6c\x2e\163\145\x74\164\151\156\x67\163")->set("\155\x69\156\x69\157\x72\141\x6e\x67\145\137\163\x61\155\154\137\151\144\160\x5f\154\157\x67\x69\x6e\x5f\165\x72\154", $Gs)->save();
            Et:
            \Drupal::configFactory()->getEditable("\x6d\x69\156\x69\x6f\162\x61\x6e\147\145\x5f\163\141\x6d\x6c\56\x73\x65\x74\164\151\x6e\147\163")->set("\x6d\x69\x6e\151\x6f\162\x61\156\147\x65\137\163\x61\x6d\x6c\137\151\x64\x70\137\151\x73\x73\x75\x65\x72", $DK)->save();
            \Drupal::configFactory()->getEditable("\x6d\151\x6e\x69\x6f\162\x61\x6e\147\145\137\x73\x61\155\x6c\56\163\x65\164\x74\x69\156\x67\163")->set("\x6d\x69\156\151\x6f\162\141\156\147\x65\137\163\x61\155\154\137\151\x64\160\137\143\145\x72\164\x69\x66\x69\143\141\x74\x65", $Ob)->save();
            CU:
        }
        De:
        if (!($dr == true)) {
            goto pm;
        }
        \Drupal::messenger()->addMessage(t("\x49\x64\145\156\164\x69\164\x79\40\120\x72\157\x76\x69\144\x65\162\40\103\157\156\x66\151\147\165\x72\141\164\151\x6f\x6e\x20\x73\x75\143\143\x65\163\163\146\165\154\x6c\171\x20\x73\141\x76\145\144\56"));
        return;
        pm:
        D0:
    }
    public static function getSamlRequestPlanName()
    {
        return MiniorangeSAMLConstants::PLUGIN_VERSION == MiniorangeSAMLConstants::ENTERPRISE_VERSION ? "\144\x72\x75\160\x61\154\x38\137\x6d\151\x6e\151\x6f\162\x61\156\147\x65\137\x73\x61\x6d\x6c\x5f\x65\x6e\164\145\x72\x70\162\151\x73\145\137\x70\x6c\x61\x6e" : "\144\162\x75\x70\141\x6c\70\x5f\155\151\x6e\x69\x6f\162\x61\x6e\147\x65\137\163\x61\155\x6c\137\x70\x72\145\x6d\x69\x75\155\x5f\x70\154\141\x6e";
    }
    public static function getSamlRequestPlanType()
    {
        return MiniorangeSAMLConstants::PLUGIN_VERSION == MiniorangeSAMLConstants::ENTERPRISE_VERSION ? "\104\x52\x55\120\101\114\70\x5f\x53\101\115\114\137\x53\x50\137\x45\116\124\x45\x52\x50\122\111\x53\x45\x5f\115\117\104\x55\x4c\105" : "\104\122\125\x50\101\114\x38\x5f\123\x41\115\x4c\137\123\x50\137\120\122\x45\x4d\111\125\115\x5f\x4d\x4f\104\x55\114\x45";
    }
    public static function Print_SAML_Request($mg, $O_)
    {
        header("\103\157\156\x74\x65\x6e\x74\55\x54\x79\160\x65\72\x20\164\x65\170\164\x2f\150\164\x6d\154");
        $NW = new \DOMDocument();
        $NW->preserveWhiteSpace = false;
        $NW->formatOutput = true;
        $NW->loadXML($mg);
        if ($O_ == "\x64\151\x73\x70\154\141\x79\123\x41\x4d\114\x52\145\x71\165\145\163\164") {
            goto mg;
        }
        $BZ = "\x53\x41\x4d\x4c\40\x52\145\x73\x70\x6f\156\x73\145";
        goto PZ;
        mg:
        $BZ = "\123\101\x4d\114\x20\x52\x65\161\165\145\x73\x74";
        PZ:
        $qL = $NW->saveXML();
        $IL = htmlentities($qL);
        $IL = rtrim($IL);
        $mk = simplexml_load_string($qL);
        $ur = json_encode($mk);
        $sc = Utilities::getModulePath() . "\57\x63\163\x73\x2f\x6d\151\x6e\x69\x6f\x72\x61\x6e\x67\x65\x5f\x73\x61\x6d\x6c\56\155\157\144\165\154\145\x2e\x63\163\x73";
        $Qk = Utilities::getModulePath() . "\x2f\x6a\163\57\x73\150\157\167\123\x41\x4d\114\122\145\x73\160\x6f\x6e\163\x65\x2e\152\163";
        echo "\74\154\x69\156\153\40\x72\145\x6c\x3d\x27\x73\164\x79\154\x65\163\150\145\145\x74\x27\x20\151\x64\75\47\x6d\x6f\x5f\x73\141\155\154\137\x61\144\155\151\156\x5f\163\x65\164\x74\x69\x6e\x67\x73\x5f\163\x74\171\x6c\x65\x2d\143\x73\163\x27\40\40\x68\x72\x65\146\75\47" . $sc . "\x27\x20\164\171\160\x65\x3d\47\x74\145\x78\x74\57\143\x73\163\47\40\155\x65\x64\151\141\75\47\141\x6c\x6c\x27\x20\57\76\12\40\40\x20\40\x20\x20\x20\x20\x20\40\40\40\x3c\163\143\x72\x69\x70\x74\40\163\x72\143\75\x22" . xss::filter($Qk) . "\42\x3e\74\x2f\163\143\x72\x69\x70\164\x3e\xa\x9\11\x9\74\x64\151\x76\40\143\154\141\x73\163\x3d\42\x6d\157\55\144\151\x73\x70\x6c\141\x79\x2d\154\x6f\147\163\x22\40\76\74\x70\40\x74\x79\160\x65\x3d\42\164\145\170\x74\42\x20\40\40\x69\x64\x3d\42\123\101\x4d\114\137\164\171\160\145\42\76" . xss::filter($BZ) . "\74\57\160\x3e\x3c\57\x64\x69\166\76\12\xa\x9\11\11\x3c\x64\151\x76\x20\164\171\x70\x65\75\x22\x74\x65\x78\x74\42\40\x69\144\75\x22\123\x41\x4d\x4c\x5f\144\x69\x73\x70\x6c\x61\x79\x22\40\143\x6c\x61\x73\x73\x3d\x22\155\x6f\x2d\x64\x69\163\x70\154\141\171\55\142\x6c\x6f\143\x6b\x22\x3e\x3c\x70\162\x65\x20\x63\154\x61\163\x73\75\47\x62\x72\x75\x73\x68\x3a\x20\x78\x6d\x6c\73\47\x3e" . xss::filter($IL) . "\74\57\160\x72\145\76\x3c\x2f\144\151\166\x3e\xa\x9\x9\11\x3c\142\x72\x3e\xa\11\11\x9\x3c\x64\151\166\x20\x73\164\x79\x6c\x65\75\x22\155\141\162\147\x69\156\x3a\x33\x25\73\x64\x69\x73\x70\x6c\141\x79\x3a\x62\154\x6f\x63\x6b\73\164\145\170\x74\x2d\141\154\x69\147\156\72\143\145\x6e\164\145\x72\73\42\x3e\12\12\11\x9\11\x3c\144\x69\166\x20\163\x74\x79\x6c\145\75\x22\155\x61\162\147\x69\x6e\x3a\63\45\73\144\x69\163\160\154\x61\x79\72\x62\154\157\143\153\73\x74\145\170\x74\x2d\141\x6c\151\x67\156\72\143\x65\156\x74\x65\x72\x3b\42\x20\x3e\xa\xa\40\x20\x20\40\x20\x20\40\x20\x20\40\x20\40\74\x2f\x64\x69\x76\76\12\11\x9\x9\74\142\x75\164\164\157\x6e\x20\x69\x64\x3d\42\143\157\160\171\42\x20\157\x6e\143\x6c\151\143\153\x3d\42\x63\x6f\x70\x79\x44\x69\166\124\157\x43\154\x69\160\x62\157\x61\162\x64\50\51\x22\40\x20\x73\x74\x79\154\x65\75\42\160\x61\144\144\151\156\x67\x3a\x31\45\x3b\x77\x69\x64\x74\150\72\61\x30\x30\160\x78\73\x62\x61\143\153\147\162\157\165\x6e\x64\72\x20\43\x30\x30\x39\x31\103\104\x20\156\157\156\x65\40\x72\145\160\x65\141\164\40\x73\143\x72\x6f\154\154\x20\x30\x25\40\x30\45\73\x63\165\x72\163\157\x72\x3a\x20\160\x6f\151\x6e\x74\145\x72\x3b\146\x6f\156\x74\55\x73\151\x7a\145\72\61\65\x70\170\x3b\x62\x6f\162\144\x65\162\55\167\151\x64\164\x68\72\x20\61\160\x78\73\x62\x6f\x72\144\x65\x72\x2d\x73\x74\x79\x6c\145\x3a\x20\x73\157\x6c\151\x64\73\x62\x6f\x72\144\x65\x72\x2d\162\141\144\x69\x75\163\x3a\40\63\x70\170\x3b\167\150\x69\x74\x65\x2d\x73\160\x61\143\145\x3a\40\156\x6f\167\162\x61\x70\x3b\142\157\x78\x2d\x73\151\172\151\156\147\x3a\x20\x62\157\x72\x64\x65\162\x2d\142\157\170\73\x62\x6f\162\144\x65\162\55\x63\157\x6c\x6f\162\x3a\40\x23\x30\x30\x37\x33\x41\x41\x3b\x62\x6f\x78\55\x73\150\141\144\x6f\167\72\x20\60\x70\170\x20\x31\160\x78\x20\60\x70\x78\x20\x72\147\x62\x61\50\x31\x32\x30\54\x20\x32\60\x30\x2c\x20\62\x33\x30\54\40\x30\56\x36\x29\x20\x69\156\x73\x65\x74\73\143\x6f\x6c\157\x72\72\x20\x23\x46\106\106\73\42\x20\76\x43\157\160\x79\74\57\x62\x75\x74\164\157\x6e\x3e\12\x9\11\x9\46\x6e\142\163\160\x3b\12\x20\40\x20\40\x20\40\40\40\x20\x20\40\x20\x20\x20\40\x3c\x62\165\164\x74\x6f\x6e\40\x69\144\x3d\x22\144\x77\x6e\55\142\164\x6e\42\40\x6f\x6e\x63\154\151\143\153\x3d\42\x64\157\167\156\154\x6f\x61\x64\x28\51\42\40\163\164\171\x6c\x65\75\42\160\141\x64\x64\x69\x6e\x67\72\x31\45\73\x77\151\144\164\x68\72\61\x30\60\x70\170\x3b\x62\x61\143\153\147\x72\x6f\165\x6e\x64\72\40\43\x30\60\71\x31\x43\104\x20\x6e\x6f\156\x65\x20\x72\x65\160\145\x61\164\x20\x73\x63\162\157\x6c\x6c\40\x30\x25\40\60\45\73\143\x75\x72\163\x6f\162\72\40\160\157\151\x6e\164\145\x72\x3b\x66\x6f\156\x74\x2d\x73\151\x7a\x65\x3a\61\x35\x70\170\x3b\142\157\162\x64\145\x72\55\167\151\144\164\150\x3a\40\61\x70\x78\x3b\x62\x6f\x72\x64\x65\x72\x2d\x73\164\171\x6c\145\x3a\x20\163\x6f\x6c\x69\144\x3b\142\157\x72\x64\145\162\x2d\x72\x61\144\151\x75\x73\x3a\40\x33\160\x78\x3b\167\x68\151\164\x65\55\x73\x70\141\x63\x65\72\40\156\x6f\167\162\x61\x70\73\x62\x6f\x78\55\163\x69\x7a\151\x6e\x67\x3a\x20\142\157\x72\144\x65\x72\55\142\x6f\x78\73\142\x6f\x72\x64\145\162\55\143\157\154\157\x72\72\40\43\60\x30\67\63\101\x41\73\142\157\x78\x2d\163\150\141\144\157\167\x3a\x20\x30\x70\170\40\61\x70\170\x20\60\x70\x78\x20\x72\x67\x62\141\50\x31\x32\x30\x2c\x20\x32\60\60\x2c\40\x32\x33\x30\54\x20\x30\x2e\66\x29\40\151\156\x73\145\164\73\143\x6f\154\x6f\x72\72\x20\x23\106\x46\106\73\42\76\104\x6f\167\x6e\154\157\x61\144\x3c\57\142\165\164\x74\157\x6e\76\xa\11\x9\x9\x3c\57\144\x69\166\76\12\11\11\x9\74\x2f\144\x69\x76\x3e\12\xa\x9\11\x9";
        ob_end_flush();
        exit;
    }
    public static function getBaseUrl()
    {
        global $base_url;
        $tX = \Drupal::config("\155\151\x6e\x69\157\162\x61\x6e\x67\x65\x5f\163\x61\155\154\x2e\x73\x65\x74\x74\x69\156\147\163")->get("\155\x69\x6e\151\157\162\x61\x6e\x67\x65\x5f\163\x61\155\x6c\x5f\x62\141\163\145\x5f\x75\162\x6c");
        return isset($tX) && !empty($tX) ? $tX : $base_url;
    }
    public static function getIssuer()
    {
        $fb = \Drupal::config("\x6d\x69\x6e\151\x6f\162\141\x6e\x67\145\x5f\163\141\155\x6c\x2e\x73\x65\x74\164\x69\x6e\x67\x73")->get("\x6d\x69\x6e\x69\x6f\162\x61\156\x67\x65\137\x73\141\155\x6c\x5f\x65\x6e\164\151\164\x79\x5f\151\144");
        return isset($fb) && !empty($fb) ? $fb : self::getBaseUrl();
    }
    public static function getAcsUrl()
    {
        $Ft = self::getBaseUrl();
        return substr($Ft, -1) == "\57" ? $Ft . "\163\141\x6d\x6c\141\x73\163\145\x72\x74\151\157\156" : $Ft . "\57\163\x61\x6d\154\x61\x73\163\x65\x72\164\151\x6f\x6e";
    }
    public static function getLogoutUrl()
    {
        $Ft = self::getBaseUrl();
        return substr($Ft, -1) == "\57" ? $Ft . "\165\x73\x65\x72\x2f\x6c\157\147\x6f\x75\x74" : $Ft . "\x2f\x75\x73\145\x72\x2f\154\157\147\157\x75\164";
    }
    public static function getPublicCertificate()
    {
        $sg = \Drupal::config("\x6d\151\x6e\151\x6f\162\141\156\x67\145\137\x73\x61\155\154\56\163\145\x74\164\x69\x6e\x67\163")->get("\x6d\151\x6e\x69\x6f\x72\141\156\x67\x65\x5f\x73\x61\155\154\x5f\160\165\x62\154\137\x63\145\162\164\x69\146\x69\x63\x61\x74\145");
        if (isset($sg) && !empty($sg)) {
            goto rp;
        }
        return MiniorangeSAMLConstants::MINIORANGE_PUBLIC_CERTIFICATE;
        goto jE;
        rp:
        return $sg;
        jE:
    }
    public static function getPrivateKey()
    {
        $xA = \Drupal::config("\155\x69\156\151\x6f\162\141\x6e\x67\145\x5f\x73\141\x6d\x6c\56\163\145\164\x74\x69\156\x67\x73")->get("\155\151\156\151\x6f\x72\141\x6e\x67\x65\x5f\163\141\155\154\x5f\x70\x72\151\166\x61\164\x65\137\x63\x65\x72\164\x69\x66\x69\x63\141\x74\145");
        $qW = !is_null($xA) && !empty($xA) ? $xA : MiniorangeSAMLConstants::MINIORANGE_PRIVATE_KEY;
        return $qW;
    }
    public static function getIdpIssuer()
    {
        return \Drupal::config("\x6d\x69\x6e\x69\x6f\162\141\x6e\147\x65\x5f\x73\x61\x6d\154\56\x73\x65\x74\164\x69\x6e\x67\x73")->get("\155\x69\x6e\x69\157\162\141\156\x67\145\137\x73\x61\155\154\x5f\x69\x64\160\137\x69\163\163\x75\x65\162");
    }
    public static function getTestConfigUrl()
    {
        $nY = self::getBaseUrl() . "\x2f\x3f\x71\x3d\x74\x65\163\164\x53\101\115\114\103\157\x6e\x66\x69\147";
        return "\x5c\x27" . $nY . "\134\47";
    }
    public static function checkIfLogoutRequest($A9, $hJ)
    {
        if (!(array_key_exists("\123\x41\x4d\114\x52\x65\x71\x75\x65\163\164", $A9) && !empty($A9["\x53\101\x4d\114\122\x65\161\x75\145\163\164"]))) {
            goto Db;
        }
        $Mm = htmlspecialchars($A9["\x53\x41\115\x4c\122\145\161\165\x65\x73\x74"]);
        $Wn = "\x2f";
        if (!array_key_exists("\x52\145\154\141\x79\x53\164\x61\x74\x65", $A9)) {
            goto QW;
        }
        $Wn = htmlspecialchars($A9["\122\145\154\141\x79\x53\x74\141\x74\145"]);
        QW:
        $Mm = base64_decode($Mm);
        if (!(array_key_exists("\123\101\115\x4c\122\145\161\165\145\x73\164", $hJ) && !empty($_GET["\123\101\x4d\114\x52\x65\x71\165\145\163\x74"]))) {
            goto DP;
        }
        $Mm = gzinflate($Mm);
        DP:
        $ph = new DOMDocument();
        $ph->loadXML($Mm);
        $Hg = $ph->firstChild;
        if (!($Hg->localName == "\x4c\157\x67\x6f\165\x74\x52\x65\161\x75\145\x73\x74")) {
            goto A0;
        }
        $F_ = new LogoutRequest($Hg);
        $Tn = $F_->getId();
        $js = $F_->getIssuer();
        $f5 = \Drupal::config("\155\x69\x6e\x69\157\x72\x61\156\147\145\137\163\141\x6d\154\56\163\x65\x74\164\x69\x6e\147\x73");
        $dQ = $f5->get("\x73\x65\x63\x75\x72\x69\x74\171\137\x73\151\147\156\x61\x74\165\162\145\x5f\141\x6c\x67\x6f\162\151\164\150\x6d");
        $FT = $f5->get("\x6d\x69\x6e\151\x6f\162\x61\x6e\x67\145\137\x73\x61\155\x6c\137\151\x64\x70\x5f\x6c\157\147\157\165\x74\x5f\x75\162\x6c");
        if (is_null($FT) || empty($FT)) {
            goto wB;
        }
        $w7 = \Drupal::request();
        $w7->getSession()->clear();
        self::createLogoutResponseAndRedirect($FT, $dQ, $Tn, $Wn);
        $Yq = new RedirectResponse(Utilities::getBaseUrl());
        $Yq->send();
        return new Response();
        goto kS;
        wB:
        return 0;
        kS:
        A0:
        Db:
        return 0;
    }
    public static function createLogoutResponseAndRedirect($FT, $dQ, $Tn, $WY)
    {
        $vL = self::createLogoutResponse($FT, $Tn);
        $ld = self::signXML($vL, Utilities::getPublicCertificate(), Utilities::getPrivateKey(), $dQ, "\x53\x74\141\x74\165\163");
        Utilities::postSAMLRequest($FT, $ld, $WY, TRUE);
    }
    public static function createLogoutResponse($FT, $Tn, $o2 = "\x48\x74\x74\160\120\157\x73\x74")
    {
        $GO = "\x3c\77\170\x6d\154\x20\x76\x65\x72\x73\151\157\156\x3d\42\x31\56\60\x22\x20\x65\x6e\x63\157\x64\151\156\147\x3d\x22\x55\124\106\55\70\42\x3f\76\74\163\x61\x6d\154\x70\72\114\x6f\147\157\x75\x74\122\x65\163\160\157\156\x73\145\x20\170\x6d\x6c\x6e\163\x3a\x73\x61\155\x6c\160\x3d\x22\165\162\x6e\x3a\157\x61\x73\x69\163\72\x6e\141\155\145\x73\72\x74\x63\72\123\101\x4d\x4c\x3a\62\x2e\60\72\x70\162\x6f\164\157\x63\157\x6c\x22\x20\170\x6d\154\156\163\72\x73\x61\155\154\75\x22\x75\x72\156\72\x6f\141\x73\x69\x73\x3a\156\x61\155\145\x73\x3a\x74\x63\72\x53\101\x4d\x4c\72\62\56\60\x3a\x61\163\163\145\162\164\x69\x6f\x6e\42\40\x49\x44\x3d\x22" . self::generateID() . "\x22\x20\126\x65\x72\163\x69\157\x6e\x3d\42\62\56\x30\x22\40\x49\163\x73\165\145\x49\156\x73\x74\x61\156\164\75\42" . self::generateTimestamp() . "\42\x20\104\x65\163\164\x69\156\x61\x74\151\x6f\x6e\75\42" . htmlspecialchars($FT) . "\42\40\x49\x6e\122\x65\163\x70\157\156\x73\x65\x54\157\75\x22" . $Tn . "\x22\x3e\x3c\163\141\x6d\154\72\x49\163\163\165\145\162\x20\170\155\x6c\x6e\163\72\x73\x61\x6d\x6c\x3d\42\165\x72\156\72\157\141\x73\151\163\x3a\x6e\x61\x6d\x65\x73\72\x74\143\x3a\123\x41\115\114\x3a\62\56\60\x3a\x61\163\x73\145\162\164\x69\157\156\x22\x3e" . htmlspecialchars(self::getIssuer()) . "\74\x2f\163\141\155\154\72\x49\x73\163\x75\x65\162\x3e\74\x73\x61\155\154\x70\72\123\164\x61\x74\x75\x73\x3e\74\163\x61\x6d\x6c\x70\72\123\164\141\x74\x75\163\103\157\144\x65\x20\x56\x61\154\165\145\75\x22\165\162\x6e\x3a\x6f\x61\x73\151\x73\x3a\156\x61\x6d\145\163\x3a\164\x63\72\x53\101\115\114\72\62\x2e\60\72\163\164\x61\x74\165\x73\x3a\123\165\143\x63\x65\x73\163\42\57\76\x3c\57\x73\141\155\x6c\x70\72\123\164\x61\x74\x75\163\x3e\x3c\x2f\x73\141\155\154\x70\x3a\x4c\x6f\x67\x6f\165\x74\x52\145\163\x70\157\x6e\x73\x65\x3e";
        if (!(empty($o2) || $o2 == "\x48\164\164\x70\x52\145\x64\x69\x72\x65\143\164")) {
            goto tN;
        }
        $YS = gzdeflate($GO);
        $x7 = base64_encode($YS);
        $L_ = urlencode($x7);
        $GO = $L_;
        tN:
        return $GO;
    }
    public static function mo_add_premium_tag($ZX)
    {
        if (!($ZX == MiniorangeSAMLConstants::PLUGIN_VERSION)) {
            goto vA;
        }
        return '';
        vA:
        global $base_url;
        $sc = $base_url . MiniorangeSAMLConstants::LICENSING_TAB_URL;
        $wY = "\74\141\x20\x68\162\145\x66\75\40\x22" . $sc . "\x22\x20\x73\164\x79\154\x65\x3d\x22\x63\x6f\154\157\162\72\40\x72\x65\x64\73\x20\146\x6f\156\164\x2d\167\145\151\147\150\x74\x3a\x20\154\151\147\x68\x74\145\x72\x3b\x22\x3e\x5b" . $ZX . "\x5d\x3c\x2f\x61\x3e";
        return $wY;
    }
    public static function mo_get_drupal_core_version()
    {
        return \DRUPAL::VERSION;
    }
    public static function mo_add_loggers($U6, $dr, $O_)
    {
        \Drupal::logger("\x6d\151\x6e\151\157\162\141\x6e\x67\145\x5f\x73\141\x6d\x6c")->{$O_}("\x20\103\x4f\104\105\72" . $U6 . "\40\174\40" . $dr);
    }
    public static function moGetModuleType()
    {
        if (!(MiniorangeSAMLConstants::MODULE_TYPE === MiniorangeSAMLConstants::INTERNET_VERSION)) {
            goto Rw;
        }
        return TRUE;
        Rw:
        return FALSE;
    }
    public static function moStoreDomainInDatabase($yQ, $bM = 0)
    {
        global $base_url;
        global $gW;
        $sV = \Drupal::configFactory()->getEditable("\x6d\151\x6e\x69\x6f\x72\x61\x6e\147\145\137\163\x61\x6d\154\x2e\x73\145\x74\164\151\156\x67\x73");
        $Eh = \Drupal::request()->server->get("\x44\x4f\103\125\115\x45\x4e\124\137\x52\x4f\x4f\124") . $gW;
        $XE = trim($base_url, "\x2f");
        if (preg_match("\x23\136\x68\x74\164\x70\50\x73\x29\x3f\72\x2f\x2f\x23", $XE)) {
            goto Z0;
        }
        $XE = "\150\x74\x74\x70\x3a\x2f\x2f" . $XE;
        Z0:
        $tU = parse_url($XE);
        $lW = isset($tU["\x70\141\164\150"]) ? $tU["\x70\141\164\x68"] : '';
        $Ej = preg_replace("\57\x5e\167\x77\167\134\x2e\57", '', $tU["\150\x6f\163\x74"] . $lW);
        $DH = $Eh . $Ej;
        if ($bM == 0) {
            goto QN;
        }
        return $DH;
        goto Cp;
        QN:
        $sV->set("\x6d\x69\156\x6f\162\141\x6e\147\145\137\163\x61\x6d\154\x5f\x63\165\163\x74\157\x6d\145\x72\x5f\141\144\155\151\x6e\x5f\x66\x72\141\x75\144\x5f\x63\x68\x65\x63\153", AESEncryption::encrypt_data($DH, $yQ))->save();
        Cp:
    }
    public static function mo_save_expiry_details($Do)
    {
        $kz = isset($Do["\154\x69\x63\x65\156\x73\145\x45\x78\x70\x69\x72\x79"]) ? date("\x6c\x2c\x20\152\123\40\106\x20\131\40\x67\x3a\151\40\101", strtotime($Do["\154\x69\143\145\156\x73\x65\105\170\x70\x69\x72\171"])) : "\55";
        $V7 = isset($Do["\163\x75\x70\160\157\162\x74\105\x78\160\x69\x72\x79"]) ? date("\154\54\x20\152\123\40\106\40\131\x20\147\x3a\151\40\101", strtotime($Do["\x73\x75\x70\x70\x6f\x72\164\x45\170\x70\151\x72\x79"])) : "\x2d";
        $JL = isset($Do["\154\151\143\145\156\163\x65\x54\171\x70\x65"]) ? $Do["\154\x69\143\x65\156\163\145\124\171\x70\145"] : "\x2d";
        $Uh = isset($Do["\x6c\151\143\x65\x6e\163\145\x50\154\141\x6e"]) ? $Do["\x6c\x69\x63\x65\x6e\x73\x65\x50\154\x61\156"] : "\x2d";
        $sV = \Drupal::configFactory()->getEditable("\155\151\x6e\151\157\162\141\x6e\x67\x65\x5f\163\x61\x6d\154\56\x73\x65\164\164\x69\x6e\147\x73");
        $sV->set("\155\151\x6e\x69\x6f\x72\x61\156\147\x65\137\155\141\151\156\164\145\156\x61\x6e\143\x65\x5f\145\170\160\x69\x72\x79", $kz)->save();
        $sV->set("\155\151\156\151\157\162\141\156\x67\145\x5f\x73\x75\x70\160\x6f\x72\164\x5f\145\170\x70\151\162\171", $V7)->save();
        $sV->set("\x6d\151\x6e\x69\157\162\x61\156\x67\x65\137\154\151\143\145\156\163\145\x5f\x74\x79\160\145", $JL)->save();
        $sV->set("\x6d\x69\156\x69\157\162\x61\x6e\147\145\137\154\151\x63\x65\156\163\145\137\160\154\141\x6e", $Uh)->save();
        $sV->set("\x6d\x69\x6e\x69\x6f\x72\141\x6e\x67\x65\x5f\x73\141\155\154\x5f\151\163\115\x75\154\x74\151\x53\151\x74\x65\x50\x6c\x75\x67\151\x6e\x52\145\161\165\x65\x73\164\145\x64", isset($Do["\x69\163\x4d\165\x6c\x74\x69\123\151\164\x65\x50\154\x75\147\x69\x6e\x52\x65\x71\165\145\x73\164\145\144"]) ? $Do["\x69\x73\x4d\165\154\x74\151\123\x69\164\145\x50\154\165\147\x69\x6e\x52\145\161\165\x65\163\164\x65\x64"] : false)->save();
    }
    public static function getUpgradeURL($pf)
    {
        $ZA = \Drupal::config("\155\x69\156\x69\157\162\141\x6e\147\x65\137\163\x61\155\x6c\56\163\145\x74\164\151\156\x67\163")->get("\155\x69\156\x69\x6f\162\x61\x6e\x67\145\x5f\x73\141\155\154\x5f\x63\165\163\164\157\155\x65\x72\x5f\x61\144\x6d\151\156\x5f\x65\x6d\x61\151\x6c");
        return "\150\164\x74\160\x73\72\x2f\57\x6c\x6f\x67\151\x6e\56\x78\145\x63\165\x72\x69\x66\171\x2e\x63\x6f\x6d\57\155\157\x61\163\57\154\157\147\151\156\77\x75\163\x65\162\x6e\x61\155\145\75" . $ZA . "\46\162\145\144\151\x72\145\x63\x74\125\162\154\x3d\150\164\x74\x70\163\72\57\57\x6c\157\147\x69\156\56\170\145\x63\165\x72\x69\x66\x79\x2e\x63\x6f\x6d\57\155\x6f\141\163\57\x61\x64\x6d\151\x6e\x2f\143\165\163\164\157\x6d\145\x72\57\x6c\151\143\x65\156\x73\x65\x72\x65\x6e\x65\167\x61\154\x73\x3f\162\145\x6e\145\x77\x61\x6c\162\145\x71\x75\x65\x73\164\x3d" . $pf;
    }
    public static function getIsLicenseExpired($rx)
    {
        if (!($rx != null)) {
            goto ju;
        }
        $qz = intval((strtotime($rx) - time()) / (60 * 60 * 24));
        $jU = array();
        $jU["\x4c\x69\x63\x65\x6e\x73\x65\x47\x6f\x69\156\147\124\157\105\170\x70\x69\x72\145"] = $qz < 35 ? TRUE : FALSE;
        $jU["\114\x69\143\145\156\163\x65\x41\154\x72\145\x61\144\171\x45\170\160\151\162\145\x64"] = $qz < 0 ? TRUE : FALSE;
        return $jU;
        ju:
    }
    public static function getRedirectUrAfterLogout($aa)
    {
        $pF = $aa;
        $cy = \Drupal::config("\155\151\x6e\151\x6f\162\x61\x6e\x67\145\137\x73\x61\x6d\154\x2e\x73\x65\164\164\x69\x6e\x67\163")->get("\x6d\x69\x6e\151\x6f\x72\141\156\x67\x65\x5f\x73\x61\x6d\154\137\144\x65\146\x61\x75\x6c\x74\137\x72\x65\x64\151\x72\145\x63\164\137\x75\x72\x6c\137\141\146\164\145\162\x5f\x6c\x6f\147\157\165\x74");
        $cy = isset($cy) ? trim($cy) : '';
        if (empty($cy)) {
            goto aG;
        }
        $pF = trim(\Drupal::config("\x6d\151\x6e\x69\157\x72\x61\156\x67\x65\x5f\x73\x61\155\154\56\163\145\x74\x74\x69\156\x67\163")->get("\155\151\x6e\151\157\x72\x61\x6e\147\x65\137\163\141\x6d\154\x5f\x64\x65\146\141\165\x6c\x74\137\162\145\x64\x69\162\x65\x63\x74\x5f\165\x72\154\137\141\x66\x74\145\162\x5f\154\x6f\x67\x6f\165\164"));
        $pF = parse_url($pF, PHP_URL_HOST) == parse_url($aa, PHP_URL_HOST) ? $pF : $aa . "\x2f" . ltrim($pF, "\134");
        aG:
        return $pF;
    }
    public static function getModulePath()
    {
        return \Drupal::service("\x6d\157\x64\x75\x6c\x65\137\150\141\x6e\144\154\x65\x72")->getModule("\x6d\x69\x6e\x69\157\x72\x61\156\x67\x65\137\163\141\155\x6c")->getPath();
    }
}
