<?php


namespace Drupal\miniorange_saml;

use DOMElement;
use DOMNode;
use DOMXPath;
use DOMDocument;
use Drupal\Core\Render\Markup;
use Drupal\Component\Utility\Xss;
use Drupal\user\Entity\User;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\RedirectResponse;
class Utilities
{
    public static function customUserFields()
    {
        $eA = array('' => "\x53\x65\x6c\145\x63\x74\x20\x41\164\164\162\x69\142\x75\x74\x65\40\x56\141\x6c\x75\x65");
        $xT = User::load(\Drupal::currentUser()->id());
        $Da = $xT->toArray();
        foreach ($Da as $eQ => $yX) {
            if (!(strpos($eQ, "\146\151\145\x6c\x64\137") === 0)) {
                goto H1;
            }
            $eA[$eQ] = $eQ;
            H1:
            AN:
        }
        QQ:
        return $eA;
    }
    static function isMultiple($kI)
    {
        $vw = User::load(\Drupal::currentUser()->id());
        $IU = $vw->get($kI);
        $Sj = $IU->getFieldDefinition()->getFieldStorageDefinition();
        return $Sj->isMultiple();
    }
    public static function isCustomerRegistered(&$form, $form_state, $aT = false)
    {
        global $base_url;
        $bm = $base_url . "\57\141\144\155\x69\156\57\x63\x6f\156\146\151\x67\x2f\x70\x65\157\x70\154\x65\57\x6d\x69\156\151\x6f\162\141\x6e\x67\x65\x5f\163\141\x6d\x6c\x2f\143\165\x73\164\157\x6d\x65\x72\137\x73\x65\x74\x75\x70\57";
        if (\Drupal::config("\155\151\156\151\157\162\x61\x6e\x67\145\x5f\163\141\x6d\x6c\x2e\x73\145\164\x74\x69\x6e\147\x73")->get("\x6d\151\156\x69\157\162\141\156\x67\145\137\163\141\155\154\x5f\143\x75\x73\164\157\x6d\x65\162\137\141\x64\x6d\x69\x6e\x5f\145\155\x61\151\x6c") == NULL || \Drupal::config("\x6d\151\x6e\x69\x6f\x72\x61\x6e\147\x65\137\163\141\x6d\x6c\x2e\163\145\x74\164\151\156\147\x73")->get("\155\x69\x6e\x69\157\162\x61\156\x67\x65\x5f\x73\141\155\x6c\137\143\165\163\164\157\155\x65\162\x5f\x69\x64") == NULL || \Drupal::config("\155\x69\x6e\151\157\162\141\x6e\147\145\x5f\x73\x61\155\x6c\56\163\x65\x74\164\151\156\x67\x73")->get("\155\151\156\151\157\162\141\156\147\x65\x5f\163\x61\155\x6c\137\x63\165\x73\x74\x6f\155\145\162\137\x61\144\155\151\156\x5f\x74\x6f\153\x65\156") == NULL || \Drupal::config("\x6d\x69\156\151\x6f\162\x61\156\147\145\x5f\163\141\x6d\x6c\56\163\145\164\164\x69\x6e\x67\x73")->get("\x6d\x69\156\x69\x6f\x72\x61\x6e\x67\x65\x5f\163\x61\155\x6c\x5f\143\165\x73\164\157\155\x65\162\137\141\x70\151\137\153\145\171") == NULL) {
            goto h2;
        }
        if (\Drupal::config("\155\x69\x6e\151\157\x72\x61\156\147\x65\x5f\163\x61\155\154\56\163\x65\164\x74\x69\x6e\147\163")->get("\x6d\151\x6e\x69\157\x72\x61\x6e\x67\x65\137\163\x61\155\x6c\137\154\x69\x63\145\x6e\x73\x65\137\153\145\x79") == NULL) {
            goto WV;
        }
        return FALSE;
        goto Wi;
        WV:
        $form["\155\141\162\153\165\x70\137\x6d\163\x67"] = array("\43\155\x61\162\153\165\160" => "\x3c\x64\151\x76\40\143\x6c\141\x73\163\x3d\x22\x6d\157\137\x73\141\155\154\137\x72\145\x67\151\x73\164\x65\x72\x5f\x6d\x65\163\163\141\147\145\42\x3e\131\x6f\x75\40\156\145\145\144\40\x74\x6f\40\74\x61\x20\x68\162\x65\x66\75\42" . $bm . "\x22\40\76\166\145\x72\151\x66\171\40\x79\x6f\165\x72\x20\154\151\x63\145\x6e\x73\145\x3c\57\141\x3e\40\153\x65\171\40\x62\x65\x66\x6f\x72\145\x20\165\x73\x69\x6e\x67\x20\164\150\x69\163\40\x6d\157\x64\165\x6c\145\x2e\74\57\144\151\x76\76");
        return TRUE;
        Wi:
        goto NO;
        h2:
        $form["\155\141\x72\153\165\x70\x5f\162\x65\x67\x5f\x6d\x73\147"] = array("\x23\155\141\x72\x6b\x75\x70" => "\74\x64\x69\x76\x20\x63\x6c\x61\x73\163\x3d\x22\155\157\137\163\x61\155\x6c\x5f\162\145\x67\x69\163\164\x65\x72\x5f\x6d\x65\163\163\141\x67\x65\42\x3e\x59\157\x75\40\156\x65\x65\144\40\x74\x6f\x20\74\141\40\x68\162\x65\x66\75\x22" . $bm . "\x22\x20\x3e\154\157\x67\x69\x6e\74\57\x61\76\40\x75\x73\151\156\x67\40\155\151\x6e\x69\117\162\x61\156\x67\145\40\x61\143\x63\157\x75\x6e\164\x20\x62\x65\146\x6f\162\x65\x20\165\163\151\x6e\x67\40\x74\x68\x69\x73\x20\x6d\157\144\x75\x6c\x65\56\74\57\144\x69\x76\x3e");
        return TRUE;
        NO:
    }
    public static function spConfigGuide(array &$form, \Drupal\Core\Form\FormStateInterface $form_state)
    {
        $form["\155\x69\156\151\157\x72\x61\156\147\x65\137\151\x64\x70\137\147\x75\x69\144\x65\x5f\x6c\151\x6e\153\61"] = array("\x23\155\141\162\153\x75\x70" => "\x3c\144\151\166\40\143\154\x61\163\163\75\x22\x6d\x6f\137\163\141\155\154\x5f\164\x61\142\x6c\x65\137\x6c\x61\x79\x6f\165\164\40\155\157\137\x73\141\155\x6c\137\x63\157\x6e\164\141\x69\156\x65\162\137\62\42\40\x69\x64\75\x22\x6d\157\137\x67\x75\151\x64\x65\137\166\164\x22\76\xd\12\x20\x20\x20\40\x20\x20\40\x20\x20\40\40\40\x20\40\40\40\40\x20\x20\x20\x3c\x64\x69\x76\x20\163\164\171\x6c\x65\x3d\42\146\x6f\x6e\164\x2d\163\151\172\x65\72\x20\x31\x35\160\170\73\42\76\124\157\x20\x73\145\x65\40\144\145\164\x61\151\154\145\144\40\144\157\143\x75\x6d\145\x6e\164\x61\164\151\157\156\40\157\146\40\x68\x6f\167\x20\x74\x6f\40\x63\x6f\x6e\146\x69\147\x75\x72\145\40\x44\x72\x75\x70\x61\154\x20\x53\101\115\x4c\x20\123\120\40\167\151\x74\150\40\x61\156\171\x20\x49\144\x65\x6e\164\x69\164\x79\40\120\x72\157\166\151\x64\145\x72\x3c\57\144\x69\166\x3e\74\x2f\x62\162\76");
        $Ri = Markup::create("\x3c\x73\x74\x72\157\x6e\147\x3e\x3c\x61\x20\150\162\x65\x66\75\42\150\164\164\160\x73\72\57\x2f\160\x6c\x75\147\151\x6e\x73\56\x6d\151\156\151\157\x72\141\x6e\x67\145\56\x63\157\x6d\57\144\162\165\160\141\x6c\55\x73\151\156\x67\x6c\x65\x2d\x73\x69\x67\x6e\55\163\163\x6f\x2d\165\163\151\x6e\x67\x2d\x61\x7a\x75\162\x65\55\x61\x64\55\151\144\160\x2f\x22\40\143\x6c\141\163\x73\x3d\x22\x6d\x6f\137\x67\x75\x69\x64\145\137\164\145\x78\x74\x2d\143\x6f\154\157\162\42\40\164\x61\162\147\x65\x74\x3d\42\x5f\x62\x6c\141\156\153\x22\x3e\101\x7a\165\162\145\x20\101\104\74\57\x61\76\x3c\x2f\163\x74\x72\157\x6e\x67\x3e");
        $lF = Markup::create("\x3c\x73\x74\162\157\156\x67\76\x3c\141\40\150\162\x65\x66\x3d\42\x68\164\164\x70\x73\x3a\57\x2f\160\154\x75\x67\151\x6e\163\x2e\155\x69\x6e\x69\x6f\162\x61\x6e\147\145\56\143\157\155\57\x64\x72\x75\160\141\x6c\55\163\151\156\x67\154\145\55\x73\151\147\156\x2d\163\x73\157\x2d\x75\x73\151\156\x67\x2d\141\144\x66\x73\x2d\x69\144\x70\x22\x20\143\x6c\x61\x73\x73\x3d\x22\x6d\157\137\x67\165\x69\x64\x65\x5f\164\145\170\164\55\x63\x6f\x6c\x6f\162\x22\40\x74\x61\162\147\145\x74\75\42\137\142\154\x61\x6e\153\x22\76\101\104\x46\123\74\57\141\76\x3c\57\x73\x74\162\157\x6e\x67\76");
        $sV = Markup::create("\x3c\x73\x74\x72\157\156\147\x3e\74\x61\40\x63\x6c\x61\163\163\x3d\x22\155\157\137\147\165\151\x64\145\137\164\x65\x78\x74\x2d\143\x6f\x6c\157\x72\x22\40\x68\x72\145\x66\75\x22\x68\x74\164\160\x73\x3a\57\x2f\160\154\165\147\151\x6e\x73\56\155\x69\156\x69\x6f\x72\141\x6e\147\x65\x2e\143\157\x6d\x2f\144\162\165\x70\141\154\x2d\x73\151\x6e\x67\x6c\x65\55\163\x69\147\156\x2d\x73\x73\157\55\x75\163\151\x6e\x67\x2d\x6f\x6b\164\x61\55\151\144\160\x2f\42\40\164\x61\x72\147\145\x74\75\42\x5f\142\154\141\x6e\153\42\x3e\117\x6b\164\x61\74\57\x61\76\74\57\163\164\162\157\156\147\x3e");
        $vz = Markup::create("\x3c\x73\x74\162\x6f\x6e\147\76\74\x61\40\x68\162\145\146\75\42\150\164\x74\160\x73\x3a\x2f\x2f\x70\154\x75\x67\x69\156\x73\x2e\155\x69\156\x69\157\x72\141\156\x67\145\56\143\x6f\x6d\57\x64\x72\165\x70\141\154\x2d\163\x69\156\x67\x6c\145\55\163\151\147\x6e\55\x73\x73\x6f\55\x75\163\x69\156\x67\x2d\x67\157\x6f\147\154\x65\55\141\160\160\163\55\x69\x64\x70\x2f\42\x20\x63\x6c\141\163\163\75\42\x6d\x6f\x5f\x67\x75\x69\x64\x65\x5f\x74\x65\170\x74\x2d\143\x6f\x6c\157\162\x22\40\164\x61\x72\x67\x65\164\75\x22\x5f\x62\154\x61\x6e\x6b\42\76\x47\x6f\x6f\x67\x6c\x65\x20\101\x70\x70\163\x3c\57\x61\76\74\x2f\163\x74\162\x6f\156\x67\76");
        $sz = Markup::create("\74\x73\164\162\x6f\156\x67\76\x3c\x61\x20\150\162\x65\146\75\x22\150\x74\164\160\163\x3a\x2f\x2f\x70\x6c\165\x67\151\156\163\x2e\155\x69\156\x69\157\162\x61\x6e\147\145\x2e\x63\x6f\155\57\x64\x72\x75\x70\141\154\55\x73\151\156\x67\x6c\145\x2d\163\151\x67\x6e\55\x73\x73\157\55\165\163\151\156\147\55\163\x61\154\145\x73\x66\157\x72\143\145\x2d\151\x64\160\x2f\42\40\143\154\x61\x73\163\x3d\x22\155\x6f\137\x67\x75\x69\x64\145\x5f\x74\x65\x78\x74\x2d\143\157\154\157\x72\42\x20\164\x61\x72\147\x65\x74\x3d\42\137\142\154\x61\x6e\x6b\42\76\x53\141\154\145\x73\x66\x6f\162\x63\x65\74\x2f\x61\76\74\x2f\x73\x74\x72\x6f\x6e\147\x3e");
        $X5 = Markup::create("\x3c\x73\164\162\x6f\x6e\x67\x3e\74\141\40\x63\154\x61\163\163\75\x22\x6d\157\137\147\165\151\x64\145\x5f\164\x65\170\x74\55\x63\x6f\154\157\162\42\x20\x68\x72\145\146\x3d\42\x68\x74\x74\160\163\72\57\x2f\x70\x6c\x75\x67\151\156\163\x2e\x6d\151\x6e\x69\157\162\141\156\x67\145\x2e\143\157\x6d\57\144\162\165\160\x61\x6c\55\x73\x69\156\147\154\x65\x2d\163\x69\x67\156\55\x73\163\157\x2d\x75\x73\151\156\x67\x2d\x6d\x69\x6e\x69\157\x72\141\x6e\x67\145\x2d\151\144\x70\57\42\40\164\x61\x72\x67\145\164\x3d\42\x5f\x62\154\x61\x6e\153\x22\76\x6d\x69\x6e\151\117\x72\141\156\147\x65\x3c\57\141\76\x3c\57\163\x74\x72\157\156\147\x3e");
        $pJ = Markup::create("\74\163\x74\x72\x6f\156\147\x3e\74\141\40\x63\x6c\141\163\163\x3d\x22\x6d\x6f\137\x67\165\151\x64\145\137\164\145\x78\x74\x2d\143\157\x6c\x6f\162\42\x20\150\x72\145\146\75\42\150\164\x74\160\163\x3a\57\x2f\x70\x6c\x75\147\151\156\163\56\x6d\x69\156\151\x6f\x72\x61\156\147\145\x2e\x63\x6f\155\x2f\147\165\x69\144\145\x2d\x66\157\x72\55\144\162\165\160\141\x6c\55\x73\x69\156\147\154\145\55\163\x69\x67\156\x2d\157\156\x2d\x75\163\x69\x6e\147\x2d\160\x69\x6e\147\157\156\145\55\141\163\55\x69\144\145\x6e\x74\151\x74\x79\55\x70\x72\x6f\166\x69\x64\x65\162\x22\40\164\x61\x72\147\145\164\75\x22\x5f\142\154\x61\x6e\x6b\42\x3e\120\151\156\147\x4f\x6e\145\x3c\x2f\141\x3e\74\x2f\163\x74\162\157\156\147\76");
        $kU = Markup::create("\x3c\163\164\x72\x6f\156\147\x3e\x3c\141\x20\150\162\x65\x66\x3d\42\150\x74\164\x70\163\x3a\57\57\x70\x6c\165\x67\151\156\x73\56\155\x69\x6e\151\157\162\141\156\x67\145\x2e\x63\x6f\x6d\57\144\x72\165\x70\141\154\x2d\163\x69\156\147\154\145\x2d\163\x69\147\156\x2d\x73\163\157\x2d\165\163\151\156\147\55\x6f\156\145\154\x6f\147\x69\156\55\x69\x64\160\x2f\x22\40\x63\154\x61\163\x73\75\42\155\x6f\137\x67\x75\x69\x64\x65\x5f\164\145\170\164\55\x63\157\x6c\157\x72\42\40\164\141\162\x67\x65\164\x3d\42\137\142\x6c\x61\x6e\153\42\x3e\x4f\x6e\145\154\x6f\147\151\x6e\74\x2f\x61\x3e\74\57\x73\164\x72\157\x6e\147\76");
        $y6 = Markup::create("\x3c\x73\x74\162\x6f\x6e\x67\x3e\74\x61\40\150\x72\x65\146\x3d\42\x68\x74\x74\160\x73\x3a\57\57\x70\x6c\x75\147\151\x6e\163\56\155\x69\x6e\x69\x6f\x72\141\156\147\x65\x2e\x63\x6f\x6d\57\144\x72\165\160\x61\154\x2d\x73\x69\156\147\x6c\145\x2d\163\151\147\156\x2d\x73\163\157\x2d\x75\163\x69\156\147\55\x62\x69\164\151\x75\x6d\55\x69\144\x70\x22\x20\x63\154\x61\163\x73\75\x22\155\157\137\x67\x75\151\144\x65\x5f\164\145\x78\x74\x2d\x63\157\154\157\x72\42\40\164\x61\162\147\145\x74\x3d\x22\x5f\x62\x6c\141\156\x6b\x22\76\x42\151\164\x69\165\155\x3c\x2f\141\76\74\57\x73\164\x72\157\x6e\x67\76");
        $ux = Markup::create("\x3c\163\164\162\157\156\147\76\74\141\40\150\x72\145\x66\x3d\x22\150\x74\x74\x70\x73\72\x2f\57\160\154\165\147\151\x6e\163\56\155\x69\x6e\151\x6f\x72\x61\x6e\147\145\x2e\143\x6f\x6d\x2f\x64\x72\x75\160\x61\154\55\163\151\x6e\x67\154\145\x2d\163\151\x67\156\55\x73\163\x6f\x2d\x75\163\151\x6e\147\55\143\145\156\x74\x72\x69\x66\171\x2d\x69\x64\x70\57\x22\40\x63\x6c\141\x73\x73\x3d\x22\x6d\157\x5f\147\165\151\144\145\x5f\164\145\170\164\x2d\x63\x6f\154\157\162\42\x20\x74\141\x72\x67\145\x74\x3d\x22\137\x62\154\x61\x6e\x6b\x22\x3e\x43\145\156\164\x72\x69\146\x79\74\x2f\x61\76\74\57\x73\164\x72\x6f\x6e\x67\x3e");
        $oH = Markup::create("\x3c\x73\164\162\x6f\156\147\x3e\74\x61\40\150\x72\145\146\75\x22\x68\x74\164\160\163\x3a\x2f\x2f\x70\154\x75\147\151\156\163\56\x6d\151\156\151\x6f\162\141\156\147\145\x2e\143\x6f\155\57\147\165\x69\144\x65\x2d\164\x6f\x2d\143\x6f\x6e\x66\151\147\x75\x72\x65\x2d\x6f\162\x61\x63\154\x65\x2d\141\143\143\145\163\x73\x2d\x6d\141\156\141\x67\145\162\55\141\x73\x2d\x69\144\160\x2d\141\156\x64\55\144\x72\165\x70\141\x6c\x2d\x61\163\x2d\x73\160\x22\40\143\x6c\141\x73\x73\75\x22\155\x6f\x5f\x67\x75\x69\x64\145\x5f\x74\x65\x78\x74\x2d\x63\157\154\x6f\162\42\40\x74\141\x72\x67\145\x74\75\42\x5f\142\x6c\141\156\153\42\76\117\x72\141\x63\x6c\x65\x3c\57\x61\76\74\57\163\x74\162\157\156\147\x3e");
        $eo = Markup::create("\74\163\164\x72\157\x6e\x67\76\x3c\141\x20\x68\162\145\146\x3d\x22\x68\164\x74\160\x73\x3a\57\x2f\160\x6c\165\x67\151\156\x73\56\x6d\x69\156\151\157\x72\141\156\x67\x65\56\143\x6f\x6d\x2f\x64\162\x75\160\x61\x6c\55\163\151\x6e\147\x6c\145\x2d\x73\x69\147\156\55\157\x6e\x2d\163\x73\157\x2d\x75\x73\x69\156\x67\x2d\152\x62\x6f\x73\x73\55\153\x65\x79\143\154\x6f\141\x6b\x2d\141\x73\x2d\x69\x64\x70\42\x20\143\154\141\x73\x73\75\42\x6d\x6f\x5f\x67\x75\x69\144\145\x5f\x74\x65\170\x74\x2d\143\x6f\x6c\157\x72\x22\40\x74\x61\162\147\145\164\75\x22\x5f\x62\154\141\156\x6b\x22\x3e\x4a\142\x6f\x73\x73\x20\x4b\x65\171\143\x6c\157\141\x6b\x3c\x2f\141\76\x3c\x2f\x73\164\162\157\x6e\147\x3e");
        $pp = Markup::create("\x3c\x73\164\x72\157\156\147\76\74\x61\x20\150\162\145\x66\75\42\x68\164\x74\160\163\72\x2f\x2f\x70\154\x75\x67\x69\x6e\x73\x2e\x6d\151\156\151\x6f\162\x61\x6e\x67\x65\x2e\x63\x6f\155\x2f\x67\165\151\x64\x65\55\x66\157\x72\55\160\x69\156\147\x66\x65\144\x65\162\141\164\x65\x2d\141\163\55\x69\144\160\55\x77\x69\x74\150\x2d\144\162\165\160\141\154\x22\x20\x63\x6c\141\x73\163\x3d\x22\x6d\x6f\137\x67\165\151\x64\145\x5f\164\145\x78\x74\55\143\x6f\154\x6f\162\x22\x20\164\141\162\x67\x65\164\x3d\x22\x5f\142\154\141\x6e\x6b\x22\76\x50\151\x6e\x67\40\x46\145\144\145\x72\141\164\145\x3c\57\x61\76\x3c\57\x73\164\x72\157\x6e\x67\76");
        $rb = Markup::create("\74\163\x74\x72\157\x6e\147\x3e\x3c\141\40\x68\162\x65\146\x3d\x22\x68\x74\x74\x70\x73\72\57\57\x70\154\x75\x67\x69\156\163\56\155\x69\156\151\x6f\x72\x61\156\147\x65\x2e\143\157\155\x2f\147\165\x69\144\145\x2d\x66\x6f\162\x2d\x6f\x70\145\156\x61\x6d\x2d\x61\x73\55\151\x64\160\x2d\167\x69\164\x68\55\x64\162\x75\x70\141\154\42\x20\143\x6c\141\x73\x73\75\42\x6d\x6f\137\147\165\151\x64\145\137\164\145\170\164\55\x63\157\154\x6f\x72\42\40\164\x61\162\147\145\x74\x3d\x22\137\x62\154\141\x6e\153\x22\76\x4f\160\x65\x6e\x41\x4d\x3c\x2f\141\76\x3c\57\163\x74\x72\x6f\156\x67\76");
        $Ly = Markup::create("\74\x73\x74\162\x6f\x6e\147\x3e\x3c\x61\x20\150\162\x65\146\75\x22\150\x74\164\x70\x73\x3a\x2f\x2f\x70\x6c\x75\147\151\156\163\56\x6d\151\156\x69\157\162\x61\x6e\147\x65\56\143\x6f\x6d\x2f\x64\162\165\x70\x61\x6c\55\163\x69\x6e\147\154\x65\x2d\x73\151\x67\156\55\157\156\x2d\163\x73\x6f\55\x75\163\x69\156\147\x2d\x61\165\x74\150\x61\x6e\166\x69\x6c\x2d\141\x73\55\x69\144\160\x22\40\x63\x6c\141\163\163\75\42\155\x6f\x5f\x67\165\x69\x64\145\x5f\x74\x65\170\x74\55\143\x6f\154\157\x72\x22\x20\164\x61\x72\x67\145\164\x3d\x22\x5f\x62\x6c\x61\156\x6b\42\76\x41\165\164\150\101\156\x76\151\154\x3c\57\x61\x3e\x3c\x2f\x73\164\162\x6f\x6e\x67\76");
        $B1 = Markup::create("\x3c\163\x74\x72\x6f\x6e\x67\x3e\74\x61\x20\150\x72\x65\x66\x3d\42\x68\164\164\160\x73\72\57\57\160\154\x75\147\x69\x6e\x73\56\x6d\x69\x6e\151\157\162\141\156\x67\145\56\x63\157\x6d\57\147\x75\x69\144\x65\55\146\157\162\55\141\165\x74\150\60\55\141\x73\x2d\151\x64\160\55\167\151\164\x68\x2d\144\162\x75\x70\x61\x6c\x22\40\143\x6c\141\163\x73\x3d\x22\x6d\157\x5f\147\x75\151\x64\x65\x5f\164\x65\x78\x74\55\x63\x6f\x6c\x6f\162\x22\40\x74\x61\x72\x67\x65\x74\x3d\x22\x5f\142\154\x61\156\153\x22\x3e\141\165\x74\x68\60\74\x2f\x61\76\x3c\x2f\163\164\162\157\156\147\76");
        $Cn = Markup::create("\74\x73\x74\x72\x6f\x6e\x67\x3e\74\141\x20\150\x72\145\146\x3d\x22\150\164\x74\x70\163\x3a\57\57\160\154\165\x67\151\x6e\163\56\155\x69\156\151\157\162\x61\x6e\147\145\x2e\143\157\155\x2f\x67\165\x69\x64\x65\55\146\157\162\55\144\162\165\160\141\x6c\x2d\x73\151\x6e\x67\154\145\55\x73\151\x67\156\x2d\x6f\x6e\55\x73\163\x6f\55\165\163\151\156\x67\55\x72\x73\141\x2d\163\x65\x63\165\x72\151\144\x2d\x61\163\x2d\151\144\160\42\x20\143\x6c\x61\x73\163\x3d\42\x6d\x6f\137\147\x75\x69\144\145\x5f\x74\145\x78\164\55\143\157\154\157\x72\x22\40\164\x61\x72\147\145\164\x3d\42\137\x62\x6c\x61\x6e\153\x22\x3e\x52\x53\101\x20\123\145\143\165\162\111\104\x3c\57\141\76\74\57\163\164\162\157\156\x67\x3e");
        $Mu = Markup::create("\x3c\163\164\x72\157\x6e\147\76\74\141\x20\150\162\x65\x66\x3d\42\150\164\x74\x70\163\72\x2f\57\160\154\165\x67\151\156\163\56\x6d\x69\156\x69\157\162\141\x6e\x67\145\x2e\143\x6f\x6d\x2f\143\157\156\146\151\x67\165\162\145\x2d\x64\x72\x75\x70\x61\x6c\x2d\x73\141\x6d\x6c\x2d\163\x69\156\x67\154\x65\x2d\x73\151\x67\x6e\x2d\157\x6e\x22\x20\143\154\x61\163\163\x3d\42\x6d\x6f\x5f\x67\x75\x69\144\145\x5f\164\x65\x78\164\x2d\143\x6f\x6c\x6f\162\x22\x20\x74\x61\162\x67\x65\x74\x3d\x22\x5f\142\x6c\141\156\153\x22\x3e\x4f\164\x68\145\162\40\111\x44\x50\x3c\57\x61\x3e\x3c\x2f\163\164\162\157\x6e\x67\76");
        $Eo = array(array($Ri, $lF), array($sV, $vz), array($sz, $kU), array($oH, $eo), array($ux, $pJ), array($pp, $rb), array($Ly, $B1), array($X5, $Cn), array($Mu));
        $Nf = array(array("\144\x61\164\x61" => t("\111\144\145\x6e\x74\x69\164\x79\x20\120\162\x6f\x76\151\x64\145\x72\x20\x53\145\164\165\x70\x20\107\165\x69\x64\145\163"), "\143\157\154\163\160\141\156" => 2));
        $form["\x6d\157\144\165\x6c\145\163"] = array("\x23\x74\171\x70\x65" => "\x74\x61\x62\154\x65", "\x23\x68\145\x61\144\x65\x72" => $Nf, "\43\162\x6f\167\163" => $Eo, "\x23\x72\145\x73\160\157\x6e\163\151\166\145" => TRUE);
        self::faq($form, $form_state);
        $form["\155\151\x6e\x69\157\162\141\x6e\147\x65\x5f\163\x70\x5f\x67\165\151\x64\145\x5f\x6c\x69\x6e\153\x5f\145\156\x64"] = array("\43\155\141\x72\x6b\165\160" => "\x3c\x2f\x64\151\166\x3e");
    }
    public static function faq(&$form, &$form_state)
    {
        $form["\x6d\x69\x6e\x69\157\162\x61\x6e\x67\145\137\x66\141\161"] = array("\x23\155\x61\162\x6b\165\160" => "\x3c\x64\x69\x76\40\143\154\x61\x73\163\75\42\155\157\x5f\163\x61\x6d\x6c\x5f\x74\x65\x78\x74\137\x63\x65\156\164\x65\162\42\x3e\x3c\x62\x3e\74\57\142\76\15\12\x20\40\x20\40\40\x20\40\x20\40\x20\40\x20\x20\x20\x20\40\40\x20\x20\x20\40\40\x20\x20\40\x20\x3c\x61\x20\143\154\x61\163\x73\x3d\x22\x6d\x6f\x5f\163\141\x6d\154\x5f\142\x74\x6e\x20\155\157\x5f\x73\141\x6d\x6c\x5f\142\x74\156\x2d\160\x72\x69\x6d\x61\162\171\55\x66\141\x71\40\x6d\x6f\x5f\x73\141\155\x6c\x5f\142\x74\x6e\55\154\x61\x72\x67\x65\40\155\157\x5f\x66\141\161\x5f\x62\165\164\164\x6f\x6e\137\154\x65\146\x74\42\x20\x68\162\145\146\75\42\x68\x74\164\x70\163\x3a\57\57\146\x61\x71\56\155\x69\156\x69\157\162\141\156\147\145\x2e\143\x6f\155\57\153\142\x2f\x64\x72\x75\160\141\154\57\163\x61\155\154\55\x64\162\165\x70\141\154\x2f\42\x20\x74\141\162\147\145\164\75\x22\x5f\142\x6c\x61\156\153\x22\76\x46\x41\x51\163\x3c\x2f\x61\76\15\12\x20\40\x20\40\40\40\x20\x20\x20\40\x20\x20\40\40\40\x20\40\40\40\x20\x20\40\40\40\40\40\x3c\142\76\74\57\x62\76\74\x61\40\x63\154\x61\163\x73\75\42\155\157\x5f\x73\141\155\154\137\x62\164\x6e\x20\155\157\x5f\x73\x61\x6d\x6c\137\x62\164\156\x2d\x70\162\x69\155\x61\162\171\55\x66\141\161\40\x6d\x6f\x5f\x73\141\x6d\x6c\137\142\164\x6e\x2d\154\141\162\147\x65\x20\x6d\x6f\x5f\146\x61\161\x5f\142\165\x74\x74\157\156\137\x72\151\x67\x68\164\x22\x20\x68\x72\x65\x66\75\x22\x68\x74\x74\160\163\x3a\57\57\x66\x6f\162\165\x6d\56\155\x69\x6e\x69\157\x72\141\x6e\x67\145\56\143\x6f\155\x2f\x22\40\x74\x61\x72\147\145\164\75\x22\x5f\x62\x6c\x61\156\153\42\76\x41\x73\153\40\x71\165\x65\x73\x74\151\x6f\x6e\163\40\157\156\x20\146\x6f\162\x75\x6d\74\x2f\x61\76\x3c\x2f\x64\151\166\76");
    }
    public static function send_support_query($S_, $vT, $bD, $XE)
    {
        $B0 = new MiniorangeSamlSupport($S_, $vT, $bD, $XE);
        $qk = $B0->sendSupportQuery();
        if ($qk) {
            goto ws;
        }
        \Drupal::messenger()->addMessage(t("\105\x72\x72\157\x72\40\163\165\x62\x6d\x69\164\164\151\156\x67\40\x74\x68\145\x20\x73\165\160\x70\157\162\164\x20\161\165\145\x72\x79\56\40\120\x6c\145\x61\x73\x65\40\x73\x65\x6e\144\40\165\163\40\x79\157\165\162\40\161\165\145\162\x79\40\x61\164\x20\x3c\x61\40\x68\162\145\146\x3d\x22\155\x61\x69\x6c\x74\x6f\72\151\x6e\x66\157\x40\170\145\x63\x75\162\151\x66\171\x2e\x63\157\x6d\42\76\x69\x6e\146\157\x40\x78\x65\x63\x75\162\151\146\171\56\143\x6f\x6d\x3c\57\x61\76\56"), "\145\162\x72\157\x72");
        goto vn;
        ws:
        \Drupal::messenger()->addMessage(t("\x54\x68\x61\156\x6b\x73\40\x66\x6f\162\40\147\145\x74\x74\x69\156\x67\x20\x69\x6e\x20\x74\157\165\x63\x68\x21\40\127\145\x20\x77\151\x6c\154\x20\x67\145\164\40\x62\141\x63\153\40\164\157\40\x79\157\x75\40\163\x68\x6f\162\164\x6c\x79\56"));
        vn:
    }
    public static function getClassNameForImport_Export()
    {
        $X6 = array("\x49\144\x65\156\x74\x69\x74\171\x5f\120\162\x6f\x76\x69\x64\145\162" => "\x6d\157\137\x6f\x70\x74\151\157\156\x73\137\145\156\x75\155\137\x69\x64\x65\x6e\164\151\x74\x79\x5f\x70\x72\157\166\x69\144\x65\x72", "\123\x65\x72\x76\x69\143\x65\x5f\120\162\x6f\x76\x69\x64\145\162" => "\x6d\x6f\137\157\160\164\151\x6f\x6e\x73\x5f\145\156\165\x6d\137\163\x65\x72\166\151\x63\145\x5f\x70\x72\x6f\166\151\x64\x65\162", "\123\x69\147\x6e\151\156\137\123\x65\x74\164\151\x6e\147\x73" => "\155\x6f\x5f\x6f\160\164\151\x6f\x6e\x73\137\145\156\x75\x6d\137\x73\x69\x67\x6e\151\x6e\137\163\x65\164\x74\151\x6e\x67\163", "\115\141\160\x70\151\156\147" => "\x6d\157\x5f\157\x70\164\151\x6f\x6e\x73\x5f\x65\156\x75\155\137\x6d\141\x70\160\151\x6e\x67", "\103\165\163\x74\x6f\x6d\137\x43\145\x72\x74\x69\146\x69\x63\x61\164\145" => "\x6d\157\137\x6f\160\164\x69\157\156\137\145\156\165\x6d\x5f\143\x75\163\x74\157\155\137\143\x65\162\x74\151\146\x69\143\141\x74\145");
        return $X6;
    }
    public static function getVariableArrayForImport_Export($CS)
    {
        if ($CS == "\x6d\x6f\137\157\x70\x74\151\x6f\x6e\x73\137\x65\x6e\x75\x6d\137\151\144\x65\156\x74\x69\164\x79\x5f\160\x72\157\x76\x69\x64\145\162") {
            goto yv;
        }
        if ($CS == "\155\157\137\x6f\160\164\x69\157\156\163\137\145\x6e\x75\155\137\x73\145\x72\166\151\143\x65\x5f\x70\x72\x6f\x76\x69\x64\145\x72") {
            goto Ut;
        }
        if ($CS == "\155\x6f\x5f\157\160\164\151\157\156\x73\137\x65\156\165\155\x5f\x73\x69\x67\x6e\151\x6e\x5f\x73\145\164\x74\x69\x6e\x67\x73") {
            goto jz;
        }
        if ($CS == "\x6d\x6f\137\157\160\164\x69\157\x6e\163\137\x65\x6e\165\155\137\x6d\x61\x70\160\x69\156\x67") {
            goto lH;
        }
        if (!($CS == "\x6d\x6f\137\157\x70\x74\151\x6f\x6e\x5f\145\156\165\x6d\x5f\x63\165\163\x74\157\x6d\137\x63\x65\162\164\x69\146\151\143\141\x74\145")) {
            goto cE;
        }
        $Xg = array("\103\165\163\164\157\155\x5f\x70\x72\x69\x76\x61\164\145\137\x63\145\x72\x74\151\146\151\143\x61\164\145" => "\155\x69\x6e\151\x6f\x72\141\156\147\145\x5f\x73\x61\155\x6c\x5f\x70\x72\x69\x76\x61\x74\x65\x5f\143\x65\x72\x74\151\146\151\143\x61\x74\145", "\x43\165\x73\x74\x6f\x6d\137\x70\165\x62\154\151\143\137\x63\x65\162\164\x69\x66\151\x63\141\164\x65" => "\x6d\x69\x6e\151\157\x72\141\156\x67\145\x5f\x73\x61\155\154\137\160\x75\x62\x6c\x5f\x63\145\162\x74\151\x66\x69\143\141\164\145");
        cE:
        goto a4;
        lH:
        $Xg = array("\x43\162\x65\x61\x74\145\x5f\162\x65\x67\x69\163\x74\145\162\x5f\141\x63\x63\157\165\156\x74\x5f\x62\171" => "\x6d\151\156\151\x6f\162\141\x6e\x67\145\x5f\x73\x61\x6d\x6c\x5f\154\157\147\151\x6e\137\x62\171", "\x55\x73\x65\162\156\x61\x6d\x65\x5f\x61\x74\x74\x72\151\142\x75\164\x65" => "\x6d\x69\x6e\151\x6f\x72\141\x6e\x67\x65\x5f\x73\141\155\x6c\x5f\x75\163\145\162\x6e\x61\x6d\145\x5f\141\x74\x74\x72\151\x62\x75\164\x65", "\x45\155\x61\151\154\137\x61\141\x74\x72\x69\142\x75\x74\145" => "\x6d\x69\x6e\x69\157\162\141\156\x67\145\137\163\141\x6d\154\x5f\145\155\x61\x69\x6c\x5f\141\164\164\x72\x69\142\x75\x74\145", "\x52\157\x6c\145" => "\155\x69\156\151\x6f\162\x61\156\147\x65\x5f\x73\141\155\x6c\x5f\x72\x6f\x6c\x65\x5f\x61\164\x74\x72\x5f\x6e\x61\x6d\145", "\105\x6e\141\x62\x6c\145\x5f\x52\157\154\x65\137\155\x61\141\160\151\156\147" => "\x6d\x69\156\151\x6f\162\141\x6e\x67\145\x5f\x73\x61\155\x6c\137\x65\156\x61\x62\154\x65\x5f\x72\157\x6c\145\x6d\141\x70\x70\x69\156\x67", "\104\157\x6e\x74\x5f\x75\x70\x64\141\x74\145\x5f\x75\163\x65\x72\x5f\x72\x6f\154\145\x73" => "\x6d\151\156\151\157\162\141\156\x67\x65\x5f\x73\141\155\154\137\144\x69\163\141\142\x6c\x65\137\162\x6f\154\145\x5f\165\x70\144\141\x74\145", "\104\145\146\x61\x75\154\164\x5f\x67\162\x6f\165\160\137\x66\157\162\x5f\156\145\167\137\x75\x73\145\x72\x73" => "\x6d\151\x6e\151\157\162\141\x6e\x67\145\137\x73\141\x6d\x6c\137\x64\x65\x66\141\165\x6c\x74\x5f\162\x6f\x6c\145", "\x61\x74\x74\x72\137\155\x61\160" => "\155\x69\x6e\151\x6f\x72\x61\x6e\147\145\x5f\163\x61\x6d\x6c\x5f\143\x75\163\x74\157\x6d\x5f\141\164\x74\x72\x73\137\155\x61\160\x5f\x61\162\x72", "\162\157\154\145\x5f\155\x61\x70" => "\155\151\x6e\151\157\162\x61\156\x67\145\x5f\163\x61\x6d\154\x5f\162\157\x6c\145\x5f\x6d\x61\160\x70\151\x6e\x67\137\141\x72\x72");
        a4:
        goto sq;
        jz:
        $Xg = array("\x41\165\x74\157\137\x63\164\x65\x61\164\151\x6f\156\x5f\x75\163\145\162" => "\x6d\151\x6e\x69\157\x72\141\156\x67\x65\137\163\x61\x6d\x6c\137\144\x69\x73\x61\142\x6c\x65\x5f\x61\165\164\x6f\x63\x72\x65\x61\164\x65\137\165\163\x65\x72\163", "\x50\162\157\164\145\x63\x74\x5f\x77\x68\157\154\145\x5f\x73\x69\x74\145" => "\x6d\151\x6e\151\x6f\162\141\x6e\x67\x65\137\163\x61\155\154\x5f\146\x6f\x72\143\145\x5f\141\165\164\150", "\x41\x75\x74\157\137\x72\x65\x64\x69\162\145\143\164" => "\x6d\151\156\x69\157\x72\x61\156\x67\x65\137\x73\141\155\x6c\x5f\x61\165\164\x6f\x5f\162\145\x64\x69\162\145\143\164\137\164\x6f\x5f\151\144\160", "\102\x61\143\x6b\144\x6f\x6f\162\x5f\114\157\147\x69\156" => "\155\151\x6e\x69\157\162\x61\156\x67\145\x5f\163\141\x6d\154\x5f\145\x6e\x61\142\x6c\x65\x5f\142\141\x63\x6b\144\x6f\157\x72", "\x44\x65\x66\x61\x75\x6c\164\137\x72\x65\x64\x69\162\145\143\164\x5f\x55\122\x4c" => "\x6d\x69\x6e\x69\157\x72\141\x6e\x67\x65\137\163\x61\155\x6c\x5f\144\x65\x66\141\x75\x6c\164\x5f\162\145\x6c\x61\x79\163\164\141\x74\145");
        sq:
        goto Y7;
        Ut:
        $Xg = array("\111\144\145\156\x74\151\164\x79\x5f\x6e\141\x6d\x65" => "\155\151\x6e\151\157\x72\141\156\147\145\137\x73\x61\x6d\x6c\137\151\144\160\137\x6e\141\155\x65", "\111\163\163\x75\x65\162" => "\155\151\156\151\x6f\162\x61\156\147\x65\x5f\163\x61\155\154\x5f\x69\x64\x70\x5f\x69\x73\163\165\145\x72", "\x4e\141\155\145\x5f\x49\104\x5f\x66\x6f\162\155\141\164" => "\155\x69\x6e\151\157\x72\x61\156\147\145\137\163\141\x6d\154\137\156\141\x6d\145\x69\144\137\146\157\x72\155\x61\x74", "\x68\x74\164\x70\x5f\x62\x69\x6e\144\151\156\147" => "\155\151\x6e\x69\157\x72\x61\x6e\147\x65\x5f\163\141\x6d\154\137\x68\x74\164\x70\137\x62\151\x6e\144\x69\x6e\147", "\114\157\x67\151\156\x5f\x55\122\114" => "\155\151\156\x69\x6f\162\141\156\x67\145\137\163\141\155\154\x5f\x69\144\x70\137\x6c\x6f\x67\151\156\x5f\165\x72\154", "\114\x6f\x67\x6f\x75\x74\137\x55\x52\x4c" => "\x6d\151\156\151\x6f\162\141\156\x67\145\x5f\163\141\155\154\x5f\151\x64\160\137\x6c\x6f\x67\157\165\x74\x5f\165\x72\154", "\130\x35\60\x39\137\143\145\x72\164\151\146\x69\143\x61\x74\145" => "\155\x69\156\x69\157\x72\141\156\x67\x65\x5f\x73\141\x6d\x6c\137\151\144\x70\137\x63\145\x72\x74\151\146\151\143\141\x74\x65", "\x53\x69\x67\156\137\x72\x65\x71\165\145\163\164" => "\155\151\156\151\157\162\141\156\x67\x65\137\x73\x61\x6d\154\x5f\162\x65\161\165\145\x73\164\137\163\x69\147\156\145\x64", "\105\156\x61\142\154\x65\x5f\x6c\x6f\147\x69\156\x5f\167\151\x74\x68\137\123\101\115\x4c" => "\x6d\x69\156\151\157\162\141\156\x67\145\137\x73\x61\155\154\x5f\x65\156\141\x62\154\145\x5f\154\157\x67\151\156");
        Y7:
        goto yu;
        yv:
        $Xg = array("\123\x50\137\x42\141\163\145\137\125\x72\154" => "\x6d\x69\x6e\151\x6f\x72\x61\156\147\145\137\163\141\x6d\x6c\137\142\141\x73\145", "\123\120\137\105\156\164\x69\x74\x79\x5f\x49\104" => "\155\151\x6e\151\157\162\141\156\147\145\x5f\x73\141\x6d\x6c\x5f\x65\156\164\x69\x74\171\137\151\144");
        yu:
        return $Xg;
    }
    public static function isCurlInstalled()
    {
        if (in_array("\143\165\x72\154", get_loaded_extensions())) {
            goto Pj;
        }
        return 0;
        goto dY;
        Pj:
        return 1;
        dY:
    }
    public static function generateID()
    {
        return "\137" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($fU)
    {
        $Br = '';
        $mp = 0;
        KS:
        if (!($mp < strlen($fU))) {
            goto zd;
        }
        $Br .= sprintf("\45\x30\x32\170", ord($fU[$mp]));
        x4:
        $mp++;
        goto KS;
        zd:
        return $Br;
    }
    public static function generateRandomBytes($xf, $LQ = TRUE)
    {
        return openssl_random_pseudo_bytes($xf);
    }
    public static function insertSignature(XMLSecurityKey $eQ, array $hR, DOMElement $Jp = NULL, DOMNode $R8 = NULL)
    {
        $P1 = new XMLSecurityDSig();
        $P1->setCanonicalMethod(XMLSecurityDSig::EXC_C14N);
        switch ($eQ->type) {
            case XMLSecurityKey::RSA_SHA256:
                $Hm = XMLSecurityDSig::SHA256;
                goto Qh;
            case XMLSecurityKey::RSA_SHA384:
                $Hm = XMLSecurityDSig::SHA384;
                goto Qh;
            case XMLSecurityKey::RSA_SHA512:
                $Hm = XMLSecurityDSig::SHA512;
                goto Qh;
            default:
                $Hm = XMLSecurityDSig::SHA1;
        }
        I8:
        Qh:
        $P1->addReferenceList(array($Jp), $Hm, array("\x68\x74\164\160\72\x2f\57\x77\x77\167\x2e\x77\x33\x2e\157\x72\147\57\62\x30\60\60\57\60\x39\57\170\155\x6c\144\x73\x69\147\x23\145\156\x76\x65\154\x6f\160\x65\x64\x2d\x73\151\147\156\141\164\165\x72\x65", XMLSecurityDSig::EXC_C14N), array("\151\144\137\156\x61\155\145" => "\111\104", "\157\x76\x65\162\167\162\x69\x74\145" => FALSE));
        $P1->sign($eQ);
        foreach ($hR as $MZ) {
            $P1->add509Cert($MZ, TRUE);
            li:
        }
        Iv:
        $P1->insertSignature($Jp, $R8);
    }
    public static function postSAMLRequest($nD, $LM, $UL, $C0 = false)
    {
        $YB = \Drupal::config("\x6d\x69\x6e\x69\x6f\x72\141\156\147\145\x5f\163\141\x6d\x6c\56\163\145\164\164\151\x6e\147\x73")->get("\x6d\151\x6e\x69\x6f\162\x61\x6e\x67\x65\x5f\x73\141\155\x6c\137\x73\145\156\144\137\163\x6c\x6f\x5f\151\x6e\137\151\146\162\141\x6d\x65");
        $EV = $YB ? "\x74\141\x72\147\145\164\75\x27\163\x6c\x6f\x5f\x70\157\163\164\137\x69\146\x72\x61\x6d\145\x27" : '';
        $ni = "\x3c\x69\146\x72\x61\x6d\x65\40\x6e\141\155\x65\x3d\x27\x73\x6c\157\137\x70\157\163\x74\x5f\151\x66\162\x61\x6d\145\47\x20\163\x72\143\x3d\47" . xss::filter($nD) . "\47\40\x73\x74\171\x6c\145\x3d\47\x70\x6f\163\151\x74\151\x6f\156\x3a\40\x61\x62\163\157\x6c\x75\164\145\73\x20\150\145\151\147\150\x74\x3a\x20\60\73\40\x77\151\144\x74\150\72\40\60\x3b\40\x62\157\x72\x64\x65\162\x3a\x20\x30\x3b\47\x20\x3e\74\x2f\x69\146\162\141\155\x65\76";
        $Ng = $C0 == FALSE ? "\123\x41\115\114\122\x65\161\x75\x65\x73\164" : "\x53\x41\x4d\114\x52\145\163\x70\157\x6e\163\145";
        echo "\x3c\x68\x74\x6d\154\76\74\150\x65\141\x64\x3e\15\12\40\x20\x20\x20\40\40\40\x20\40\40\40\40\40\x20\40\40\x20\40\40\40\74\x73\x63\x72\x69\x70\x74\40\x74\171\x70\x65\x3d\42\x74\x65\x78\x74\x2f\x6a\141\166\141\163\x63\162\x69\160\x74\x22\x3e\x24\50\x66\165\156\x63\x74\151\x6f\156\50\51\x7b\144\157\143\x75\x6d\x65\156\164\x2e\146\157\x72\155\x73\x5b\x27\163\x61\155\x6c\x2d\162\x65\161\165\x65\163\164\x2d\x66\x6f\162\x6d\47\x5d\x2e\163\165\142\x6d\151\164\x28\51\x3b\175\51\73\x3c\x2f\163\x63\x72\x69\160\164\x3e\xd\xa\40\40\40\40\x20\x20\x20\40\40\x20\x20\40\x20\40\x20\x20\x20\74\x2f\x68\145\x61\144\x3e\xd\12\40\x20\x20\x20\x20\40\40\x20\x20\40\x20\40\x20\x20\40\40\40\x3c\x62\157\x64\171\x3e\x50\154\x65\x61\x73\145\40\167\x61\151\x74\56\x2e\x2e\74\x66\157\162\155\40\141\143\164\x69\157\x6e\75\x22" . xss::filter($nD) . "\x22\40" . $EV . "\40\x6d\x65\164\150\x6f\x64\x3d\x22\160\157\163\164\42\x20\x69\x64\x3d\42\x73\x61\x6d\154\55\162\145\161\x75\145\x73\x74\55\x66\x6f\162\x6d\x22\76\xd\12\x20\40\x20\x20\x20\x20\x20\40\40\x20\40\40\x20\x20\40\40\40\x20\40\x20\x3c\151\156\160\165\164\40\x74\171\x70\145\75\42\x68\x69\144\x64\145\156\x22\40\x6e\141\155\x65\x3d\42" . xss::filter($Ng) . "\x22\40\x76\x61\x6c\x75\145\x3d\x22" . xss::filter($LM) . "\42\x20\57\76\xd\12\40\40\40\x20\40\40\40\x20\40\x20\40\x20\40\x20\40\x20\40\x20\x20\x20\74\x69\x6e\x70\165\164\40\164\171\x70\x65\75\x22\150\151\144\144\x65\156\42\x20\156\x61\155\x65\x3d\42\122\145\x6c\141\x79\x53\164\x61\164\145\42\x20\x76\141\154\x75\145\x3d\x22" . xss::filter(htmlentities($UL)) . "\42\40\x2f\76\74\x2f\146\x6f\162\155\x3e\xd\12\x20\40\40\x20\40\x20\x20\x20\40\x20\40\x20\x20\40\40\x20\x20\40\x20\40" . $ni . "\xd\12\x9\11\x9\11\x9\74\163\143\162\151\160\x74\x3e\x64\x6f\143\x75\x6d\x65\156\x74\x2e\x67\x65\x74\x45\154\x65\x6d\x65\156\164\102\171\111\144\x28\x27\163\141\x6d\x6c\55\162\145\161\x75\x65\163\x74\x2d\146\157\x72\155\47\x29\56\x73\x75\x62\x6d\151\164\50\x29\73\74\x2f\x73\143\162\x69\x70\x74\x3e\15\xa\x20\40\40\40\x20\x20\x20\40\40\x20\x20\40\x20\x20\40\x20\x20\x3c\57\x62\x6f\x64\171\x3e\15\xa\40\40\x20\x20\x20\40\40\x20\x20\40\40\x20\x20\x20\74\x2f\x68\x74\155\x6c\76";
    }
    public static function createAuthnRequest($Rt, $YM, $qr, $v7, $kB, $wF = "\x66\141\154\x73\x65")
    {
        $KO = "\74\77\170\155\154\x20\166\145\x72\x73\x69\157\156\x3d\42\61\56\60\x22\40\x65\156\x63\157\144\x69\156\x67\x3d\42\125\x54\x46\55\70\x22\x3f\76" . "\74\x73\x61\155\x6c\x70\72\x41\x75\164\150\x6e\x52\x65\161\165\x65\163\164\x20\170\155\154\156\163\x3a\163\141\155\x6c\160\75\42\x75\162\x6e\72\157\141\163\x69\163\72\x6e\141\x6d\x65\x73\x3a\x74\x63\x3a\123\x41\115\x4c\x3a\62\x2e\x30\72\x70\162\x6f\x74\x6f\143\x6f\x6c\42\x20\x49\x44\75\x22" . self::generateID() . "\42\x20\126\145\162\163\151\x6f\156\75\x22\62\56\x30\x22\40\x49\163\163\165\x65\x49\x6e\x73\x74\141\x6e\x74\75\x22" . self::generateTimestamp() . "\42";
        if (!($wF == "\164\x72\165\x65")) {
            goto FJ;
        }
        $KO .= "\40\106\157\162\x63\x65\x41\165\164\x68\156\75\42\164\162\x75\145\x22";
        FJ:
        $KO .= "\x20\x50\x72\157\x74\x6f\x63\157\154\x42\151\x6e\x64\151\156\147\75\42\x75\x72\156\72\157\141\x73\x69\163\x3a\x6e\x61\x6d\145\x73\x3a\164\x63\72\123\x41\115\114\72\62\56\60\x3a\142\151\156\x64\x69\156\x67\x73\72\x48\x54\x54\x50\x2d\120\117\x53\x54\x22\x20\101\163\163\x65\x72\164\151\x6f\x6e\103\157\156\x73\165\x6d\x65\x72\123\x65\162\x76\x69\143\x65\125\x52\114\75\x22" . $Rt . "\x22\40\104\x65\x73\x74\151\x6e\x61\x74\151\157\156\75\x22" . $v7 . "\42\x3e\x3c\x73\141\155\154\72\111\x73\163\x75\145\x72\x20\170\x6d\154\x6e\163\x3a\163\x61\x6d\x6c\75\x22\165\162\x6e\72\x6f\x61\163\151\163\x3a\x6e\x61\x6d\145\163\x3a\x74\143\x3a\x53\x41\x4d\114\72\62\x2e\x30\72\x61\x73\163\x65\x72\164\x69\x6f\x6e\x22\x3e" . $YM . "\74\57\x73\x61\x6d\x6c\72\x49\163\x73\165\145\162\x3e\xd\12\11\x9\x9\11\x9\11\74\x73\x61\155\154\160\72\x4e\x61\x6d\x65\111\104\120\157\154\x69\x63\x79\40\x41\x6c\x6c\157\x77\103\162\145\141\164\145\x3d\42\x74\x72\165\x65\x22\x20\x46\x6f\162\155\x61\164\75\42" . $qr . "\42\57\x3e\74\57\x73\141\x6d\154\x70\72\101\x75\x74\150\x6e\x52\145\161\x75\145\163\164\76";
        if (!(empty($kB) || $kB == "\x48\x54\x54\x50\55\122\145\x64\x69\162\x65\x63\x74")) {
            goto ei;
        }
        $rG = gzdeflate($KO);
        $S2 = base64_encode($rG);
        $dU = urlencode($S2);
        $KO = $dU;
        ei:
        return $KO;
    }
    public static function signXML($Z0, $g_, $Ql, $c3, $an = '')
    {
        $mD = array("\x74\171\160\x65" => "\x70\x72\x69\x76\141\x74\145");
        $eQ = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $mD);
        if ($c3 == "\122\x53\x41\x5f\x53\x48\x41\x33\x38\64") {
            goto zc;
        }
        if ($c3 == "\122\123\101\x5f\x53\x48\101\x35\x31\62") {
            goto Qe;
        }
        if ($c3 == "\x52\123\101\137\123\x48\x41\61") {
            goto fc;
        }
        goto ON;
        zc:
        $eQ = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $mD);
        goto ON;
        Qe:
        $eQ = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $mD);
        goto ON;
        fc:
        $eQ = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $mD);
        ON:
        $eQ->loadKey($Ql, FALSE);
        $HT = new DOMDocument();
        $HT->loadXML($Z0);
        $Xf = $HT->firstChild;
        if (!empty($an)) {
            goto Fb;
        }
        self::insertSignature($eQ, array($g_), $Xf);
        goto fY;
        Fb:
        $fq = $HT->getElementsByTagName($an)->item(0);
        self::insertSignature($eQ, array($g_), $Xf, $fq);
        fY:
        $QU = $Xf->ownerDocument->saveXML($Xf);
        $NG = base64_encode($QU);
        return $NG;
    }
    public static function createLogoutRequest($Pp, $YM, $v7, $gV, $u8 = '')
    {
        $KO = "\74\x3f\170\155\154\40\x76\145\x72\163\x69\157\156\x3d\42\61\x2e\x30\42\40\145\156\x63\157\x64\151\x6e\147\75\x22\125\x54\106\x2d\70\x22\x3f\76" . "\74\x73\141\x6d\154\160\72\114\x6f\x67\157\165\164\122\145\161\165\145\163\164\x20\x78\155\x6c\x6e\163\x3a\x73\141\155\x6c\160\x3d\42\165\162\x6e\x3a\x6f\x61\163\151\x73\72\156\x61\x6d\145\163\x3a\164\143\x3a\123\x41\115\114\x3a\62\56\x30\72\160\x72\x6f\x74\157\143\157\154\42\40\x78\x6d\154\x6e\163\72\163\x61\155\154\75\42\165\x72\156\x3a\157\141\163\x69\x73\72\156\141\155\x65\163\72\164\x63\72\x53\x41\x4d\114\72\x32\56\x30\x3a\x61\163\x73\145\x72\164\151\157\156\42\x20\x49\x44\75\x22" . self::generateID() . "\x22\40\x49\x73\x73\165\x65\111\156\x73\x74\141\156\164\75\42" . self::generateTimestamp() . "\42\40\x56\x65\162\163\x69\x6f\x6e\75\42\x32\x2e\60\x22\40\104\145\x73\x74\x69\x6e\141\164\151\x6f\156\x3d\42" . $v7 . "\x22\76\xd\12\11\11\x9\x9\11\11\x3c\x73\x61\x6d\154\x3a\x49\163\163\165\145\x72\x20\x78\x6d\154\156\x73\72\x73\141\x6d\154\x3d\x22\165\162\x6e\x3a\x6f\x61\163\151\x73\72\x6e\141\155\145\x73\x3a\164\x63\x3a\x53\x41\x4d\x4c\72\62\x2e\x30\x3a\141\x73\x73\x65\162\x74\x69\157\156\x22\76" . $YM . "\74\x2f\x73\141\x6d\154\x3a\x49\163\163\165\x65\162\76\xd\12\11\x9\11\11\11\11\74\x73\141\155\x6c\x3a\x4e\x61\155\x65\x49\x44\40\170\x6d\x6c\x6e\x73\x3a\163\x61\155\154\x3d\42\x75\x72\x6e\x3a\x6f\141\x73\151\x73\x3a\x6e\x61\155\145\163\72\164\143\72\x53\101\115\114\x3a\62\x2e\x30\72\141\163\163\x65\x72\x74\x69\x6f\156\42\x3e" . $Pp . "\x3c\57\163\x61\x6d\154\x3a\116\x61\155\145\x49\104\x3e";
        if (empty($u8)) {
            goto ZL;
        }
        $KO .= "\x3c\x73\x61\x6d\154\160\72\123\x65\163\163\151\x6f\x6e\111\156\x64\x65\170\x3e" . $u8 . "\74\57\x73\141\155\x6c\160\72\123\x65\x73\x73\x69\157\x6e\x49\156\144\145\170\76";
        ZL:
        $KO .= "\x3c\x2f\x73\141\x6d\x6c\x70\x3a\x4c\157\147\x6f\x75\x74\x52\x65\x71\165\145\163\x74\x3e";
        if (!(empty($gV) || $gV == "\110\x54\124\120\55\122\x65\144\151\x72\x65\143\164")) {
            goto Up;
        }
        $rG = gzdeflate($KO);
        $S2 = base64_encode($rG);
        $dU = urlencode($S2);
        $KO = $dU;
        Up:
        return $KO;
    }
    public static function generateTimestamp($XK = NULL)
    {
        if (!($XK === NULL)) {
            goto J2;
        }
        $XK = time();
        J2:
        return gmdate("\x59\x2d\x6d\55\x64\x5c\124\110\x3a\x69\72\x73\134\x5a", $XK);
    }
    public static function xpQuery(DOMNode $TV, $bD)
    {
        static $sO = NULL;
        if ($TV instanceof DOMDocument) {
            goto Ui;
        }
        $S9 = $TV->ownerDocument;
        goto IH;
        Ui:
        $S9 = $TV;
        IH:
        if (!($sO === NULL || !$sO->document->isSameNode($S9))) {
            goto MS;
        }
        $sO = new DOMXPath($S9);
        $sO->registerNamespace("\163\157\x61\160\55\x65\x6e\166", "\x68\164\164\160\x3a\x2f\57\x73\x63\x68\145\x6d\x61\x73\56\x78\155\x6c\163\157\141\160\56\157\x72\x67\x2f\x73\x6f\x61\160\x2f\x65\156\166\145\154\x6f\x70\145\57");
        $sO->registerNamespace("\163\x61\155\154\x5f\x70\x72\157\x74\x6f\x63\157\154", "\x75\x72\156\72\157\141\x73\x69\x73\72\x6e\141\x6d\145\163\72\164\x63\x3a\123\101\115\x4c\72\62\56\60\72\x70\x72\x6f\x74\157\x63\157\x6c");
        $sO->registerNamespace("\x73\141\155\x6c\x5f\141\163\163\145\x72\x74\x69\x6f\156", "\x75\162\156\72\x6f\x61\x73\x69\163\x3a\x6e\x61\155\x65\x73\72\164\143\72\x53\101\x4d\x4c\x3a\x32\56\x30\x3a\x61\163\163\x65\162\x74\x69\157\x6e");
        $sO->registerNamespace("\163\x61\155\x6c\137\x6d\x65\x74\141\x64\x61\x74\x61", "\x75\162\x6e\x3a\157\x61\163\151\163\x3a\x6e\x61\x6d\x65\x73\x3a\x74\x63\72\x53\x41\115\x4c\72\x32\56\x30\x3a\155\145\164\141\x64\141\x74\x61");
        $sO->registerNamespace("\144\x73", "\x68\164\x74\160\72\57\57\167\x77\x77\56\167\63\56\x6f\x72\147\x2f\x32\x30\x30\x30\x2f\60\x39\x2f\170\155\x6c\144\163\151\147\43");
        $sO->registerNamespace("\170\x65\156\x63", "\x68\x74\x74\160\72\57\57\x77\167\167\x2e\167\63\56\x6f\x72\147\x2f\x32\x30\x30\x31\x2f\x30\x34\x2f\170\155\154\145\x6e\x63\43");
        MS:
        $VP = $sO->query($bD, $TV);
        $Br = array();
        $mp = 0;
        Je:
        if (!($mp < $VP->length)) {
            goto S0;
        }
        $Br[$mp] = $VP->item($mp);
        wP:
        $mp++;
        goto Je;
        S0:
        return $Br;
    }
    public static function parseNameId(DOMElement $Z0)
    {
        $Br = array("\126\141\154\165\x65" => trim($Z0->textContent));
        foreach (array("\x4e\x61\x6d\x65\121\165\141\x6c\x69\146\151\x65\x72", "\123\120\116\x61\155\145\x51\165\141\154\151\x66\151\x65\x72", "\106\x6f\x72\x6d\x61\164") as $zi) {
            if (!$Z0->hasAttribute($zi)) {
                goto wt;
            }
            $Br[$zi] = $Z0->getAttribute($zi);
            wt:
            IT:
        }
        HC:
        return $Br;
    }
    public static function xsDateTimeToTimestamp($g4)
    {
        $MY = array();
        $Kz = "\x2f\x5e\x28\x5c\x64\134\144\134\144\134\144\51\55\50\x5c\x64\x5c\144\x29\x2d\x28\134\x64\x5c\144\51\x54\50\134\x64\134\x64\x29\72\x28\x5c\x64\134\144\x29\x3a\50\x5c\x64\x5c\x64\51\50\x3f\72\x5c\x2e\134\x64\x2b\x29\77\132\44\x2f\x44";
        if (!(preg_match($Kz, $g4, $MY) == 0)) {
            goto oa;
        }
        echo sprintf("\x6e\x76\x61\x6c\151\x64\x20\x53\x41\x4d\x4c\62\x20\x74\x69\155\145\x73\x74\141\x6d\160\40\x70\141\x73\x73\x65\144\40\x74\x6f\40\170\163\104\141\164\x65\124\x69\x6d\145\124\157\x54\x69\155\x65\163\x74\141\155\x70\72\40" . xss::filter($g4));
        exit;
        oa:
        $K1 = intval($MY[1]);
        $Rz = intval($MY[2]);
        $j4 = intval($MY[3]);
        $yy = intval($MY[4]);
        $RM = intval($MY[5]);
        $YU = intval($MY[6]);
        $IK = gmmktime($yy, $RM, $YU, $Rz, $j4, $K1);
        return $IK;
    }
    public static function extractStrings(DOMElement $zd, $t9, $BL)
    {
        $Br = array();
        $TV = $zd->firstChild;
        Cn:
        if (!($TV !== NULL)) {
            goto I4;
        }
        if (!($TV->namespaceURI !== $t9 || $TV->localName !== $BL)) {
            goto s0;
        }
        goto ni;
        s0:
        $Br[] = trim($TV->textContent);
        ni:
        $TV = $TV->nextSibling;
        goto Cn;
        I4:
        return $Br;
    }
    public static function validateElement(DOMElement $Jp)
    {
        $P1 = new XMLSecurityDSig();
        $P1->idKeys[] = "\111\x44";
        $Bb = self::xpQuery($Jp, "\56\57\144\163\72\123\151\147\x6e\x61\164\165\162\x65");
        if (count($Bb) === 0) {
            goto Hv;
        }
        if (count($Bb) > 1) {
            goto Go;
        }
        goto Sy;
        Hv:
        return FALSE;
        goto Sy;
        Go:
        echo sprintf("\x58\115\114\123\x65\143\72\x20\x6d\x6f\x72\145\40\164\150\x61\x6e\40\x6f\156\145\x20\163\x69\147\156\x61\164\165\x72\145\x20\x65\x6c\145\155\x65\x6e\x74\x20\x69\x6e\x20\162\157\157\164\56");
        exit;
        Sy:
        $Bb = $Bb[0];
        $P1->sigNode = $Bb;
        $P1->canonicalizeSignedInfo();
        if ($P1->validateReference()) {
            goto ul;
        }
        echo sprintf("\130\115\114\x73\x65\x63\x3a\x20\x64\151\x67\145\163\x74\40\x76\141\154\x69\x64\141\x74\151\157\156\40\x66\x61\151\154\145\144");
        exit;
        ul:
        $FH = FALSE;
        foreach ($P1->getValidatedNodes() as $jT) {
            if ($jT->isSameNode($Jp)) {
                goto eE;
            }
            if ($Jp->parentNode instanceof DOMElement && $jT->isSameNode($Jp->ownerDocument)) {
                goto ow;
            }
            goto tB;
            eE:
            $FH = TRUE;
            goto Yf;
            goto tB;
            ow:
            $FH = TRUE;
            goto Yf;
            tB:
            oW:
        }
        Yf:
        if ($FH) {
            goto Kb;
        }
        echo sprintf("\130\x4d\x4c\123\145\143\72\x20\124\150\145\x20\162\157\157\164\x20\x65\x6c\145\155\145\x6e\x74\40\x69\163\x20\x6e\157\x74\x20\163\x69\147\x6e\x65\x64\x2e");
        exit;
        Kb:
        $hR = array();
        foreach (self::xpQuery($Bb, "\x2e\x2f\144\x73\x3a\113\x65\x79\111\156\x66\x6f\57\144\163\72\x58\65\x30\x39\x44\x61\164\x61\x2f\x64\163\72\x58\65\x30\x39\x43\145\162\164\x69\146\x69\143\x61\x74\145") as $A0) {
            $z1 = trim($A0->textContent);
            $z1 = str_replace(array("\15", "\xa", "\x9", "\x20"), '', $z1);
            $hR[] = $z1;
            lD:
        }
        Y5:
        $Br = array("\x53\x69\x67\156\141\164\x75\x72\x65" => $P1, "\x43\145\x72\164\x69\x66\x69\x63\141\164\x65\x73" => $hR);
        return $Br;
    }
    public static function validateSignature(array $VU, XMLSecurityKey $eQ)
    {
        $P1 = $VU["\x53\151\147\156\141\x74\x75\162\x65"];
        $xV = self::xpQuery($P1->sigNode, "\x2e\x2f\144\x73\72\x53\x69\147\156\x65\x64\x49\x6e\146\157\x2f\x64\x73\72\x53\151\147\156\141\164\x75\162\145\115\x65\x74\150\x6f\144");
        if (!empty($xV)) {
            goto Wd;
        }
        echo sprintf("\115\151\x73\x73\x69\156\147\40\123\x69\147\156\x61\x74\x75\x72\x65\115\x65\x74\x68\x6f\144\40\145\x6c\145\x6d\145\x6e\164");
        exit;
        Wd:
        $xV = $xV[0];
        if ($xV->hasAttribute("\x41\x6c\x67\157\162\151\x74\x68\x6d")) {
            goto yC;
        }
        echo sprintf("\x4d\x69\x73\163\x69\156\147\40\101\154\x67\x6f\162\x69\164\150\x6d\x2d\x61\x74\x74\162\151\x62\165\164\x65\x20\x6f\156\x20\123\151\147\x6e\141\x74\x75\162\x65\x4d\x65\x74\x68\x6f\144\40\145\x6c\x65\x6d\145\x6e\164\x2e");
        exit;
        yC:
        $yY = $xV->getAttribute("\101\154\x67\x6f\x72\151\164\x68\155");
        if (!($eQ->type === XMLSecurityKey::RSA_SHA1 && $yY !== $eQ->type)) {
            goto Hl;
        }
        $eQ = self::castKey($eQ, $yY);
        Hl:
        if ($P1->verify($eQ)) {
            goto tA;
        }
        echo sprintf("\125\x6e\141\x62\154\145\40\x74\x6f\x20\166\141\154\x69\144\x61\x74\x65\40\x53\x67\156\x61\x74\165\x72\x65");
        exit;
        tA:
    }
    public static function castKey(XMLSecurityKey $eQ, $x9, $Hm = "\x70\165\x62\x6c\x69\143")
    {
        if (!($eQ->type === $x9)) {
            goto hx;
        }
        return $eQ;
        hx:
        $GQ = openssl_pkey_get_details($eQ->key);
        if (!($GQ === FALSE)) {
            goto sg;
        }
        echo sprintf("\125\156\141\142\x6c\x65\x20\x74\x6f\x20\147\x65\x74\x20\153\145\171\40\144\145\164\x61\x69\x6c\x73\x20\146\162\x6f\155\40\x58\x4d\114\123\145\x63\165\x72\151\x74\x79\113\145\171\56");
        exit;
        sg:
        if (isset($GQ["\x6b\x65\171"])) {
            goto a8;
        }
        echo sprintf("\115\151\163\163\x69\156\147\x20\153\x65\x79\40\151\x6e\40\x70\x75\x62\x6c\151\x63\40\153\x65\171\40\x64\145\164\x61\151\x6c\x73\56");
        exit;
        a8:
        $lZ = new XMLSecurityKey($x9, array("\x74\171\160\x65" => $Hm));
        $lZ->loadKey($GQ["\153\x65\x79"]);
        return $lZ;
    }
    public static function processResponse($Rt, $WM, $ZT, SAML2_Response $DI)
    {
        $bK = $ZT["\103\x65\162\164\x69\146\151\x63\141\164\145\163"][0];
        $Ml = $DI->getDestination();
        if (!($Ml !== NULL && $Ml !== $Rt)) {
            goto um;
        }
        echo sprintf("\x44\x65\163\164\x69\x6e\x61\164\151\x6f\x6e\40\x69\156\x20\162\145\x73\160\157\156\163\145\x20\144\157\145\x73\x6e\x27\164\40\155\141\164\x63\x68\x20\x74\150\145\40\x41\103\x53\x20\x55\122\x4c\x2e\40\x44\145\163\164\151\x6e\x61\164\x69\157\x6e\x20\151\x73\40\42" . xss::filter($Ml) . "\42\54\40\143\x75\x72\x72\x65\x6e\164\40\125\122\x4c\x20\151\x73\x20\42" . xss::filter($Rt) . "\42\56");
        exit;
        um:
        $fh = self::checkSign($WM, $ZT, $bK);
        return $fh;
    }
    public static function checkSign($WM, $ZT, $bK)
    {
        $hR = $ZT["\x43\145\162\164\151\146\151\143\x61\x74\x65\163"];
        if (count($hR) === 0) {
            goto PT;
        }
        $So = self::findCertificate($WM, $hR, $bK);
        $Mc = NULL;
        goto Zh;
        PT:
        $Jw = \Drupal::configFactory()->getEditable("\x6d\x69\156\x69\157\162\x61\156\147\145\x5f\163\x61\x6d\154\56\163\x65\164\164\x69\156\x67\163")->get("\x6d\x69\156\x69\x6f\x72\141\x6e\147\x65\x5f\163\141\155\154\x5f\151\x64\160\x5f\143\x65\162\x74\151\146\x69\x63\141\164\x65");
        $Jw = unserialize($Jw);
        $So = $Jw[0];
        Zh:
        $eQ = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\164\x79\160\145" => "\x70\165\142\x6c\x69\x63"));
        $eQ->loadKey($So);
        try {
            self::validateSignature($ZT, $eQ);
            return TRUE;
        } catch (Exception $XU) {
            $Mc = $XU;
        }
        if ($Mc !== NULL) {
            goto fR;
        }
        return FALSE;
        goto UE;
        fR:
        throw $Mc;
        UE:
    }
    private static function findCertificate($As, $hR, $bK)
    {
        foreach ($hR as $Jw) {
            $hX = strtolower(sha1(base64_decode($Jw)));
            if (!in_array($hX, $As, TRUE)) {
                goto NN;
            }
            $Kw = "\55\x2d\55\55\x2d\102\x45\x47\x49\116\40\103\105\122\x54\111\106\x49\x43\101\x54\x45\55\55\55\x2d\55\xa" . chunk_split($Jw, 64) . "\55\55\55\55\55\x45\116\104\x20\x43\x45\122\x54\x49\106\111\x43\101\x54\105\x2d\x2d\x2d\55\x2d\12";
            return $Kw;
            NN:
            Yb:
        }
        uh:
        $bK = self::sanitize_certificate($bK);
        if (array_key_exists("\122\145\154\141\x79\123\x74\141\164\145", $_REQUEST) && $_REQUEST["\122\x65\154\141\171\123\164\141\164\x65"] == "\164\145\163\164\x56\x61\154\x69\144\x61\x74\145") {
            goto RU;
        }
        echo "\x20\x3c\x64\x69\166\x20\x73\x74\171\154\145\75\x22\x63\x6f\154\157\x72\72\x20\x23\141\71\64\64\64\x32\73\x66\157\156\164\x2d\x73\151\172\x65\72\x31\x34\x70\164\73\x20\x6d\141\162\147\x69\156\55\142\157\164\x74\157\x6d\x3a\62\60\160\170\73\42\x3e\x3c\x70\x3e\74\142\x3e\105\162\x72\157\162\72\40\74\57\x62\76\x57\145\x20\x63\157\165\x6c\x64\40\156\x6f\x74\x20\x73\151\147\156\40\171\157\x75\x20\x69\156\56\x20\x50\x6c\145\141\x73\145\x20\x63\157\x6e\164\141\143\164\x20\171\x6f\x75\162\40\x41\x64\155\151\156\x69\163\164\x72\x61\164\x6f\162\x2e\74\x2f\160\x3e\x3c\x2f\144\x69\x76\76";
        goto Eh;
        RU:
        echo "\x3c\144\x69\x76\40\163\164\x79\x6c\x65\x3d\x22\x66\x6f\156\164\55\x66\141\155\151\154\x79\72\x43\141\x6c\151\142\x72\x69\x3b\x70\141\144\x64\151\156\x67\x3a\x30\x20\63\x25\73\x22\76";
        echo "\74\x64\x69\166\x20\163\164\x79\154\145\75\x22\143\157\154\x6f\x72\x3a\40\43\141\x39\64\x34\x34\62\73\142\141\143\153\x67\162\x6f\x75\x6e\x64\55\x63\157\154\157\162\x3a\40\43\146\62\x64\x65\144\x65\x3b\x70\x61\144\144\x69\156\x67\x3a\x20\x31\x35\160\x78\73\x6d\x61\162\x67\x69\156\x2d\142\157\x74\x74\x6f\155\x3a\x20\62\x30\160\170\73\164\145\x78\164\55\x61\x6c\x69\147\156\x3a\143\x65\156\164\x65\x72\73\142\157\162\144\x65\x72\72\x31\x70\x78\40\163\x6f\154\x69\144\x20\x23\105\66\102\63\x42\62\x3b\x66\x6f\x6e\x74\x2d\x73\x69\172\x65\x3a\61\x38\x70\164\73\42\76\40\x45\x52\122\117\x52\x3c\57\144\151\166\x3e\15\xa\11\11\11\x9\x3c\144\x69\166\x20\x73\x74\x79\154\145\75\42\143\x6f\154\x6f\x72\72\40\x23\x61\71\x34\64\x34\x32\x3b\x66\x6f\x6e\164\55\x73\x69\x7a\x65\x3a\x31\64\160\164\73\x20\155\141\x72\x67\x69\x6e\x2d\142\157\x74\164\x6f\155\72\x32\60\160\x78\73\x22\76\74\160\x3e\74\x73\x74\x72\157\x6e\x67\76\105\162\x72\157\162\x3a\40\x3c\x2f\x73\164\162\157\156\x67\x3e\x55\x6e\141\142\x6c\x65\x20\164\x6f\40\x66\x69\156\144\40\x61\x20\x63\x65\x72\x74\x69\x66\151\x63\141\x74\145\x20\x6d\x61\x74\143\150\151\156\x67\x20\x74\150\145\x20\143\x6f\156\x66\151\x67\x75\162\145\144\40\x66\151\x6e\x67\145\x72\x70\162\x69\156\164\x2e\x3c\x2f\x70\x3e\15\xa\x9\x9\11\x9\74\x70\x3e\74\163\x74\x72\x6f\156\147\x3e\120\x6f\163\x73\x69\x62\154\145\x20\103\141\x75\x73\145\72\40\74\x2f\x73\x74\x72\x6f\x6e\x67\76\103\157\156\164\145\x6e\x74\40\x6f\146\40\x27\130\56\65\x30\x39\x20\103\x65\x72\x74\x69\146\151\143\x61\x74\145\47\40\146\x69\x65\154\144\x20\x69\156\40\123\145\162\166\x69\143\x65\40\120\162\x6f\166\151\x64\145\162\x20\123\145\x74\x74\151\156\x67\163\40\x69\163\x20\x69\x6e\x63\x6f\162\162\145\143\x74\74\57\x70\76\15\xa\11\x9\x9\11\x3c\160\76\x3c\142\x3e\105\x78\x70\x65\x63\x74\x65\144\40\166\141\154\165\145\72\74\57\142\x3e" . xss::filter($bK) . "\x3c\57\160\x3e";
        echo str_repeat("\x26\156\x62\x73\x70\73", 15);
        echo "\x3c\x2f\x64\151\166\x3e\xd\xa\11\11\x9\11\x3c\x64\x69\166\x20\163\x74\171\x6c\145\x3d\42\155\x61\162\x67\x69\x6e\72\x33\45\x3b\x64\151\163\x70\x6c\x61\x79\x3a\x62\154\157\143\153\73\164\145\x78\164\55\x61\x6c\151\x67\x6e\x3a\143\x65\x6e\x74\145\x72\73\42\76\15\12\11\11\11\x9\x3c\x66\x6f\x72\155\40\141\143\164\x69\157\156\x3d\42\151\x6e\x64\145\170\x2e\160\x68\160\x22\x3e\15\12\11\11\x9\11\74\144\151\166\x20\163\164\x79\154\x65\75\x22\x6d\x61\162\147\151\x6e\72\x33\45\x3b\x64\x69\x73\x70\x6c\141\x79\x3a\142\154\157\x63\x6b\x3b\164\x65\x78\x74\55\x61\154\x69\147\x6e\x3a\x63\x65\x6e\164\145\x72\x3b\x22\76\x3c\x69\x6e\x70\165\x74\x20\163\164\171\x6c\145\75\x22\160\141\x64\144\151\x6e\147\72\61\x25\x3b\167\151\x64\164\x68\72\x31\60\60\160\x78\73\x62\x61\143\153\147\162\x6f\165\156\x64\x3a\40\x23\60\x30\71\x31\x43\x44\40\156\157\156\145\40\162\x65\x70\145\x61\164\40\163\143\162\x6f\154\154\x20\x30\45\40\x30\x25\73\x63\x75\162\x73\157\x72\72\40\160\x6f\x69\x6e\164\x65\x72\73\146\x6f\x6e\164\x2d\x73\151\172\x65\x3a\61\x35\160\x78\x3b\142\157\162\144\145\162\x2d\x77\x69\144\x74\x68\72\40\x31\160\x78\x3b\x62\157\x72\144\145\x72\x2d\163\x74\x79\x6c\x65\72\x20\163\157\x6c\151\x64\73\x62\157\162\144\x65\x72\55\x72\141\144\x69\x75\163\x3a\x20\63\x70\x78\x3b\x77\150\x69\164\145\x2d\x73\x70\141\x63\x65\72\40\156\x6f\x77\162\141\160\x3b\142\157\170\55\163\151\172\151\156\x67\x3a\x20\142\157\x72\x64\x65\162\x2d\x62\x6f\x78\x3b\142\157\x72\144\145\x72\55\x63\x6f\154\157\162\x3a\x20\x23\x30\60\x37\63\101\101\73\142\157\x78\x2d\163\150\x61\x64\x6f\167\72\40\60\x70\170\x20\x31\160\170\40\60\160\170\x20\162\x67\142\x61\50\x31\x32\60\x2c\x20\x32\60\60\54\x20\62\x33\x30\x2c\40\x30\56\66\x29\x20\x69\156\163\x65\164\73\143\157\x6c\157\162\x3a\x20\x23\106\106\106\73\x22\164\x79\x70\x65\75\42\142\x75\164\164\x6f\156\x22\40\166\x61\154\x75\145\75\42\x44\157\x6e\x65\42\40\x6f\x6e\x43\x6c\x69\143\x6b\75\x22\x73\x65\154\146\x2e\x63\154\157\x73\x65\50\x29\73\42\x3e\x3c\57\144\151\x76\76";
        Eh:
        exit;
    }
    public static function validateIssuerAndAudience($cH)
    {
        $YM = current($cH->getAssertions())->getIssuer();
        $dD = current(current($cH->getAssertions())->getValidAudiences());
        if (strcmp(self::getIdpIssuer(), $YM) === 0) {
            goto ou;
        }
        if (array_key_exists("\122\145\x6c\141\x79\x53\164\141\x74\145", $_REQUEST) && $_REQUEST["\x52\x65\x6c\x61\x79\123\x74\141\164\x65"] == "\164\145\x73\x74\126\141\x6c\x69\x64\141\164\x65") {
            goto aY;
        }
        echo "\74\144\x69\166\x20\163\164\x79\154\145\x3d\42\x63\157\x6c\157\162\72\x20\x23\141\71\x34\x34\x34\62\x3b\x66\157\156\x74\x2d\x73\151\x7a\145\72\61\x34\160\164\73\x20\x6d\141\x72\x67\x69\156\55\142\157\x74\164\x6f\155\x3a\x32\60\x70\170\x3b\42\x3e\x3c\x70\x3e\x3c\142\x3e\105\x72\162\157\x72\x3a\x20\74\x2f\x62\x3e\127\x65\x20\x63\157\165\x6c\x64\40\156\x6f\164\40\x73\x69\147\156\x20\x79\157\x75\40\x69\156\56\x20\x50\154\x65\x61\x73\x65\x20\143\x6f\x6e\164\x61\x63\164\x20\x79\157\165\x72\40\x41\x64\x6d\151\156\151\163\164\x72\x61\x74\x6f\x72\56\x3c\x2f\160\76\x3c\57\144\151\166\x3e";
        goto dv;
        aY:
        echo "\x3c\x64\x69\166\40\163\x74\x79\154\145\75\42\146\x6f\156\x74\55\146\141\155\x69\x6c\171\72\103\141\x6c\x69\142\x72\151\73\x70\x61\x64\144\x69\156\x67\x3a\x30\x20\x33\x25\73\x22\x3e";
        echo "\74\x64\151\x76\x20\163\x74\x79\154\x65\75\x22\143\x6f\154\157\162\72\40\x23\141\71\x34\x34\x34\x32\73\x62\141\143\x6b\x67\x72\x6f\165\x6e\x64\55\x63\x6f\x6c\157\162\x3a\x20\43\x66\62\x64\145\144\x65\x3b\160\141\x64\144\x69\156\x67\x3a\40\x31\x35\x70\170\73\x6d\141\x72\x67\x69\156\x2d\x62\x6f\x74\164\x6f\155\72\x20\x32\x30\160\x78\73\x74\145\170\x74\55\141\154\x69\147\156\x3a\143\145\x6e\164\145\x72\x3b\x62\157\x72\144\x65\162\x3a\x31\x70\170\40\163\157\154\151\x64\40\x23\x45\x36\102\63\102\62\x3b\x66\157\x6e\164\x2d\163\x69\172\x65\72\x31\x38\160\164\x3b\x22\76\40\x45\122\x52\117\122\x3c\57\x64\151\x76\76\xd\xa\x9\11\x9\11\x9\x3c\x64\151\x76\x20\163\164\171\x6c\145\75\x22\143\x6f\154\x6f\x72\72\x20\x23\141\71\64\64\64\x32\73\x66\157\x6e\164\x2d\x73\x69\x7a\x65\x3a\x31\x34\160\x74\73\40\155\141\162\147\151\x6e\x2d\x62\157\x74\x74\x6f\155\x3a\62\x30\160\x78\73\42\x3e\74\x70\76\74\163\x74\x72\x6f\x6e\147\x3e\105\x72\162\157\162\72\x20\x3c\x2f\x73\x74\162\157\x6e\x67\x3e\111\163\163\165\145\x72\x20\x63\141\156\156\157\164\40\142\145\40\x76\x65\x72\151\x66\x69\145\x64\56\x3c\x2f\160\76\xd\12\x9\11\11\x9\11\74\x70\x3e\x50\154\x65\x61\163\145\40\x63\157\x6e\164\141\143\164\x20\171\157\165\x72\x20\x61\x64\155\151\x6e\151\x73\164\x72\x61\x74\x6f\x72\40\x61\156\x64\x20\162\x65\x70\157\x72\164\x20\164\150\145\40\146\157\x6c\154\x6f\167\151\156\147\40\145\162\162\x6f\x72\x3a\74\57\x70\76\15\12\11\x9\x9\x9\11\x3c\x70\x3e\x3c\x73\x74\x72\x6f\156\147\x3e\120\x6f\x73\x73\151\142\154\x65\x20\x43\141\x75\163\145\x3a\40\74\57\x73\164\x72\157\156\x67\x3e\x54\x68\145\x20\x76\x61\x6c\165\145\40\151\x6e\x20\x27\x49\x64\120\40\x45\x6e\x74\x69\x74\171\x20\111\x44\40\x6f\x72\40\x49\x73\163\x75\x65\x72\47\x20\x66\x69\145\x6c\144\x20\x69\x6e\x20\x53\x65\162\166\151\x63\x65\x20\120\x72\157\x76\x69\x64\145\162\40\123\145\x74\164\151\156\147\x73\x20\x69\163\40\x69\x6e\x63\157\x72\162\x65\x63\x74\74\x2f\x70\76\15\xa\11\11\x9\11\11\x3c\x70\x3e\x3c\x73\164\162\x6f\156\x67\x3e\105\x78\x70\x65\143\x74\145\x64\40\105\156\x74\x69\164\171\x20\x49\104\x3a\40\x3c\x2f\x73\x74\x72\157\x6e\x67\76" . xss::filter($YM) . "\74\x70\x3e\xd\xa\x9\11\x9\x9\x9\x3c\160\76\74\163\x74\x72\x6f\156\147\76\105\156\164\151\x74\x79\40\x49\x44\40\x46\157\165\156\x64\72\40\x3c\x2f\163\x74\x72\x6f\156\147\76" . xss::filter(Utilities::getIdpIssuer()) . "\x3c\57\x70\76\xd\12\x9\11\11\11\x9\74\57\144\x69\x76\x3e\xd\xa\11\11\x9\x9\x9\74\x64\151\166\x20\163\x74\171\x6c\145\75\42\x6d\x61\x72\x67\x69\156\x3a\x33\45\x3b\144\151\x73\x70\154\141\171\x3a\142\154\x6f\143\x6b\73\x74\x65\x78\x74\x2d\141\x6c\x69\x67\x6e\72\x63\x65\156\164\145\162\x3b\42\x3e\xd\12\11\x9\x9\11\11\x3c\144\151\x76\40\x73\164\171\154\x65\x3d\42\155\141\x72\147\x69\x6e\x3a\63\45\73\144\x69\x73\x70\154\141\x79\72\x62\x6c\157\143\153\x3b\x74\x65\170\x74\55\x61\x6c\151\147\x6e\72\x63\x65\x6e\x74\145\162\73\42\x3e\x3c\x69\x6e\160\x75\x74\40\x73\164\171\x6c\x65\75\x22\x70\x61\144\144\x69\156\x67\72\x31\45\x3b\x77\151\144\x74\x68\72\61\x30\x30\160\170\x3b\142\141\x63\153\x67\x72\x6f\x75\156\x64\72\x20\x23\60\60\x39\x31\x43\104\40\156\157\x6e\145\x20\162\x65\x70\x65\x61\x74\40\163\143\162\x6f\154\154\x20\60\x25\40\x30\x25\x3b\x63\165\x72\163\157\x72\72\x20\160\157\x69\156\164\x65\162\x3b\x66\157\156\164\55\163\151\x7a\x65\72\61\65\160\170\x3b\142\x6f\x72\144\145\x72\x2d\x77\x69\144\x74\x68\72\x20\61\x70\170\73\x62\157\162\x64\145\x72\55\163\164\171\154\x65\x3a\40\163\x6f\x6c\151\x64\73\142\157\x72\x64\x65\162\x2d\162\x61\x64\x69\x75\163\72\x20\63\160\170\x3b\167\x68\x69\x74\145\x2d\163\160\141\143\145\72\x20\156\x6f\x77\x72\x61\160\73\x62\157\x78\55\163\x69\x7a\151\x6e\147\72\40\x62\x6f\162\144\x65\x72\x2d\142\x6f\x78\73\x62\157\x72\144\x65\162\55\143\x6f\154\x6f\x72\72\40\x23\60\x30\67\x33\x41\x41\x3b\x62\x6f\170\x2d\163\x68\141\x64\157\167\x3a\40\60\160\170\40\x31\x70\x78\40\x30\x70\170\40\162\x67\x62\141\50\61\x32\x30\54\40\62\x30\60\54\40\x32\63\60\x2c\40\x30\x2e\66\51\x20\x69\156\x73\x65\x74\73\x63\157\154\157\162\x3a\x20\x23\x46\106\106\x3b\42\164\171\x70\x65\75\42\x62\165\164\164\x6f\x6e\42\40\x76\141\x6c\x75\145\x3d\x22\104\157\x6e\145\x22\40\x6f\156\103\154\x69\143\153\x3d\42\163\x65\x6c\146\x2e\x63\x6c\x6f\x73\145\x28\x29\x3b\x22\76\x3c\x2f\144\151\x76\76";
        dv:
        exit;
        goto kI;
        ou:
        if (strcmp($dD, self::getIssuer()) === 0) {
            goto A5;
        }
        if (array_key_exists("\122\145\154\x61\171\x53\164\x61\164\145", $_REQUEST) && $_REQUEST["\x52\x65\154\x61\x79\x53\x74\x61\x74\145"] == "\164\145\163\x74\x56\141\154\x69\x64\x61\164\145") {
            goto OS;
        }
        echo "\x3c\x64\151\166\x20\163\x74\171\x6c\x65\75\x22\143\x6f\x6c\x6f\x72\x3a\40\x23\141\71\64\x34\x34\x32\x3b\x66\157\x6e\x74\x2d\x73\x69\172\x65\72\x31\64\160\164\x3b\x20\155\141\162\x67\x69\x6e\55\x62\x6f\x74\164\157\155\72\62\60\160\x78\73\x22\76\74\160\x3e\x3c\142\76\x45\162\x72\157\x72\x3a\x20\x3c\57\x62\76\127\x65\x20\143\x6f\x75\154\x64\40\x6e\x6f\164\x20\x73\x69\147\156\x20\171\157\165\x20\151\156\56\x20\120\x6c\x65\x61\x73\x65\40\x63\x6f\156\164\141\143\x74\x20\171\157\165\162\40\x41\144\x6d\151\156\x69\x73\x74\x72\x61\x74\x6f\162\56\74\57\x70\76\x3c\57\x64\151\166\76";
        goto SW;
        OS:
        echo "\x3c\144\151\x76\x20\x73\164\x79\154\x65\x3d\42\146\157\156\x74\55\146\141\x6d\151\x6c\x79\72\103\141\154\151\x62\x72\x69\x3b\160\141\144\144\151\156\x67\x3a\60\40\x33\x25\73\42\x3e";
        echo "\x3c\144\151\x76\40\x73\x74\171\x6c\145\x3d\x22\x63\x6f\154\x6f\162\x3a\40\x23\x61\71\x34\x34\x34\x32\73\142\x61\143\x6b\147\x72\157\x75\x6e\144\x2d\143\x6f\154\x6f\x72\x3a\x20\x23\146\62\144\145\144\x65\x3b\160\x61\x64\144\x69\156\147\72\40\61\65\x70\170\73\155\141\x72\x67\x69\156\55\x62\x6f\x74\164\157\155\72\40\x32\60\160\x78\73\164\x65\170\164\55\x61\154\151\x67\156\x3a\x63\x65\x6e\164\x65\162\x3b\142\x6f\x72\144\145\162\x3a\x31\160\x78\x20\163\x6f\x6c\x69\144\x20\43\x45\x36\102\x33\102\x32\x3b\x66\x6f\x6e\164\x2d\163\x69\172\145\x3a\x31\70\x70\164\73\x22\76\x20\x45\x52\x52\117\122\x3c\57\144\x69\x76\76\xd\xa\40\x20\40\x20\x20\x20\x20\40\x20\x20\x20\x20\40\x20\x20\x20\x20\40\x20\40\x3c\x64\151\x76\40\163\x74\171\154\145\x3d\42\x63\157\x6c\157\x72\72\x20\x23\x61\x39\64\x34\64\62\x3b\x66\x6f\x6e\164\55\163\151\x7a\145\x3a\61\64\160\164\x3b\x20\155\x61\x72\x67\x69\156\x2d\142\x6f\164\x74\157\155\72\x32\60\160\170\x3b\42\76\74\160\x3e\74\163\164\162\157\x6e\x67\x3e\x45\162\x72\157\x72\x3a\40\74\57\x73\x74\162\157\156\147\76\x49\156\166\141\154\x69\144\40\x41\165\144\x69\x65\x6e\x63\x65\40\x55\122\x49\x2e\74\x2f\x70\x3e\xd\12\40\x20\40\x20\40\x20\x20\40\40\x20\40\40\40\x20\x20\40\x20\40\x20\x20\74\160\76\x50\154\x65\x61\x73\145\40\x63\x6f\x6e\x74\141\143\164\x20\x79\x6f\165\162\40\141\144\x6d\x69\x6e\151\163\164\162\x61\x74\x6f\x72\40\141\x6e\x64\x20\162\145\x70\157\162\x74\x20\164\150\x65\x20\146\157\154\154\x6f\167\x69\x6e\147\x20\x65\x72\x72\x6f\162\x3a\74\57\x70\76\15\xa\40\x20\x20\40\40\40\40\40\x20\40\x20\40\x20\x20\40\40\x20\40\x20\x20\x3c\x70\x3e\74\163\164\x72\157\156\x67\x3e\120\157\x73\x73\x69\142\154\145\40\x43\141\x75\163\145\72\40\74\x2f\x73\x74\x72\157\x6e\147\x3e\124\150\145\40\x76\141\x6c\x75\x65\x20\x6f\x66\40\47\101\165\144\151\x65\x6e\143\x65\40\125\122\x49\47\x20\x66\151\x65\x6c\144\x20\157\x6e\40\111\144\145\156\x74\151\164\171\40\120\x72\x6f\166\151\144\x65\162\47\163\40\x73\151\x64\x65\x20\x69\163\40\151\156\x63\157\162\x72\145\x63\164\74\x2f\x70\x3e\xd\12\x20\x20\40\40\x20\x20\40\40\40\x20\40\40\40\40\40\40\40\x20\40\x20\74\160\76\105\170\x70\x65\143\x74\145\144\40\157\156\x65\x20\x6f\x66\40\x74\x68\x65\x20\x41\165\144\151\x65\156\x63\x65\x73\x20\164\x6f\x20\142\145\x3a\x20" . xss::filter(self::getIssuer()) . "\74\x70\x3e\15\12\x20\x20\x20\40\x20\x20\x20\40\x20\40\40\40\40\40\x20\40\x20\40\40\40\74\x2f\144\151\166\76\15\xa\x20\40\40\x20\40\40\x20\40\40\x20\x20\40\x20\x20\x20\40\40\x20\40\x20\x3c\144\x69\166\40\163\164\x79\x6c\145\75\42\x6d\x61\162\147\151\156\x3a\63\45\x3b\x64\151\163\160\x6c\x61\171\72\x62\154\157\143\153\73\x74\145\x78\x74\x2d\x61\x6c\151\x67\x6e\x3a\x63\145\x6e\x74\x65\162\x3b\42\76\15\12\x20\40\x20\x20\40\40\x20\40\40\40\x20\40\x20\40\x20\40\x20\x20\40\40\x3c\x64\151\166\40\x73\x74\x79\x6c\x65\x3d\x22\x6d\141\162\x67\x69\x6e\72\x33\x25\73\x64\151\x73\x70\x6c\x61\x79\72\x62\154\157\x63\x6b\73\164\x65\170\x74\55\141\154\151\147\156\72\143\145\156\x74\x65\162\73\42\x3e\74\x69\x6e\x70\165\x74\x20\163\164\171\x6c\145\75\42\x70\141\144\144\x69\156\147\72\x31\x25\73\167\151\x64\x74\150\72\61\x30\60\160\170\73\x62\x61\x63\153\147\162\157\165\x6e\144\72\40\x23\x30\x30\71\x31\103\x44\x20\156\157\156\145\x20\x72\145\x70\x65\x61\164\40\x73\x63\x72\157\x6c\154\x20\60\45\40\x30\x25\73\x63\165\162\x73\157\162\72\40\160\157\151\156\164\x65\162\73\x66\157\x6e\x74\55\163\x69\172\145\72\61\65\x70\x78\x3b\142\x6f\x72\144\145\162\x2d\167\x69\144\x74\150\72\x20\x31\x70\170\73\142\x6f\162\144\x65\x72\x2d\163\164\x79\154\145\72\40\x73\x6f\x6c\x69\144\73\142\x6f\162\144\145\x72\55\162\x61\144\x69\165\163\72\x20\x33\x70\170\73\167\x68\x69\164\x65\55\x73\160\141\143\x65\72\x20\x6e\x6f\167\162\x61\160\x3b\142\157\170\55\163\151\x7a\151\156\147\72\40\x62\157\x72\x64\145\x72\55\x62\157\x78\73\x62\x6f\162\144\145\x72\55\143\x6f\x6c\x6f\162\x3a\x20\43\x30\60\x37\63\101\101\x3b\x62\x6f\x78\55\163\x68\x61\x64\x6f\x77\72\40\60\160\170\40\61\x70\170\x20\x30\160\x78\40\162\x67\x62\141\x28\x31\62\x30\x2c\x20\62\x30\x30\54\x20\x32\63\60\54\40\60\56\66\x29\x20\x69\156\163\x65\x74\73\x63\x6f\154\157\162\x3a\40\43\106\106\x46\x3b\42\x74\171\x70\x65\75\x22\x62\x75\164\164\x6f\x6e\42\40\x76\x61\x6c\165\145\x3d\42\x44\x6f\x6e\x65\42\x20\157\x6e\103\154\x69\x63\x6b\75\42\163\x65\154\146\56\x63\154\157\163\145\x28\51\73\x22\76\x3c\57\144\151\x76\76";
        SW:
        exit;
        goto p4;
        A5:
        return TRUE;
        p4:
        kI:
    }
    private static function doDecryptElement(DOMElement $SI, XMLSecurityKey $hn, array &$qo)
    {
        $RP = new XMLSecEnc();
        $RP->setNode($SI);
        $RP->type = $SI->getAttribute("\x54\171\160\145");
        $HZ = $RP->locateKey($SI);
        if ($HZ) {
            goto fh;
        }
        echo sprintf("\103\x6f\165\154\144\40\x6e\157\164\40\x6c\x6f\x63\141\164\x65\40\153\145\x79\x20\141\x6c\x67\157\x72\151\x74\x68\x6d\40\151\x6e\x20\145\x6e\143\162\x79\160\164\145\x64\x20\144\141\x74\x61\56");
        exit;
        fh:
        $UW = $RP->locateKeyInfo($HZ);
        if ($UW) {
            goto ps;
        }
        echo sprintf("\x43\x6f\x75\x6c\144\40\x6e\157\x74\40\154\157\143\x61\164\x65\40\74\x64\163\151\147\72\113\145\x79\111\156\x66\157\76\x20\x66\157\162\40\x74\150\x65\40\145\156\x63\x72\171\160\164\145\144\x20\x6b\145\x79\56");
        exit;
        ps:
        $mW = $hn->getAlgorithm();
        if ($UW->isEncrypted) {
            goto NZ;
        }
        $bY = $HZ->getAlgorithm();
        if (!($mW !== $bY)) {
            goto hv;
        }
        echo sprintf("\x41\x6c\147\x6f\162\151\x74\150\155\x20\x6d\151\x73\x6d\141\x74\x63\150\40\142\145\164\167\145\145\156\x20\151\x6e\x70\165\x74\40\153\145\x79\40\141\x6e\x64\40\x6b\x65\x79\40\x69\156\x20\155\145\163\x73\x61\147\145\x2e\40" . "\x4b\x65\x79\x20\x77\141\x73\x3a\x20" . xss::filter(var_export($mW, TRUE)) . "\73\x20\x6d\x65\163\x73\x61\x67\145\x20\x77\x61\163\72\40" . xss::filter(var_export($bY, TRUE)));
        exit;
        hv:
        $HZ = $hn;
        goto Nj;
        NZ:
        $bF = $UW->getAlgorithm();
        if (!in_array($bF, $qo, TRUE)) {
            goto F9;
        }
        echo sprintf("\101\x6c\147\157\162\151\x74\150\155\40\x64\x69\x73\x61\x62\x6c\x65\144\x3a\40" . xss::filter(var_export($bF, TRUE)));
        exit;
        F9:
        if (!($bF === XMLSecurityKey::RSA_OAEP_MGF1P && $mW === XMLSecurityKey::RSA_1_5)) {
            goto Z7;
        }
        $mW = XMLSecurityKey::RSA_OAEP_MGF1P;
        Z7:
        if (!($mW !== $bF)) {
            goto Cj;
        }
        echo sprintf("\x41\x6c\147\x6f\x72\151\x74\150\155\x20\x6d\151\x73\155\x61\164\x63\x68\x20\x62\x65\164\x77\x65\145\x6e\x20\151\x6e\x70\x75\x74\x20\x6b\x65\x79\x20\x61\156\x64\x20\153\145\171\40\165\163\145\144\40\x74\x6f\40\x65\x6e\x63\162\x79\160\x74\40" . "\40\164\150\x65\40\x73\171\155\155\x65\164\162\x69\143\40\x6b\145\x79\40\146\157\x72\x20\164\x68\145\40\155\x65\x73\x73\141\x67\145\x2e\x20\113\x65\x79\x20\167\141\x73\72\x20" . xss::filter(var_export($mW, TRUE)) . "\73\40\x6d\x65\x73\x73\141\x67\145\40\x77\141\x73\72\40" . xss::filter(var_export($bF, TRUE)));
        exit;
        Cj:
        $pn = $UW->encryptedCtx;
        $UW->key = $hn->key;
        $am = $HZ->getSymmetricKeySize();
        if (!($am === NULL)) {
            goto QB;
        }
        echo sprintf("\x55\x6e\x6b\156\x6f\x77\156\40\x6b\145\171\x20\163\x69\172\x65\40\x66\157\162\x20\x65\x6e\143\x72\x79\x70\164\151\x6f\156\40\141\154\x67\x6f\x72\151\x74\x68\x6d\72\40" . xss::filter(var_export($HZ->type, TRUE)));
        exit;
        QB:
        try {
            $eQ = $pn->decryptKey($UW);
            if (!(strlen($eQ) != $am)) {
                goto fd;
            }
            echo sprintf("\125\156\x65\170\160\x65\x63\164\145\x64\x20\153\145\171\40\x73\151\x7a\145\x20\x28" . xss::filter(strlen($eQ) * 8) . "\x62\x69\164\x73\51\40\x66\x6f\162\40\145\x6e\x63\162\171\x70\x74\151\x6f\x6e\40\x61\x6c\x67\x6f\162\151\164\150\155\x3a\40" . xss::filter(var_export($HZ->type, TRUE)));
            exit;
            fd:
        } catch (Exception $XU) {
            $iJ = $pn->getCipherValue();
            $VH = openssl_pkey_get_details($UW->key);
            $VH = sha1(serialize($VH), TRUE);
            $eQ = sha1($iJ . $VH, TRUE);
            if (strlen($eQ) > $am) {
                goto nS;
            }
            if (strlen($eQ) < $am) {
                goto Q5;
            }
            goto aa;
            nS:
            $eQ = substr($eQ, 0, $am);
            goto aa;
            Q5:
            $eQ = str_pad($eQ, $am);
            aa:
        }
        $HZ->loadkey($eQ);
        Nj:
        $x9 = $HZ->getAlgorithm();
        if (!in_array($x9, $qo, TRUE)) {
            goto fA;
        }
        echo sprintf("\101\154\147\x6f\x72\x69\x74\x68\155\x20\144\151\x73\x61\x62\x6c\x65\144\x3a\x20" . xss::filter(var_export($x9, TRUE)));
        exit;
        fA:
        $gL = $RP->decryptNode($HZ, FALSE);
        $Z0 = "\x3c\x72\x6f\x6f\x74\x20\x78\x6d\154\156\163\72\x73\141\x6d\154\x3d\x22\x75\x72\x6e\x3a\x6f\141\x73\151\163\x3a\156\x61\x6d\x65\163\x3a\164\143\x3a\123\x41\x4d\114\x3a\62\56\x30\x3a\141\163\163\145\x72\164\151\157\156\x22\40" . "\x78\155\154\156\163\72\170\163\151\75\x22\150\x74\164\160\x3a\57\57\x77\x77\167\x2e\167\x33\56\x6f\162\147\x2f\x32\x30\60\61\57\x58\115\x4c\x53\143\x68\x65\155\141\55\151\156\163\x74\141\x6e\x63\x65\42\76" . $gL . "\74\x2f\162\157\x6f\164\x3e";
        $tV = new DOMDocument();
        if (@$tV->loadXML($Z0)) {
            goto hw;
        }
        echo sprintf("\x46\141\151\x6c\x65\144\x20\x74\x6f\x20\x70\x61\162\x73\x65\40\x64\x65\x63\x72\171\x70\x74\145\x64\40\x58\115\x4c\56\x20\x4d\x61\x79\142\145\40\x74\150\x65\40\167\162\x6f\x6e\x67\x20\163\x68\x61\162\145\x64\x6b\x65\171\x20\x77\x61\x73\x20\165\x73\x65\x64\77");
        throw new Exception("\x46\x61\x69\154\145\144\40\164\157\40\160\141\x72\163\145\40\x64\145\x63\x72\x79\160\164\145\x64\40\x58\115\114\56\40\x4d\141\171\142\x65\40\164\150\x65\x20\x77\x72\157\x6e\x67\40\x73\x68\141\x72\x65\144\x6b\145\x79\x20\167\141\x73\40\x75\163\x65\144\77");
        hw:
        $Kv = $tV->firstChild->firstChild;
        if (!($Kv === NULL)) {
            goto Xn;
        }
        echo sprintf("\115\151\163\x73\x69\x6e\x67\40\145\156\143\162\171\x70\164\x65\144\x20\x65\154\145\x6d\x65\156\164\56");
        throw new Exception("\x4d\151\x73\163\x69\x6e\147\x20\x65\x6e\x63\x72\x79\x70\x74\x65\x64\x20\145\154\145\x6d\x65\x6e\x74\56");
        Xn:
        if ($Kv instanceof DOMElement) {
            goto Y6;
        }
        echo sprintf("\104\x65\x63\x72\171\160\x74\145\x64\x20\145\x6c\x65\x6d\x65\x6e\164\40\x77\x61\163\x20\x6e\157\164\x20\141\143\x74\165\x61\154\x6c\x79\x20\x61\40\x44\117\x4d\105\x6c\145\x6d\145\156\164\56");
        Y6:
        return $Kv;
    }
    public static function decryptElement(DOMElement $SI, XMLSecurityKey $hn, array $qo = array(), XMLSecurityKey $Fq = NULL)
    {
        try {
            return self::doDecryptElement($SI, $hn, $qo);
        } catch (Exception $XU) {
            if (is_null($Fq)) {
                goto e0;
            }
            try {
                return self::doDecryptElement($SI, $Fq, $qo);
            } catch (Exception $RN) {
            }
            e0:
            echo sprintf("\106\141\x69\x6c\x65\144\40\x74\157\x20\x64\145\x63\162\x79\x70\x74\x20\130\x4d\114\40\145\x6c\x65\x6d\x65\x6e\x74\x2e");
            exit;
        }
    }
    public static function showErrorMessage($jg, $Dk, $c8, $rN = FALSE)
    {
        global $base_url;
        $U9 = $rN === TRUE ? "\x6f\156\x43\154\x69\143\x6b\x3d\42\x73\145\x6c\x66\56\x63\x6c\157\x73\x65\x28\51\73\x22" : "\150\162\x65\x66\75\42" . $base_url . "\x2f\x75\163\x65\x72\57\x6c\157\x67\151\156\42";
        echo "\x3c\x64\x69\166\40\163\164\x79\154\145\x3d\x22\146\157\156\164\55\x66\141\x6d\x69\154\171\72\x43\x61\x6c\151\x62\162\x69\73\160\x61\144\144\151\x6e\147\72\x30\40\x33\x25\x3b\x22\x3e";
        echo "\x3c\x64\151\166\40\163\164\x79\x6c\x65\x3d\x22\143\157\154\157\162\x3a\x20\x23\x61\x39\x34\64\x34\62\x3b\x62\141\x63\153\x67\162\x6f\x75\x6e\144\x2d\x63\x6f\x6c\x6f\x72\x3a\x20\43\x66\x32\x64\x65\144\x65\x3b\x70\x61\x64\x64\x69\156\147\72\x20\61\x35\x70\x78\x3b\155\141\x72\147\x69\156\x2d\x62\157\164\x74\157\155\72\40\x32\x30\160\170\x3b\x74\145\170\164\55\141\x6c\151\x67\x6e\72\143\145\x6e\x74\145\x72\73\x62\x6f\162\x64\145\162\x3a\61\160\x78\40\x73\x6f\154\x69\144\40\x23\105\66\102\63\102\x32\73\146\157\x6e\164\55\163\x69\172\x65\72\61\x38\x70\164\x3b\42\76\x20\x45\x52\x52\117\122\x3c\x2f\144\151\166\76\15\xa\x20\40\x20\40\40\x20\40\x20\x20\40\x20\x20\x20\x20\40\x20\x20\x20\x20\x20\40\40\40\40\40\40\x20\x20\x20\40\x20\40\x3c\144\151\x76\40\x73\x74\171\154\145\x3d\42\143\x6f\x6c\157\162\x3a\x20\43\141\71\x34\64\64\x32\73\x66\157\156\x74\x2d\x73\151\172\x65\x3a\x31\64\x70\x74\73\40\155\141\x72\x67\151\x6e\55\x62\157\x74\x74\157\x6d\x3a\62\x30\x70\x78\x3b\42\76\x3c\160\76\x3c\163\x74\x72\157\156\x67\76\105\162\x72\x6f\162\x3a\x20\74\x2f\x73\164\x72\157\x6e\x67\76" . xss::filter($jg) . "\74\57\160\76\xd\12\40\40\40\40\x20\x20\x20\x20\40\40\x20\40\40\x20\x20\x20\x20\x20\40\40\x20\40\x20\40\x20\40\x20\40\40\x20\40\40\40\x20\40\x20\x3c\160\76" . xss::filter($Dk) . "\74\x2f\160\76\15\xa\x20\x20\x20\x20\40\40\x20\x20\x20\x20\40\x20\40\40\x20\x20\40\40\x20\x20\x20\x20\x20\x20\40\x20\40\40\40\40\40\x20\40\40\x20\40\x3c\160\x3e\74\x73\x74\x72\157\x6e\x67\x3e\x50\157\x73\x73\151\142\154\x65\x20\103\x61\165\163\145\x3a\x20\x3c\57\163\x74\162\x6f\156\x67\x3e" . xss::filter($c8) . "\x3c\x2f\x70\x3e\xd\12\40\x20\x20\40\40\40\x20\x20\x20\40\40\x20\40\x20\40\40\x20\40\40\40\x20\x20\x20\40\x20\40\x20\x20\x20\x20\40\x20\x3c\57\x64\x69\x76\x3e\15\12\40\x20\x20\x20\40\x20\x20\40\40\x20\40\x20\x20\x20\40\40\x20\40\40\x20\40\x20\x20\x20\x20\40\x20\40\40\40\x20\x20\x3c\x64\x69\166\x20\x73\164\x79\154\x65\x3d\42\x6d\141\x72\x67\151\x6e\72\x33\x25\x3b\144\151\x73\x70\x6c\x61\171\72\x62\154\157\143\x6b\73\x74\x65\x78\x74\x2d\x61\x6c\x69\x67\x6e\72\143\145\x6e\x74\145\x72\73\42\x3e\x3c\x2f\144\151\166\x3e\xd\12\x20\40\x20\x20\x20\x20\x20\40\x20\x20\40\x20\40\40\x20\40\40\40\x20\40\x20\40\x20\40\x20\x20\40\x20\x20\40\40\40\x3c\x64\151\x76\x20\163\164\171\154\145\75\42\155\141\162\147\x69\x6e\72\63\x25\73\x64\151\x73\160\154\141\171\x3a\x62\154\x6f\x63\x6b\73\x74\x65\170\164\55\141\x6c\x69\147\x6e\72\x63\x65\156\164\x65\x72\x3b\x22\76\15\xa\x20\x20\40\x20\40\40\40\40\40\x20\x20\40\40\x20\x20\40\x20\x20\40\x20\x20\x20\40\40\40\x20\x20\x20\40\40\40\40\40\x20\x20\40\74\x61\40\163\x74\171\154\x65\75\x22\160\x61\144\144\x69\x6e\147\x3a\61\x25\73\167\x69\144\x74\x68\72\61\60\60\x70\x78\x3b\x62\x61\143\x6b\147\162\x6f\x75\x6e\x64\x3a\40\43\60\60\71\61\103\104\40\x6e\157\x6e\x65\40\162\145\160\145\x61\x74\x20\163\143\162\157\154\154\40\x30\45\x20\x30\x25\x3b\143\165\x72\x73\157\x72\x3a\40\x70\x6f\x69\156\x74\145\162\73\x66\157\x6e\164\x2d\163\151\x7a\145\x3a\x31\x35\160\x78\x3b\142\x6f\162\144\145\x72\x2d\167\x69\x64\x74\150\x3a\x20\x31\160\170\73\x62\157\162\x64\x65\x72\x2d\x73\164\171\154\145\x3a\x20\x73\x6f\x6c\x69\x64\73\142\x6f\x72\144\145\x72\x2d\162\141\x64\151\x75\x73\72\40\x33\x70\x78\73\x77\150\151\x74\x65\55\163\160\141\143\x65\72\x20\x6e\157\x77\162\141\160\x3b\x62\157\170\x2d\x73\151\172\151\x6e\x67\x3a\x20\142\x6f\x72\x64\x65\162\55\142\157\170\x3b\142\157\x72\144\x65\162\x2d\143\x6f\x6c\157\x72\x3a\40\43\x30\60\67\x33\101\x41\x3b\142\157\170\x2d\x73\x68\x61\144\157\167\x3a\x20\x30\160\x78\40\61\x70\x78\40\x30\x70\x78\x20\162\x67\x62\x61\x28\61\62\60\x2c\x20\62\60\60\x2c\40\62\x33\60\54\x20\x30\56\x36\51\40\151\156\x73\145\164\x3b\x63\157\154\x6f\162\72\40\43\106\x46\106\x3b\x20\164\145\x78\x74\55\x64\x65\143\157\162\141\x74\x69\157\156\72\x20\x6e\x6f\156\x65\x3b\42\x74\171\160\x65\75\42\x62\x75\x74\x74\157\156\x22\40\x20" . $U9 . "\40\76\104\157\x6e\x65\x3c\57\x61\76\xd\xa\x20\40\40\x20\40\x20\x20\x20\40\x20\x20\x20\40\x20\x20\40\40\40\x20\40\x20\x20\40\x20\40\x20\40\40\x20\x20\40\40\x3c\57\x64\151\166\x3e";
        exit;
    }
    public static function getEncryptionAlgorithm($XF)
    {
        switch ($XF) {
            case "\x68\x74\x74\160\72\57\x2f\167\167\167\x2e\167\x33\x2e\x6f\162\147\57\62\60\60\61\x2f\x30\x34\x2f\170\x6d\x6c\145\x6e\x63\x23\164\x72\x69\x70\154\145\x64\145\163\x2d\x63\142\143":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto kF;
            case "\150\164\164\160\x3a\57\57\167\167\x77\x2e\167\63\x2e\x6f\162\x67\x2f\62\60\x30\61\x2f\x30\x34\57\x78\x6d\x6c\145\156\x63\x23\x61\145\163\x31\62\x38\x2d\143\x62\143":
                return XMLSecurityKey::AES128_CBC;
            case "\150\164\x74\x70\x3a\57\x2f\167\x77\x77\x2e\167\x33\x2e\x6f\162\x67\57\x32\60\60\61\x2f\x30\x34\57\x78\155\154\145\x6e\x63\43\141\145\x73\61\71\x32\55\x63\142\143":
                return XMLSecurityKey::AES192_CBC;
                goto kF;
            case "\150\x74\x74\160\x3a\x2f\x2f\x77\167\x77\56\167\x33\56\157\x72\147\57\x32\x30\60\x31\x2f\60\64\57\x78\155\x6c\x65\156\143\43\141\x65\x73\x32\x35\66\55\143\142\143":
                return XMLSecurityKey::AES256_CBC;
                goto kF;
            case "\x68\x74\164\160\x3a\x2f\x2f\167\x77\x77\56\x77\63\x2e\157\x72\x67\57\x32\x30\x30\61\x2f\60\64\x2f\x78\155\154\x65\x6e\143\43\162\163\141\x2d\61\x5f\x35":
                return XMLSecurityKey::RSA_1_5;
                goto kF;
            case "\150\164\x74\160\x3a\x2f\57\167\x77\167\56\x77\63\56\157\162\x67\x2f\62\x30\60\x31\57\60\64\x2f\x78\155\x6c\145\x6e\x63\43\x72\163\x61\55\157\x61\145\x70\55\x6d\147\146\x31\160":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto kF;
            case "\150\x74\x74\160\72\57\57\x77\x77\x77\56\167\63\56\x6f\162\x67\x2f\62\60\x30\60\x2f\60\71\57\x78\155\154\144\163\151\x67\x23\x64\163\x61\55\163\x68\x61\61":
                return XMLSecurityKey::DSA_SHA1;
                goto kF;
            case "\x68\164\164\x70\72\x2f\x2f\x77\x77\x77\56\x77\x33\x2e\x6f\x72\x67\x2f\62\x30\x30\60\57\60\71\x2f\170\x6d\x6c\144\x73\x69\147\43\x72\x73\x61\55\x73\150\x61\x31":
                return XMLSecurityKey::RSA_SHA1;
                goto kF;
            case "\x68\x74\x74\160\72\57\57\167\x77\167\x2e\167\x33\56\157\162\x67\57\62\60\60\x31\57\60\64\57\170\155\154\x64\x73\151\x67\x2d\155\157\x72\145\x23\162\163\141\x2d\163\x68\x61\62\x35\x36":
                return XMLSecurityKey::RSA_SHA256;
                goto kF;
            case "\150\x74\x74\160\72\x2f\x2f\167\x77\167\56\x77\63\56\157\x72\x67\x2f\x32\x30\x30\61\57\60\x34\x2f\170\x6d\154\144\x73\x69\x67\x2d\x6d\x6f\x72\145\43\162\163\x61\x2d\x73\150\141\x33\70\64":
                return XMLSecurityKey::RSA_SHA384;
                goto kF;
            case "\x68\164\164\160\x3a\57\57\167\x77\x77\x2e\167\63\56\x6f\162\x67\57\x32\60\x30\x31\x2f\x30\x34\57\x78\x6d\x6c\144\x73\151\x67\55\x6d\157\162\x65\x23\x72\x73\141\x2d\x73\x68\141\x35\x31\62":
                return XMLSecurityKey::RSA_SHA512;
                goto kF;
            default:
                echo sprintf("\111\156\166\141\x6c\x69\144\40\x45\156\143\x72\171\160\164\151\157\156\x20\115\x65\x74\150\157\144\72\x20" . xss::filter($XF));
                exit;
                goto kF;
        }
        PS:
        kF:
    }
    public static function sanitize_certificate($MZ)
    {
        $MZ = preg_replace("\57\x5b\xd\xa\135\53\x2f", '', $MZ);
        $MZ = str_replace("\x2d", '', $MZ);
        $MZ = str_replace("\x42\105\x47\111\x4e\40\x43\x45\122\124\111\x46\111\x43\101\x54\x45", '', $MZ);
        $MZ = str_replace("\x45\116\x44\40\x43\105\122\124\111\x46\111\x43\101\124\105", '', $MZ);
        $MZ = str_replace("\102\x45\x47\111\116\x20\x50\125\x42\x4c\x49\103\x20\x4b\x45\131", '', $MZ);
        $MZ = str_replace("\x45\x4e\104\x20\120\x55\102\x4c\111\x43\40\113\105\131", '', $MZ);
        $MZ = str_replace("\x20", '', $MZ);
        $MZ = chunk_split($MZ, 64, "\xd\xa");
        $MZ = "\55\55\x2d\x2d\55\x42\x45\x47\x49\x4e\x20\103\x45\x52\x54\x49\106\x49\103\101\x54\105\x2d\x2d\55\x2d\55\15\xa" . $MZ . "\x2d\55\55\x2d\55\105\x4e\x44\40\x43\105\x52\x54\x49\x46\111\103\101\124\105\55\x2d\55\x2d\55";
        return $MZ;
    }
    public static function sanitize_private_key($Lo)
    {
        $Lo = preg_replace("\x2f\133\15\12\x5d\x2b\x2f", '', $Lo);
        $Lo = str_replace("\55", '', $Lo);
        $Lo = str_replace("\x42\x45\x47\x49\x4e\40\x50\x52\111\126\x41\124\x45\x20\x4b\105\131", '', $Lo);
        $Lo = str_replace("\x45\116\104\40\x50\x52\111\x56\101\124\105\x20\113\x45\x59", '', $Lo);
        $Lo = str_replace("\40", '', $Lo);
        $Lo = chunk_split($Lo, 64, "\15\12");
        $Lo = "\x2d\x2d\x2d\55\x2d\x42\105\107\111\116\x20\x50\122\x49\126\x41\124\x45\40\x4b\x45\x59\55\x2d\x2d\x2d\x2d\15\xa" . $Lo . "\x2d\x2d\55\55\55\x45\116\104\40\x50\x52\x49\x56\x41\124\105\x20\113\105\x59\x2d\55\x2d\x2d\x2d";
        return $Lo;
    }
    public static function upload_metadata($rd, $EM = false)
    {
        if (!empty(\Drupal::config("\x6d\x69\156\151\x6f\162\141\156\147\145\x5f\x73\x61\155\x6c\56\x73\145\x74\164\151\156\x67\163")->get("\x6d\x69\156\151\x6f\162\141\x6e\x67\145\x5f\163\141\x6d\154\x5f\151\144\160\137\156\141\x6d\x65"))) {
            goto e7;
        }
        \Drupal::configFactory()->getEditable("\x6d\151\156\x69\x6f\x72\x61\156\x67\145\x5f\163\141\155\x6c\x2e\163\145\x74\164\x69\x6e\x67\163")->set("\155\151\156\x69\x6f\162\141\156\147\x65\137\x73\141\155\154\137\151\x64\160\x5f\156\141\x6d\145", "\111\144\145\x6e\164\151\164\171\x20\120\162\157\x76\x69\x64\145\162")->save();
        e7:
        $HT = new \DOMDocument();
        @$HT->loadXML($rd);
        restore_error_handler();
        $BZ = $HT->firstChild;
        if (!empty($BZ)) {
            goto T3;
        }
        \Drupal::messenger()->addMessage(t("\x50\x6c\145\x61\x73\x65\x20\160\162\x6f\166\x69\144\145\40\141\40\x76\141\x6c\151\x64\40\155\145\x74\x61\144\x61\x74\141\x20\146\x69\x6c\145\56"), "\x65\162\162\x6f\162");
        return;
        goto gC;
        T3:
        $ik = new MetadataReader($HT);
        $mw = $ik->getIdentityProviders();
        if (!empty($mw)) {
            goto hf;
        }
        \Drupal::messenger()->addMessage(t("\x50\154\x65\141\163\x65\x20\160\x72\x6f\x76\x69\144\x65\x20\x61\x20\x76\x61\154\x69\144\x20\155\x65\x74\x61\x64\141\x74\x61\40\146\x69\154\145\x2e"), "\x65\162\x72\x6f\162");
        return;
        hf:
        foreach ($mw as $eQ => $ma) {
            $J5 = $ma->getLoginURL("\110\x54\x54\120\55\122\x65\144\x69\162\x65\143\164");
            $JS = $ma->getLogoutURL("\110\x54\124\120\55\x52\x65\144\151\x72\145\143\164");
            if (!empty($J5)) {
                goto YW;
            }
            $J5 = $ma->getLoginURL("\110\x54\124\x50\55\120\x4f\x53\124");
            $J5 = $ma->getLoginURL("\110\x54\124\120\55\120\x4f\x53\x54");
            YW:
            if (!empty($JS)) {
                goto N2;
            }
            $JS = $ma->getLogoutURL("\x48\x54\124\x50\x2d\x50\x4f\x53\x54");
            N2:
            $Gg = $ma->getEntityID();
            $KM = $ma->getSigningCertificate();
            $DS = serialize($KM);
            if (!($EM == true)) {
                goto uD;
            }
            \Drupal::configFactory()->getEditable("\155\151\156\151\x6f\162\x61\156\x67\x65\x5f\163\141\x6d\154\x2e\x73\145\x74\164\x69\156\147\x73")->set("\155\151\156\x69\157\x72\x61\156\x67\145\x5f\163\141\x6d\x6c\x5f\151\144\x70\x5f\154\x6f\x67\157\x75\164\137\x75\x72\x6c", $JS)->save();
            \Drupal::configFactory()->getEditable("\x6d\151\x6e\x69\x6f\162\x61\x6e\147\145\137\163\x61\155\154\56\163\x65\164\x74\151\156\147\163")->set("\155\151\x6e\x69\157\x72\141\156\147\145\137\163\x61\155\154\137\151\x64\160\137\x6c\157\147\151\x6e\x5f\x75\162\x6c", $J5)->save();
            uD:
            \Drupal::configFactory()->getEditable("\x6d\x69\x6e\x69\x6f\162\x61\156\x67\x65\137\163\141\x6d\x6c\56\x73\145\x74\164\151\x6e\x67\163")->set("\x6d\151\x6e\151\x6f\x72\141\156\147\x65\137\x73\141\x6d\154\x5f\x69\144\x70\x5f\151\163\163\165\x65\x72", $Gg)->save();
            \Drupal::configFactory()->getEditable("\155\151\156\151\x6f\x72\x61\156\147\x65\x5f\163\141\x6d\x6c\x2e\163\145\164\x74\x69\156\x67\163")->set("\x6d\x69\156\151\157\x72\x61\x6e\147\x65\x5f\163\x61\155\154\x5f\x69\144\160\137\x63\145\x72\x74\151\x66\151\143\141\x74\145", $DS)->save();
            KG:
        }
        y3:
        if (!($EM == true)) {
            goto O1;
        }
        \Drupal::messenger()->addMessage(t("\x49\144\145\x6e\164\x69\x74\x79\40\x50\x72\157\166\151\x64\x65\162\40\103\x6f\156\146\x69\x67\165\162\141\x74\x69\157\x6e\x20\163\x75\143\143\145\163\x73\x66\x75\x6c\x6c\171\x20\163\141\166\145\x64\56"));
        return;
        O1:
        gC:
    }
    public static function getSamlRequestPlanName()
    {
        return MiniorangeSAMLConstants::PLUGIN_VERSION == MiniorangeSAMLConstants::ENTERPRISE_VERSION ? "\x64\162\x75\x70\x61\154\70\x5f\x6d\151\x6e\151\x6f\162\141\156\147\145\x5f\x73\141\x6d\x6c\137\x65\156\164\145\x72\x70\x72\x69\x73\145\137\x70\154\x61\x6e" : "\144\162\165\160\x61\154\x38\x5f\x6d\151\x6e\151\x6f\162\x61\x6e\147\x65\x5f\x73\x61\x6d\154\137\x70\162\x65\x6d\x69\165\x6d\x5f\160\x6c\x61\x6e";
    }
    public static function getSamlRequestPlanType()
    {
        return MiniorangeSAMLConstants::PLUGIN_VERSION == MiniorangeSAMLConstants::ENTERPRISE_VERSION ? "\104\122\x55\x50\x41\114\70\x5f\x53\101\115\114\x5f\x53\x50\137\105\x4e\124\x45\122\x50\x52\111\x53\x45\x5f\115\x4f\104\x55\114\105" : "\104\122\125\x50\x41\114\70\x5f\123\101\x4d\114\137\123\x50\x5f\x50\x52\x45\x4d\111\x55\x4d\x5f\115\x4f\104\125\114\x45";
    }
    public static function Print_SAML_Request($A6, $Hm)
    {
        header("\x43\x6f\x6e\x74\x65\156\164\55\x54\171\160\145\72\40\164\145\x78\x74\x2f\150\x74\x6d\x6c");
        $S9 = new \DOMDocument();
        $S9->preserveWhiteSpace = false;
        $S9->formatOutput = true;
        $S9->loadXML($A6);
        if ($Hm == "\x64\x69\x73\160\154\x61\171\x53\x41\115\x4c\x52\x65\161\165\145\x73\164") {
            goto fV;
        }
        $US = "\x53\101\115\x4c\40\x52\x65\x73\x70\157\156\x73\x65";
        goto S_;
        fV:
        $US = "\123\x41\115\x4c\x20\122\x65\x71\165\x65\x73\x74";
        S_:
        $pE = $S9->saveXML();
        $pG = htmlentities($pE);
        $pG = rtrim($pG);
        $Z0 = simplexml_load_string($pE);
        $i6 = json_encode($Z0);
        $gf = json_decode($i6);
        $nD = drupal_get_path("\155\157\144\x75\154\145", "\155\x69\156\x69\x6f\x72\x61\x6e\147\x65\137\x73\x61\155\154") . "\x2f\143\x73\x73\57\x6d\151\156\x69\157\162\141\x6e\x67\145\x5f\163\141\155\x6c\x2e\155\157\x64\x75\154\x65\x2e\x63\x73\x73";
        $Pv = drupal_get_path("\155\157\x64\x75\154\145", "\155\x69\x6e\x69\x6f\162\141\156\x67\x65\x5f\163\141\x6d\x6c") . "\x2f\152\x73\x2f\x73\x68\157\167\123\x41\x4d\114\122\x65\163\x70\x6f\x6e\163\x65\x2e\x6a\163";
        echo "\74\154\151\156\x6b\40\x72\145\154\75\x27\x73\164\171\154\145\163\x68\145\145\x74\47\40\x69\144\75\x27\155\x6f\x5f\x73\x61\x6d\154\x5f\x61\x64\x6d\x69\x6e\x5f\x73\x65\x74\x74\x69\156\147\x73\x5f\163\x74\171\154\x65\55\143\x73\x73\x27\x20\40\150\162\x65\146\x3d\47" . $nD . "\47\x20\164\171\160\x65\x3d\47\x74\x65\x78\x74\x2f\143\x73\163\x27\x20\155\145\144\x69\141\x3d\x27\141\x6c\154\x27\40\57\x3e\xd\xa\x20\40\x20\40\40\40\x20\x20\x20\40\x20\40\x3c\x73\143\x72\x69\x70\x74\x20\x73\x72\x63\x3d\42" . xss::filter($Pv) . "\42\x3e\x3c\x2f\163\x63\x72\x69\160\x74\76\15\xa\x9\11\11\x3c\x64\151\x76\40\143\154\x61\163\163\x3d\42\155\x6f\x2d\144\x69\x73\x70\x6c\x61\x79\55\x6c\x6f\x67\x73\x22\x20\x3e\74\160\40\164\x79\x70\x65\x3d\42\164\145\170\164\x22\40\x20\x20\x69\144\x3d\x22\123\x41\115\x4c\x5f\164\171\x70\x65\42\76" . xss::filter($US) . "\x3c\57\160\x3e\x3c\x2f\x64\x69\166\x3e\15\12\15\12\11\11\11\x3c\x64\151\166\x20\x74\171\x70\145\75\42\164\x65\x78\x74\x22\x20\151\x64\x3d\42\123\x41\115\114\x5f\144\x69\x73\x70\154\x61\x79\x22\x20\143\154\141\x73\163\x3d\42\155\x6f\x2d\144\151\x73\x70\x6c\141\171\x2d\142\154\x6f\x63\153\42\x3e\x3c\160\162\145\40\x63\154\x61\163\x73\x3d\x27\142\x72\165\163\150\x3a\x20\x78\x6d\x6c\73\x27\x3e" . xss::filter($pG) . "\74\57\160\162\x65\76\x3c\x2f\144\151\166\76\xd\12\11\11\x9\74\142\x72\x3e\15\xa\x9\x9\x9\74\144\151\x76\40\163\x74\171\x6c\145\75\x22\x6d\141\x72\x67\x69\156\x3a\x33\45\73\x64\x69\163\x70\x6c\x61\x79\x3a\x62\x6c\157\x63\153\73\164\145\x78\x74\x2d\x61\154\x69\147\156\x3a\143\x65\156\164\x65\162\x3b\42\76\15\xa\xd\12\11\11\11\74\x64\151\166\x20\163\x74\171\154\145\75\x22\155\x61\162\x67\x69\x6e\x3a\63\45\73\144\x69\x73\x70\154\141\x79\72\x62\154\157\x63\153\73\x74\x65\x78\x74\x2d\141\x6c\x69\x67\156\x3a\x63\x65\156\x74\x65\162\x3b\42\x20\76\xd\xa\15\12\x20\x20\40\40\x20\x20\x20\40\40\40\x20\40\x3c\x2f\x64\151\166\x3e\15\12\x9\x9\x9\74\x62\x75\x74\x74\157\x6e\40\151\144\x3d\42\x63\x6f\160\171\42\x20\x6f\x6e\143\154\x69\x63\x6b\75\42\x63\157\x70\x79\x44\x69\166\x54\157\103\154\x69\x70\x62\x6f\141\x72\x64\x28\51\x22\x20\40\x73\x74\x79\154\145\x3d\x22\x70\141\x64\144\151\x6e\x67\72\x31\x25\x3b\x77\x69\144\x74\x68\x3a\61\60\60\160\170\73\x62\x61\143\x6b\x67\x72\x6f\165\156\x64\x3a\x20\x23\x30\60\x39\61\x43\x44\x20\x6e\x6f\x6e\x65\x20\162\x65\160\x65\141\164\40\x73\x63\x72\x6f\154\154\40\60\x25\40\x30\45\73\x63\x75\162\x73\x6f\162\x3a\x20\160\x6f\151\156\x74\145\162\x3b\x66\157\x6e\x74\x2d\163\x69\x7a\145\x3a\x31\x35\x70\x78\73\142\157\162\144\x65\162\x2d\167\x69\144\164\x68\x3a\40\61\160\x78\x3b\142\x6f\x72\x64\x65\162\x2d\x73\164\x79\x6c\x65\x3a\x20\163\157\154\151\144\73\x62\157\162\144\145\162\x2d\x72\141\x64\x69\x75\163\x3a\40\x33\160\x78\73\167\x68\151\x74\x65\x2d\163\160\141\143\145\x3a\40\156\x6f\x77\162\x61\160\73\142\x6f\x78\55\163\151\172\x69\156\147\x3a\40\x62\x6f\x72\144\145\x72\x2d\x62\157\x78\73\142\157\162\144\x65\162\x2d\143\x6f\x6c\x6f\x72\x3a\x20\43\x30\60\67\63\x41\101\73\142\x6f\x78\55\x73\150\141\144\157\167\x3a\x20\60\160\170\40\x31\x70\x78\40\60\x70\170\x20\162\147\x62\141\50\61\62\x30\54\40\x32\60\x30\x2c\40\x32\63\x30\54\40\x30\x2e\x36\51\40\x69\x6e\163\145\164\73\143\157\154\157\162\x3a\x20\x23\106\106\x46\x3b\x22\x20\76\x43\157\160\171\x3c\x2f\x62\x75\164\164\x6f\156\x3e\xd\xa\11\x9\x9\46\156\142\x73\x70\73\15\xa\x20\40\x20\x20\x20\40\40\x20\40\x20\x20\40\x20\40\x20\x3c\142\x75\164\164\x6f\156\40\x69\144\x3d\x22\144\x77\x6e\x2d\142\164\x6e\x22\x20\x6f\156\143\154\x69\143\x6b\x3d\x22\144\157\x77\156\x6c\x6f\141\144\x28\51\x22\40\163\164\x79\154\x65\75\x22\x70\x61\144\144\151\156\x67\x3a\x31\45\x3b\167\151\x64\164\150\72\x31\60\60\160\x78\73\x62\x61\143\x6b\x67\162\x6f\x75\x6e\144\72\40\x23\60\x30\x39\61\103\104\x20\x6e\157\156\145\40\x72\x65\x70\x65\141\x74\x20\x73\x63\162\157\x6c\x6c\x20\x30\x25\40\x30\x25\x3b\143\x75\x72\x73\x6f\162\x3a\40\160\157\151\x6e\x74\x65\x72\x3b\x66\157\x6e\164\x2d\163\x69\x7a\x65\x3a\61\x35\x70\x78\73\142\157\x72\x64\x65\x72\x2d\x77\151\x64\x74\150\72\40\x31\160\x78\x3b\142\x6f\x72\x64\145\x72\55\163\x74\x79\154\x65\72\40\x73\x6f\x6c\x69\144\x3b\x62\x6f\162\144\145\162\55\162\x61\x64\x69\165\x73\72\40\63\x70\170\x3b\x77\x68\151\x74\145\x2d\163\160\x61\x63\145\72\40\156\157\x77\x72\141\160\x3b\x62\157\170\x2d\163\151\172\x69\156\x67\x3a\x20\142\157\x72\x64\x65\162\55\x62\x6f\170\x3b\x62\x6f\162\144\145\x72\x2d\x63\157\x6c\x6f\x72\72\x20\43\60\60\67\x33\101\x41\73\142\157\x78\55\x73\x68\x61\144\157\x77\x3a\x20\x30\x70\170\x20\x31\160\170\x20\x30\160\x78\40\162\x67\x62\x61\x28\x31\62\x30\x2c\40\62\x30\60\54\x20\62\63\60\x2c\40\x30\x2e\66\x29\x20\x69\x6e\163\x65\164\73\143\x6f\154\157\162\72\x20\43\x46\106\x46\73\42\x3e\104\157\167\156\154\157\x61\144\74\57\x62\165\x74\164\x6f\x6e\76\xd\xa\11\11\x9\74\57\144\x69\166\x3e\xd\xa\x9\11\x9\74\57\144\x69\x76\x3e\xd\xa\xd\12\x9\11\11";
        ob_end_flush();
        exit;
    }
    public static function getBaseUrl()
    {
        global $base_url;
        $fS = \Drupal::config("\x6d\151\156\151\157\162\x61\156\x67\x65\137\x73\x61\x6d\154\x2e\x73\145\164\x74\151\156\x67\x73")->get("\x6d\151\156\x69\157\x72\141\x6e\x67\145\x5f\x73\x61\x6d\x6c\x5f\x62\141\x73\145\137\x75\162\x6c");
        return isset($fS) && !empty($fS) ? $fS : $base_url;
    }
    public static function getIssuer()
    {
        $GT = \Drupal::config("\x6d\x69\x6e\151\157\x72\141\156\x67\x65\x5f\163\141\x6d\154\56\163\145\x74\164\151\x6e\147\x73")->get("\155\x69\156\151\157\162\x61\156\x67\x65\137\x73\141\155\154\x5f\145\x6e\164\151\164\x79\x5f\151\144");
        return isset($GT) && !empty($GT) ? $GT : self::getBaseUrl();
    }
    public static function getAcsUrl()
    {
        $u_ = self::getBaseUrl();
        return substr($u_, -1) == "\57" ? $u_ . "\x73\x61\x6d\154\141\163\163\145\x72\164\151\157\156" : $u_ . "\57\x73\x61\x6d\154\141\x73\x73\x65\x72\x74\151\157\156";
    }
    public static function getLogoutUrl()
    {
        $u_ = self::getBaseUrl();
        return substr($u_, -1) == "\x2f" ? $u_ . "\x75\x73\145\162\57\154\157\x67\x6f\165\164" : $u_ . "\x2f\x75\163\x65\x72\57\x6c\157\x67\157\x75\164";
    }
    public static function getPublicCertificate()
    {
        $Ls = \Drupal::config("\155\151\x6e\151\x6f\x72\141\x6e\x67\145\x5f\x73\141\x6d\x6c\56\x73\x65\164\x74\x69\156\147\x73")->get("\155\151\x6e\x69\157\162\141\x6e\147\145\x5f\x73\x61\155\x6c\x5f\x70\165\x62\x6c\x5f\x63\145\x72\164\x69\146\x69\143\141\164\x65");
        if (isset($Ls) && !empty($Ls)) {
            goto GR;
        }
        return MiniorangeSAMLConstants::MINIORANGE_PUBLIC_CERTIFICATE;
        goto eT;
        GR:
        return $Ls;
        eT:
    }
    public static function getPrivateKey()
    {
        $Ax = \Drupal::config("\155\x69\156\151\157\162\x61\x6e\x67\145\x5f\163\x61\x6d\154\x2e\x73\145\x74\x74\151\156\x67\163")->get("\x6d\151\x6e\x69\x6f\162\141\156\x67\x65\137\163\x61\155\x6c\x5f\160\162\x69\x76\x61\x74\x65\137\143\145\x72\164\x69\146\151\x63\141\x74\x65");
        $Wl = !is_null($Ax) && !empty($Ax) ? $Ax : MiniorangeSAMLConstants::MINIORANGE_PRIVATE_KEY;
        return $Wl;
    }
    public static function getIdpIssuer()
    {
        return \Drupal::config("\x6d\151\156\151\x6f\162\141\x6e\147\145\x5f\163\x61\x6d\154\56\x73\145\x74\x74\151\x6e\x67\163")->get("\155\x69\x6e\151\157\162\x61\x6e\x67\x65\x5f\163\x61\155\x6c\137\x69\144\160\x5f\151\163\x73\165\x65\162");
    }
    public static function getTestConfigUrl()
    {
        $uF = self::getBaseUrl() . "\57\77\161\x3d\164\x65\x73\164\103\x6f\x6e\146\x69\147";
        return "\x5c\x27" . $uF . "\134\x27";
    }
    public static function checkIfLogoutRequest($MB, $vi)
    {
        if (!(array_key_exists("\123\x41\x4d\114\122\x65\161\x75\145\x73\164", $MB) && !empty($MB["\x53\101\115\x4c\122\x65\161\165\x65\163\164"]))) {
            goto Br;
        }
        $Dd = htmlspecialchars($MB["\x53\101\x4d\114\x52\x65\x71\165\x65\163\164"]);
        $UL = "\x2f";
        if (!array_key_exists("\122\x65\x6c\141\x79\123\x74\x61\x74\145", $MB)) {
            goto Li;
        }
        $UL = htmlspecialchars($MB["\x52\145\154\x61\171\x53\164\x61\x74\145"]);
        Li:
        $Dd = base64_decode($Dd);
        if (!(array_key_exists("\x53\101\x4d\114\122\145\161\x75\145\163\x74", $vi) && !empty($_GET["\123\x41\115\114\122\145\x71\x75\x65\x73\x74"]))) {
            goto Qa;
        }
        $Dd = gzinflate($Dd);
        Qa:
        $HT = new DOMDocument();
        $HT->loadXML($Dd);
        $LM = $HT->firstChild;
        if (!($LM->localName == "\114\x6f\147\157\x75\x74\122\x65\x71\165\x65\x73\164")) {
            goto Ee;
        }
        $nZ = new LogoutRequest($LM);
        $DJ = $nZ->getId();
        $Ie = $nZ->getIssuer();
        $y8 = \Drupal::config("\155\x69\156\x69\157\162\141\156\147\145\137\x73\141\x6d\154\x2e\163\x65\x74\164\151\156\147\163");
        $c3 = $y8->get("\163\x65\x63\165\162\x69\x74\171\x5f\163\151\147\x6e\141\x74\165\162\x65\137\x61\154\147\x6f\x72\x69\x74\150\155");
        $zH = $y8->get("\x6d\151\x6e\151\x6f\162\141\156\147\145\137\x73\141\x6d\154\x5f\x69\144\x70\x5f\x6c\x6f\147\x6f\x75\164\x5f\x75\x72\154");
        if (is_null($zH) || empty($zH)) {
            goto F8;
        }
        $ap = \Drupal::request();
        $ap->getSession()->clear();
        self::createLogoutResponseAndRedirect($zH, $c3, $DJ, $UL);
        $DI = new RedirectResponse(Utilities::getBaseUrl());
        $DI->send();
        return new Response();
        goto a3;
        F8:
        return 0;
        a3:
        Ee:
        Br:
        return 0;
    }
    public static function createLogoutResponseAndRedirect($zH, $c3, $DJ, $Nd)
    {
        $l_ = self::createLogoutResponse($zH, $DJ);
        $NG = self::signXML($l_, Utilities::getPublicCertificate(), Utilities::getPrivateKey(), $c3, "\x53\164\x61\x74\x75\x73");
        Utilities::postSAMLRequest($zH, $NG, $Nd, TRUE);
    }
    public static function createLogoutResponse($zH, $DJ, $gV = "\110\x74\x74\160\120\157\x73\x74")
    {
        $KO = "\x3c\x3f\170\155\x6c\40\166\145\x72\163\151\157\x6e\75\42\61\56\x30\42\40\145\156\x63\x6f\x64\x69\156\147\x3d\x22\125\x54\x46\x2d\x38\x22\77\x3e\x3c\x73\141\x6d\154\160\x3a\114\157\147\x6f\165\x74\x52\x65\x73\160\157\156\x73\145\x20\170\155\x6c\156\x73\72\163\x61\x6d\154\160\x3d\42\x75\x72\156\x3a\157\x61\163\x69\x73\x3a\156\141\155\x65\x73\x3a\164\x63\72\x53\101\x4d\114\x3a\62\56\x30\x3a\x70\x72\157\164\157\143\x6f\x6c\42\x20\170\x6d\154\x6e\x73\x3a\163\141\155\154\75\x22\165\162\x6e\72\157\141\x73\151\x73\x3a\156\x61\155\145\163\72\x74\x63\x3a\x53\x41\x4d\114\x3a\62\56\60\72\x61\163\x73\145\x72\x74\x69\157\x6e\x22\x20\111\104\75\x22" . self::generateID() . "\x22\40\126\145\x72\163\x69\157\156\x3d\42\x32\56\x30\x22\x20\x49\x73\x73\x75\145\111\156\x73\x74\141\x6e\164\75\x22" . self::generateTimestamp() . "\42\x20\104\145\x73\x74\151\x6e\141\x74\x69\157\x6e\x3d\42" . htmlspecialchars($zH) . "\x22\40\x49\x6e\x52\x65\163\x70\x6f\x6e\163\x65\x54\x6f\x3d\x22" . $DJ . "\42\76\x3c\163\141\x6d\154\x3a\111\163\163\x75\145\x72\40\x78\x6d\154\156\163\x3a\163\141\155\154\75\42\165\162\156\72\x6f\141\x73\151\x73\72\156\141\155\x65\x73\x3a\x74\143\x3a\123\101\x4d\114\x3a\62\x2e\x30\x3a\x61\163\x73\145\162\164\x69\x6f\x6e\42\x3e" . htmlspecialchars(self::getIssuer()) . "\74\57\x73\x61\155\x6c\72\x49\x73\x73\x75\145\x72\x3e\x3c\163\x61\155\154\160\x3a\x53\x74\141\164\165\163\x3e\x3c\163\x61\155\x6c\160\x3a\123\164\141\164\165\163\x43\157\x64\x65\x20\126\141\x6c\165\x65\x3d\x22\165\x72\x6e\72\x6f\x61\163\151\x73\x3a\156\x61\155\145\163\72\x74\143\72\x53\x41\x4d\114\72\x32\56\60\x3a\163\164\x61\x74\x75\163\x3a\123\x75\143\x63\145\163\x73\42\57\x3e\x3c\57\x73\x61\155\154\x70\72\123\x74\141\x74\165\x73\76\74\x2f\x73\x61\x6d\x6c\x70\72\x4c\157\147\157\165\x74\x52\145\163\x70\157\156\x73\145\76";
        if (!(empty($gV) || $gV == "\110\x74\164\x70\x52\x65\x64\151\162\x65\143\164")) {
            goto pM;
        }
        $rG = gzdeflate($KO);
        $S2 = base64_encode($rG);
        $dU = urlencode($S2);
        $KO = $dU;
        pM:
        return $KO;
    }
    public static function mo_add_premium_tag($ti)
    {
        if (!($ti == MiniorangeSAMLConstants::PLUGIN_VERSION)) {
            goto Kg;
        }
        return '';
        Kg:
        global $base_url;
        $nD = $base_url . MiniorangeSAMLConstants::LICENSING_TAB_URL;
        $Vz = "\74\x61\40\150\162\145\x66\75\40\42" . $nD . "\x22\x20\x73\164\x79\x6c\145\75\42\x63\157\x6c\157\x72\x3a\40\162\x65\x64\x3b\x20\146\157\156\164\55\167\145\151\x67\x68\164\72\x20\154\151\x67\x68\x74\x65\162\x3b\42\76\x5b" . $ti . "\135\74\57\x61\76";
        return $Vz;
    }
    public static function mo_get_drupal_core_version()
    {
        return \DRUPAL::VERSION;
    }
    public static function mo_add_loggers($s0, $EM, $Hm)
    {
        \Drupal::logger("\x6d\151\156\x69\x6f\x72\141\x6e\147\145\137\163\141\155\154")->{$Hm}("\40\x43\117\x44\x45\x3a" . $s0 . "\40\x7c\x20" . $EM);
    }
    public static function moGetModuleType()
    {
        if (!(MiniorangeSAMLConstants::MODULE_TYPE === MiniorangeSAMLConstants::INTERNET_VERSION)) {
            goto Ns;
        }
        return TRUE;
        Ns:
        return FALSE;
    }
    public static function moStoreDomainInDatabase($eQ, $sZ = 0)
    {
        global $base_url;
        global $sR;
        $d6 = \Drupal::configFactory()->getEditable("\155\151\x6e\x69\x6f\162\x61\x6e\147\145\137\163\141\155\x6c\56\163\x65\164\164\151\x6e\147\163");
        $pi = \Drupal::request()->server->get("\104\117\103\125\x4d\x45\116\x54\137\x52\117\x4f\124") . $sR;
        $al = trim($base_url, "\x2f");
        if (preg_match("\x23\x5e\x68\164\x74\160\50\163\x29\77\x3a\57\x2f\43", $al)) {
            goto EF;
        }
        $al = "\150\x74\x74\x70\72\x2f\x2f" . $al;
        EF:
        $to = parse_url($al);
        $jo = isset($to["\160\141\x74\x68"]) ? $to["\x70\141\x74\x68"] : '';
        $HQ = preg_replace("\x2f\136\x77\x77\167\134\56\x2f", '', $to["\150\x6f\x73\164"] . $jo);
        $fv = $pi . $HQ;
        if ($sZ == 0) {
            goto hm;
        }
        return $fv;
        goto Un;
        hm:
        $d6->set("\x6d\x69\156\157\x72\x61\156\x67\x65\137\x73\x61\155\x6c\137\143\x75\x73\164\157\155\x65\x72\137\141\144\155\151\x6e\137\146\162\141\165\x64\137\143\x68\145\143\x6b", AESEncryption::encrypt_data($fv, $eQ))->save();
        Un:
    }
    public static function mo_save_expiry_details($QL)
    {
        $JE = isset($QL["\154\x69\x63\x65\x6e\x73\145\105\x78\x70\x69\x72\x79"]) ? date("\154\54\40\x6a\x53\40\106\40\x59\x20\147\x3a\x69\40\x41", strtotime($QL["\x6c\151\143\145\156\163\x65\x45\170\x70\151\162\171"])) : "\x2d";
        $WA = isset($QL["\163\165\160\x70\x6f\162\164\105\x78\160\x69\x72\x79"]) ? date("\x6c\54\40\152\123\x20\x46\40\131\x20\x67\72\151\x20\x41", strtotime($QL["\x73\x75\160\160\x6f\x72\x74\x45\170\x70\151\162\171"])) : "\55";
        $wb = isset($QL["\x6c\151\x63\x65\156\x73\x65\124\171\160\x65"]) ? $QL["\x6c\x69\143\x65\156\163\145\124\x79\x70\x65"] : "\55";
        $Ub = isset($QL["\x6c\151\x63\x65\x6e\x73\145\120\x6c\x61\x6e"]) ? $QL["\154\151\x63\x65\x6e\x73\x65\x50\x6c\141\x6e"] : "\55";
        $d6 = \Drupal::configFactory()->getEditable("\x6d\151\x6e\151\x6f\x72\141\x6e\147\x65\137\x73\x61\x6d\154\x2e\163\145\164\164\x69\156\147\163");
        $d6->set("\155\151\x6e\x69\157\x72\141\x6e\147\x65\x5f\x6d\x61\x69\x6e\164\145\x6e\x61\156\143\145\137\x65\x78\x70\x69\162\x79", $JE)->save();
        $d6->set("\155\151\x6e\151\157\x72\x61\x6e\147\145\137\x73\165\160\160\157\162\x74\137\x65\x78\x70\151\162\x79", $WA)->save();
        $d6->set("\x6d\x69\x6e\x69\x6f\162\x61\156\147\x65\137\x6c\x69\143\x65\156\x73\x65\x5f\x74\x79\160\145", $wb)->save();
        $d6->set("\x6d\151\x6e\x69\157\x72\141\x6e\x67\145\x5f\x6c\x69\x63\x65\156\x73\x65\x5f\160\154\x61\x6e", $Ub)->save();
        $d6->set("\155\151\156\x69\x6f\162\141\156\147\145\137\163\141\155\x6c\x5f\151\163\115\165\154\x74\151\123\151\164\145\120\x6c\165\x67\x69\156\x52\x65\161\165\x65\x73\x74\145\x64", isset($QL["\151\x73\x4d\165\154\x74\151\x53\x69\164\x65\x50\154\x75\x67\x69\x6e\x52\x65\161\x75\x65\163\164\145\144"]) ? $QL["\151\163\x4d\165\154\x74\151\x53\151\164\145\x50\x6c\x75\x67\151\x6e\122\145\x71\x75\x65\163\164\145\144"] : false)->save();
    }
    public static function getUpgradeURL($vs)
    {
        $jn = \Drupal::config("\155\151\x6e\151\157\x72\x61\x6e\147\145\x5f\163\x61\x6d\154\x2e\163\145\164\164\x69\x6e\x67\x73")->get("\155\x69\156\151\x6f\x72\141\156\x67\145\137\x73\x61\155\x6c\137\143\165\x73\x74\157\155\145\x72\x5f\141\144\x6d\x69\x6e\x5f\145\x6d\141\151\x6c");
        return "\x68\x74\x74\x70\x73\x3a\57\57\154\157\147\151\x6e\56\170\x65\143\x75\x72\151\x66\x79\56\143\x6f\155\57\155\157\141\163\57\x6c\x6f\x67\x69\156\x3f\165\163\x65\x72\x6e\x61\x6d\145\75" . $jn . "\46\x72\145\x64\151\162\145\143\x74\125\162\154\x3d\150\164\x74\x70\163\72\57\x2f\154\x6f\147\x69\x6e\x2e\170\x65\x63\165\162\151\146\x79\56\143\157\155\x2f\x6d\x6f\141\163\57\141\144\x6d\x69\156\x2f\x63\165\163\x74\157\155\x65\x72\x2f\x6c\x69\x63\145\156\x73\x65\162\x65\156\x65\167\141\x6c\x73\77\x72\145\156\x65\x77\141\154\x72\x65\161\x75\x65\x73\x74\75" . $vs;
    }
    public static function getIsLicenseExpired($OM)
    {
        if (!($OM != null)) {
            goto iN;
        }
        $wM = intval((strtotime($OM) - time()) / (60 * 60 * 24));
        $NB = array();
        $NB["\114\151\143\145\x6e\x73\x65\107\x6f\x69\x6e\x67\124\x6f\x45\170\160\x69\162\145"] = $wM < 35 ? TRUE : FALSE;
        $NB["\x4c\x69\143\x65\156\x73\145\101\154\x72\145\x61\144\171\x45\170\160\x69\162\x65\x64"] = $wM < 0 ? TRUE : FALSE;
        return $NB;
        iN:
    }
    public static function getRedirectUrAfterLogout($Xm)
    {
        $pX = $Xm;
        if (empty(trim(\Drupal::config("\x6d\x69\156\x69\157\x72\141\156\x67\x65\137\x73\141\x6d\154\56\x73\145\164\164\x69\x6e\x67\163")->get("\x6d\x69\156\x69\157\162\141\x6e\147\x65\137\x73\141\x6d\x6c\x5f\144\x65\146\141\x75\x6c\164\137\x72\x65\144\x69\162\x65\143\164\x5f\x75\162\x6c\x5f\x61\146\164\145\162\x5f\x6c\157\x67\157\165\164")))) {
            goto Dc;
        }
        $pX = trim(\Drupal::config("\155\x69\156\x69\x6f\x72\141\156\x67\145\137\x73\x61\x6d\x6c\56\163\x65\x74\164\151\156\x67\x73")->get("\x6d\x69\156\151\157\162\x61\x6e\147\x65\137\x73\141\x6d\x6c\137\144\145\146\x61\x75\154\164\x5f\x72\x65\144\x69\162\x65\x63\x74\137\x75\x72\x6c\137\141\x66\x74\x65\x72\x5f\x6c\157\x67\157\x75\164"));
        $pX = parse_url($pX, PHP_URL_HOST) == parse_url($Xm, PHP_URL_HOST) ? $pX : $Xm . "\57" . ltrim($pX, "\134");
        Dc:
        return $pX;
    }
}
